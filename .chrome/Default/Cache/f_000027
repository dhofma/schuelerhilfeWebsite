(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["vendors~352ca8b2"],{

/***/ "3Kci":
/*!*************************************************************************!*\
  !*** ./node_modules/msal/lib-es6/error/InteractionRequiredAuthError.js ***!
  \*************************************************************************/
/*! exports provided: InteractionRequiredAuthErrorMessage, InteractionRequiredAuthError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"InteractionRequiredAuthErrorMessage\", function() { return InteractionRequiredAuthErrorMessage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"InteractionRequiredAuthError\", function() { return InteractionRequiredAuthError; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"mrSG\");\n/* harmony import */ var _ServerError__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ServerError */ \"JKGV\");\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\n\r\nvar InteractionRequiredAuthErrorMessage = {\r\n    interactionRequired: {\r\n        code: \"interaction_required\"\r\n    },\r\n    consentRequired: {\r\n        code: \"consent_required\"\r\n    },\r\n    loginRequired: {\r\n        code: \"login_required\"\r\n    },\r\n};\r\n/**\r\n * Error thrown when the user is required to perform an interactive token request.\r\n */\r\nvar InteractionRequiredAuthError = /** @class */ (function (_super) {\r\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"](InteractionRequiredAuthError, _super);\r\n    function InteractionRequiredAuthError(errorCode, errorMessage) {\r\n        var _this = _super.call(this, errorCode, errorMessage) || this;\r\n        _this.name = \"InteractionRequiredAuthError\";\r\n        Object.setPrototypeOf(_this, InteractionRequiredAuthError.prototype);\r\n        return _this;\r\n    }\r\n    InteractionRequiredAuthError.isInteractionRequiredError = function (errorString) {\r\n        var interactionRequiredCodes = [\r\n            InteractionRequiredAuthErrorMessage.interactionRequired.code,\r\n            InteractionRequiredAuthErrorMessage.consentRequired.code,\r\n            InteractionRequiredAuthErrorMessage.loginRequired.code\r\n        ];\r\n        return errorString && interactionRequiredCodes.indexOf(errorString) > -1;\r\n    };\r\n    InteractionRequiredAuthError.createLoginRequiredAuthError = function (errorDesc) {\r\n        return new InteractionRequiredAuthError(InteractionRequiredAuthErrorMessage.loginRequired.code, errorDesc);\r\n    };\r\n    InteractionRequiredAuthError.createInteractionRequiredAuthError = function (errorDesc) {\r\n        return new InteractionRequiredAuthError(InteractionRequiredAuthErrorMessage.interactionRequired.code, errorDesc);\r\n    };\r\n    InteractionRequiredAuthError.createConsentRequiredAuthError = function (errorDesc) {\r\n        return new InteractionRequiredAuthError(InteractionRequiredAuthErrorMessage.consentRequired.code, errorDesc);\r\n    };\r\n    return InteractionRequiredAuthError;\r\n}(_ServerError__WEBPACK_IMPORTED_MODULE_1__[\"ServerError\"]));\r\n\r\n//# sourceMappingURL=InteractionRequiredAuthError.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiM0tjaS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9tc2FsL2xpYi1lczYvZXJyb3IvSW50ZXJhY3Rpb25SZXF1aXJlZEF1dGhFcnJvci5qcz9kY2E3Il0sInNvdXJjZXNDb250ZW50IjpbIi8qXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbiAqL1xyXG5pbXBvcnQgKiBhcyB0c2xpYl8xIGZyb20gXCJ0c2xpYlwiO1xyXG5pbXBvcnQgeyBTZXJ2ZXJFcnJvciB9IGZyb20gXCIuL1NlcnZlckVycm9yXCI7XHJcbmV4cG9ydCB2YXIgSW50ZXJhY3Rpb25SZXF1aXJlZEF1dGhFcnJvck1lc3NhZ2UgPSB7XHJcbiAgICBpbnRlcmFjdGlvblJlcXVpcmVkOiB7XHJcbiAgICAgICAgY29kZTogXCJpbnRlcmFjdGlvbl9yZXF1aXJlZFwiXHJcbiAgICB9LFxyXG4gICAgY29uc2VudFJlcXVpcmVkOiB7XHJcbiAgICAgICAgY29kZTogXCJjb25zZW50X3JlcXVpcmVkXCJcclxuICAgIH0sXHJcbiAgICBsb2dpblJlcXVpcmVkOiB7XHJcbiAgICAgICAgY29kZTogXCJsb2dpbl9yZXF1aXJlZFwiXHJcbiAgICB9LFxyXG59O1xyXG4vKipcclxuICogRXJyb3IgdGhyb3duIHdoZW4gdGhlIHVzZXIgaXMgcmVxdWlyZWQgdG8gcGVyZm9ybSBhbiBpbnRlcmFjdGl2ZSB0b2tlbiByZXF1ZXN0LlxyXG4gKi9cclxudmFyIEludGVyYWN0aW9uUmVxdWlyZWRBdXRoRXJyb3IgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XHJcbiAgICB0c2xpYl8xLl9fZXh0ZW5kcyhJbnRlcmFjdGlvblJlcXVpcmVkQXV0aEVycm9yLCBfc3VwZXIpO1xyXG4gICAgZnVuY3Rpb24gSW50ZXJhY3Rpb25SZXF1aXJlZEF1dGhFcnJvcihlcnJvckNvZGUsIGVycm9yTWVzc2FnZSkge1xyXG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMsIGVycm9yQ29kZSwgZXJyb3JNZXNzYWdlKSB8fCB0aGlzO1xyXG4gICAgICAgIF90aGlzLm5hbWUgPSBcIkludGVyYWN0aW9uUmVxdWlyZWRBdXRoRXJyb3JcIjtcclxuICAgICAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YoX3RoaXMsIEludGVyYWN0aW9uUmVxdWlyZWRBdXRoRXJyb3IucHJvdG90eXBlKTtcclxuICAgICAgICByZXR1cm4gX3RoaXM7XHJcbiAgICB9XHJcbiAgICBJbnRlcmFjdGlvblJlcXVpcmVkQXV0aEVycm9yLmlzSW50ZXJhY3Rpb25SZXF1aXJlZEVycm9yID0gZnVuY3Rpb24gKGVycm9yU3RyaW5nKSB7XHJcbiAgICAgICAgdmFyIGludGVyYWN0aW9uUmVxdWlyZWRDb2RlcyA9IFtcclxuICAgICAgICAgICAgSW50ZXJhY3Rpb25SZXF1aXJlZEF1dGhFcnJvck1lc3NhZ2UuaW50ZXJhY3Rpb25SZXF1aXJlZC5jb2RlLFxyXG4gICAgICAgICAgICBJbnRlcmFjdGlvblJlcXVpcmVkQXV0aEVycm9yTWVzc2FnZS5jb25zZW50UmVxdWlyZWQuY29kZSxcclxuICAgICAgICAgICAgSW50ZXJhY3Rpb25SZXF1aXJlZEF1dGhFcnJvck1lc3NhZ2UubG9naW5SZXF1aXJlZC5jb2RlXHJcbiAgICAgICAgXTtcclxuICAgICAgICByZXR1cm4gZXJyb3JTdHJpbmcgJiYgaW50ZXJhY3Rpb25SZXF1aXJlZENvZGVzLmluZGV4T2YoZXJyb3JTdHJpbmcpID4gLTE7XHJcbiAgICB9O1xyXG4gICAgSW50ZXJhY3Rpb25SZXF1aXJlZEF1dGhFcnJvci5jcmVhdGVMb2dpblJlcXVpcmVkQXV0aEVycm9yID0gZnVuY3Rpb24gKGVycm9yRGVzYykge1xyXG4gICAgICAgIHJldHVybiBuZXcgSW50ZXJhY3Rpb25SZXF1aXJlZEF1dGhFcnJvcihJbnRlcmFjdGlvblJlcXVpcmVkQXV0aEVycm9yTWVzc2FnZS5sb2dpblJlcXVpcmVkLmNvZGUsIGVycm9yRGVzYyk7XHJcbiAgICB9O1xyXG4gICAgSW50ZXJhY3Rpb25SZXF1aXJlZEF1dGhFcnJvci5jcmVhdGVJbnRlcmFjdGlvblJlcXVpcmVkQXV0aEVycm9yID0gZnVuY3Rpb24gKGVycm9yRGVzYykge1xyXG4gICAgICAgIHJldHVybiBuZXcgSW50ZXJhY3Rpb25SZXF1aXJlZEF1dGhFcnJvcihJbnRlcmFjdGlvblJlcXVpcmVkQXV0aEVycm9yTWVzc2FnZS5pbnRlcmFjdGlvblJlcXVpcmVkLmNvZGUsIGVycm9yRGVzYyk7XHJcbiAgICB9O1xyXG4gICAgSW50ZXJhY3Rpb25SZXF1aXJlZEF1dGhFcnJvci5jcmVhdGVDb25zZW50UmVxdWlyZWRBdXRoRXJyb3IgPSBmdW5jdGlvbiAoZXJyb3JEZXNjKSB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBJbnRlcmFjdGlvblJlcXVpcmVkQXV0aEVycm9yKEludGVyYWN0aW9uUmVxdWlyZWRBdXRoRXJyb3JNZXNzYWdlLmNvbnNlbnRSZXF1aXJlZC5jb2RlLCBlcnJvckRlc2MpO1xyXG4gICAgfTtcclxuICAgIHJldHVybiBJbnRlcmFjdGlvblJlcXVpcmVkQXV0aEVycm9yO1xyXG59KFNlcnZlckVycm9yKSk7XHJcbmV4cG9ydCB7IEludGVyYWN0aW9uUmVxdWlyZWRBdXRoRXJyb3IgfTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9SW50ZXJhY3Rpb25SZXF1aXJlZEF1dGhFcnJvci5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///3Kci\n");

/***/ }),

/***/ "5wbO":
/*!************************************************!*\
  !*** ./node_modules/msal/lib-es6/XHRClient.js ***!
  \************************************************/
/*! exports provided: XhrClient */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(Promise) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"XhrClient\", function() { return XhrClient; });\n/* harmony import */ var _utils_Constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/Constants */ \"wmgs\");\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\n/**\r\n * XHR client for JSON endpoints\r\n * https://www.npmjs.com/package/async-promise\r\n * @hidden\r\n */\r\nvar XhrClient = /** @class */ (function () {\r\n    function XhrClient() {\r\n    }\r\n    XhrClient.prototype.sendRequestAsync = function (url, method, enableCaching) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.open(method, url, /* async: */ true);\r\n            if (enableCaching) {\r\n                /*\r\n                 * TODO: (shivb) ensure that this can be cached\r\n                 * xhr.setRequestHeader(\"Cache-Control\", \"Public\");\r\n                 */\r\n            }\r\n            xhr.onload = function () {\r\n                if (xhr.status < 200 || xhr.status >= 300) {\r\n                    reject(_this.handleError(xhr.responseText));\r\n                }\r\n                var jsonResponse;\r\n                try {\r\n                    jsonResponse = JSON.parse(xhr.responseText);\r\n                }\r\n                catch (e) {\r\n                    reject(_this.handleError(xhr.responseText));\r\n                }\r\n                var response = {\r\n                    statusCode: xhr.status,\r\n                    body: jsonResponse\r\n                };\r\n                resolve(response);\r\n            };\r\n            xhr.onerror = function () {\r\n                reject(xhr.status);\r\n            };\r\n            if (method === _utils_Constants__WEBPACK_IMPORTED_MODULE_0__[\"NetworkRequestType\"].GET) {\r\n                xhr.send();\r\n            }\r\n            else {\r\n                throw \"not implemented\";\r\n            }\r\n        });\r\n    };\r\n    XhrClient.prototype.handleError = function (responseText) {\r\n        var jsonResponse;\r\n        try {\r\n            jsonResponse = JSON.parse(responseText);\r\n            if (jsonResponse.error) {\r\n                return jsonResponse.error;\r\n            }\r\n            else {\r\n                throw responseText;\r\n            }\r\n        }\r\n        catch (e) {\r\n            return responseText;\r\n        }\r\n    };\r\n    return XhrClient;\r\n}());\r\n\r\n//# sourceMappingURL=XHRClient.js.map\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! promise-polyfill */ \"B/eG\")[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNXdiTy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9tc2FsL2xpYi1lczYvWEhSQ2xpZW50LmpzP2U3MDYiXSwic291cmNlc0NvbnRlbnQiOlsiLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbmltcG9ydCB7IE5ldHdvcmtSZXF1ZXN0VHlwZSB9IGZyb20gXCIuL3V0aWxzL0NvbnN0YW50c1wiO1xyXG4vKipcclxuICogWEhSIGNsaWVudCBmb3IgSlNPTiBlbmRwb2ludHNcclxuICogaHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvYXN5bmMtcHJvbWlzZVxyXG4gKiBAaGlkZGVuXHJcbiAqL1xyXG52YXIgWGhyQ2xpZW50ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xyXG4gICAgZnVuY3Rpb24gWGhyQ2xpZW50KCkge1xyXG4gICAgfVxyXG4gICAgWGhyQ2xpZW50LnByb3RvdHlwZS5zZW5kUmVxdWVzdEFzeW5jID0gZnVuY3Rpb24gKHVybCwgbWV0aG9kLCBlbmFibGVDYWNoaW5nKSB7XHJcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcclxuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xyXG4gICAgICAgICAgICB2YXIgeGhyID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XHJcbiAgICAgICAgICAgIHhoci5vcGVuKG1ldGhvZCwgdXJsLCAvKiBhc3luYzogKi8gdHJ1ZSk7XHJcbiAgICAgICAgICAgIGlmIChlbmFibGVDYWNoaW5nKSB7XHJcbiAgICAgICAgICAgICAgICAvKlxyXG4gICAgICAgICAgICAgICAgICogVE9ETzogKHNoaXZiKSBlbnN1cmUgdGhhdCB0aGlzIGNhbiBiZSBjYWNoZWRcclxuICAgICAgICAgICAgICAgICAqIHhoci5zZXRSZXF1ZXN0SGVhZGVyKFwiQ2FjaGUtQ29udHJvbFwiLCBcIlB1YmxpY1wiKTtcclxuICAgICAgICAgICAgICAgICAqL1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHhoci5vbmxvYWQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoeGhyLnN0YXR1cyA8IDIwMCB8fCB4aHIuc3RhdHVzID49IDMwMCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHJlamVjdChfdGhpcy5oYW5kbGVFcnJvcih4aHIucmVzcG9uc2VUZXh0KSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB2YXIganNvblJlc3BvbnNlO1xyXG4gICAgICAgICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgICAgICAgICBqc29uUmVzcG9uc2UgPSBKU09OLnBhcnNlKHhoci5yZXNwb25zZVRleHQpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgY2F0Y2ggKGUpIHtcclxuICAgICAgICAgICAgICAgICAgICByZWplY3QoX3RoaXMuaGFuZGxlRXJyb3IoeGhyLnJlc3BvbnNlVGV4dCkpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgdmFyIHJlc3BvbnNlID0ge1xyXG4gICAgICAgICAgICAgICAgICAgIHN0YXR1c0NvZGU6IHhoci5zdGF0dXMsXHJcbiAgICAgICAgICAgICAgICAgICAgYm9keToganNvblJlc3BvbnNlXHJcbiAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgcmVzb2x2ZShyZXNwb25zZSk7XHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgIHhoci5vbmVycm9yID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgcmVqZWN0KHhoci5zdGF0dXMpO1xyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICBpZiAobWV0aG9kID09PSBOZXR3b3JrUmVxdWVzdFR5cGUuR0VUKSB7XHJcbiAgICAgICAgICAgICAgICB4aHIuc2VuZCgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGhyb3cgXCJub3QgaW1wbGVtZW50ZWRcIjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfTtcclxuICAgIFhockNsaWVudC5wcm90b3R5cGUuaGFuZGxlRXJyb3IgPSBmdW5jdGlvbiAocmVzcG9uc2VUZXh0KSB7XHJcbiAgICAgICAgdmFyIGpzb25SZXNwb25zZTtcclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICBqc29uUmVzcG9uc2UgPSBKU09OLnBhcnNlKHJlc3BvbnNlVGV4dCk7XHJcbiAgICAgICAgICAgIGlmIChqc29uUmVzcG9uc2UuZXJyb3IpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBqc29uUmVzcG9uc2UuZXJyb3I7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB0aHJvdyByZXNwb25zZVRleHQ7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgY2F0Y2ggKGUpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlVGV4dDtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIFhockNsaWVudDtcclxufSgpKTtcclxuZXhwb3J0IHsgWGhyQ2xpZW50IH07XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVhIUkNsaWVudC5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///5wbO\n");

/***/ }),

/***/ "66Uo":
/*!*************************************************************!*\
  !*** ./node_modules/msal/lib-es6/cache/AccessTokenValue.js ***!
  \*************************************************************/
/*! exports provided: AccessTokenValue */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AccessTokenValue\", function() { return AccessTokenValue; });\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * @hidden\r\n */\r\nvar AccessTokenValue = /** @class */ (function () {\r\n    function AccessTokenValue(accessToken, idToken, expiresIn, homeAccountIdentifier) {\r\n        this.accessToken = accessToken;\r\n        this.idToken = idToken;\r\n        this.expiresIn = expiresIn;\r\n        this.homeAccountIdentifier = homeAccountIdentifier;\r\n    }\r\n    return AccessTokenValue;\r\n}());\r\n\r\n//# sourceMappingURL=AccessTokenValue.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjZVby5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9tc2FsL2xpYi1lczYvY2FjaGUvQWNjZXNzVG9rZW5WYWx1ZS5qcz9lYmE1Il0sInNvdXJjZXNDb250ZW50IjpbIi8qXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbiAqL1xyXG4vKipcclxuICogQGhpZGRlblxyXG4gKi9cclxudmFyIEFjY2Vzc1Rva2VuVmFsdWUgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XHJcbiAgICBmdW5jdGlvbiBBY2Nlc3NUb2tlblZhbHVlKGFjY2Vzc1Rva2VuLCBpZFRva2VuLCBleHBpcmVzSW4sIGhvbWVBY2NvdW50SWRlbnRpZmllcikge1xyXG4gICAgICAgIHRoaXMuYWNjZXNzVG9rZW4gPSBhY2Nlc3NUb2tlbjtcclxuICAgICAgICB0aGlzLmlkVG9rZW4gPSBpZFRva2VuO1xyXG4gICAgICAgIHRoaXMuZXhwaXJlc0luID0gZXhwaXJlc0luO1xyXG4gICAgICAgIHRoaXMuaG9tZUFjY291bnRJZGVudGlmaWVyID0gaG9tZUFjY291bnRJZGVudGlmaWVyO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIEFjY2Vzc1Rva2VuVmFsdWU7XHJcbn0oKSk7XHJcbmV4cG9ydCB7IEFjY2Vzc1Rva2VuVmFsdWUgfTtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QWNjZXNzVG9rZW5WYWx1ZS5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///66Uo\n");

/***/ }),

/***/ "7ZR7":
/*!************************************************************!*\
  !*** ./node_modules/msal/lib-es6/error/ClientAuthError.js ***!
  \************************************************************/
/*! exports provided: ClientAuthErrorMessage, ClientAuthError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ClientAuthErrorMessage\", function() { return ClientAuthErrorMessage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ClientAuthError\", function() { return ClientAuthError; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"mrSG\");\n/* harmony import */ var _AuthError__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AuthError */ \"T0bz\");\n/* harmony import */ var _utils_StringUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/StringUtils */ \"Emp/\");\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\n\r\n\r\nvar ClientAuthErrorMessage = {\r\n    multipleCacheAuthorities: {\r\n        code: \"multiple_authorities\",\r\n        desc: \"Multiple authorities found in the cache. Pass authority in the API overload.\"\r\n    },\r\n    endpointResolutionError: {\r\n        code: \"endpoints_resolution_error\",\r\n        desc: \"Error: could not resolve endpoints. Please check network and try again.\"\r\n    },\r\n    popUpWindowError: {\r\n        code: \"popup_window_error\",\r\n        desc: \"Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser.\"\r\n    },\r\n    tokenRenewalError: {\r\n        code: \"token_renewal_error\",\r\n        desc: \"Token renewal operation failed due to timeout.\"\r\n    },\r\n    invalidIdToken: {\r\n        code: \"invalid_id_token\",\r\n        desc: \"Invalid ID token format.\"\r\n    },\r\n    invalidStateError: {\r\n        code: \"invalid_state_error\",\r\n        desc: \"Invalid state.\"\r\n    },\r\n    nonceMismatchError: {\r\n        code: \"nonce_mismatch_error\",\r\n        desc: \"Nonce is not matching, Nonce received: \"\r\n    },\r\n    loginProgressError: {\r\n        code: \"login_progress_error\",\r\n        desc: \"Login_In_Progress: Error during login call - login is already in progress.\"\r\n    },\r\n    acquireTokenProgressError: {\r\n        code: \"acquiretoken_progress_error\",\r\n        desc: \"AcquireToken_In_Progress: Error during login call - login is already in progress.\"\r\n    },\r\n    userCancelledError: {\r\n        code: \"user_cancelled\",\r\n        desc: \"User cancelled the flow.\"\r\n    },\r\n    callbackError: {\r\n        code: \"callback_error\",\r\n        desc: \"Error occurred in token received callback function.\"\r\n    },\r\n    userLoginRequiredError: {\r\n        code: \"user_login_error\",\r\n        desc: \"User login is required. For silent calls, request must contain either sid or login_hint\"\r\n    },\r\n    userDoesNotExistError: {\r\n        code: \"user_non_existent\",\r\n        desc: \"User object does not exist. Please call a login API.\"\r\n    },\r\n    clientInfoDecodingError: {\r\n        code: \"client_info_decoding_error\",\r\n        desc: \"The client info could not be parsed/decoded correctly. Please review the trace to determine the root cause.\"\r\n    },\r\n    clientInfoNotPopulatedError: {\r\n        code: \"client_info_not_populated_error\",\r\n        desc: \"The service did not populate client_info in the response, Please verify with the service team\"\r\n    },\r\n    nullOrEmptyIdToken: {\r\n        code: \"null_or_empty_id_token\",\r\n        desc: \"The idToken is null or empty. Please review the trace to determine the root cause.\"\r\n    },\r\n    idTokenNotParsed: {\r\n        code: \"id_token_parsing_error\",\r\n        desc: \"ID token cannot be parsed. Please review stack trace to determine root cause.\"\r\n    },\r\n    tokenEncodingError: {\r\n        code: \"token_encoding_error\",\r\n        desc: \"The token to be decoded is not encoded correctly.\"\r\n    },\r\n    invalidInteractionType: {\r\n        code: \"invalid_interaction_type\",\r\n        desc: \"The interaction type passed to the handler was incorrect or unknown\"\r\n    },\r\n    cacheParseError: {\r\n        code: \"cannot_parse_cache\",\r\n        desc: \"The cached token key is not a valid JSON and cannot be parsed\"\r\n    },\r\n    blockTokenRequestsInHiddenIframe: {\r\n        code: \"block_token_requests\",\r\n        desc: \"Token calls are blocked in hidden iframes\"\r\n    }\r\n};\r\n/**\r\n * Error thrown when there is an error in the client code running on the browser.\r\n */\r\nvar ClientAuthError = /** @class */ (function (_super) {\r\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"](ClientAuthError, _super);\r\n    function ClientAuthError(errorCode, errorMessage) {\r\n        var _this = _super.call(this, errorCode, errorMessage) || this;\r\n        _this.name = \"ClientAuthError\";\r\n        Object.setPrototypeOf(_this, ClientAuthError.prototype);\r\n        return _this;\r\n    }\r\n    ClientAuthError.createEndpointResolutionError = function (errDetail) {\r\n        var errorMessage = ClientAuthErrorMessage.endpointResolutionError.desc;\r\n        if (errDetail && !_utils_StringUtils__WEBPACK_IMPORTED_MODULE_2__[\"StringUtils\"].isEmpty(errDetail)) {\r\n            errorMessage += \" Details: \" + errDetail;\r\n        }\r\n        return new ClientAuthError(ClientAuthErrorMessage.endpointResolutionError.code, errorMessage);\r\n    };\r\n    ClientAuthError.createMultipleAuthoritiesInCacheError = function (scope) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.multipleCacheAuthorities.code, \"Cache error for scope \" + scope + \": \" + ClientAuthErrorMessage.multipleCacheAuthorities.desc + \".\");\r\n    };\r\n    ClientAuthError.createPopupWindowError = function (errDetail) {\r\n        var errorMessage = ClientAuthErrorMessage.popUpWindowError.desc;\r\n        if (errDetail && !_utils_StringUtils__WEBPACK_IMPORTED_MODULE_2__[\"StringUtils\"].isEmpty(errDetail)) {\r\n            errorMessage += \" Details: \" + errDetail;\r\n        }\r\n        return new ClientAuthError(ClientAuthErrorMessage.popUpWindowError.code, errorMessage);\r\n    };\r\n    ClientAuthError.createTokenRenewalTimeoutError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.tokenRenewalError.code, ClientAuthErrorMessage.tokenRenewalError.desc);\r\n    };\r\n    ClientAuthError.createInvalidIdTokenError = function (idToken) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidIdToken.code, ClientAuthErrorMessage.invalidIdToken.desc + \" Given token: \" + idToken);\r\n    };\r\n    // TODO: Is this not a security flaw to send the user the state expected??\r\n    ClientAuthError.createInvalidStateError = function (invalidState, actualState) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidStateError.code, ClientAuthErrorMessage.invalidStateError.desc + \" \" + invalidState + \", state expected : \" + actualState + \".\");\r\n    };\r\n    // TODO: Is this not a security flaw to send the user the Nonce expected??\r\n    ClientAuthError.createNonceMismatchError = function (invalidNonce, actualNonce) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.nonceMismatchError.code, ClientAuthErrorMessage.nonceMismatchError.desc + \" \" + invalidNonce + \", nonce expected : \" + actualNonce + \".\");\r\n    };\r\n    ClientAuthError.createLoginInProgressError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.loginProgressError.code, ClientAuthErrorMessage.loginProgressError.desc);\r\n    };\r\n    ClientAuthError.createAcquireTokenInProgressError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.acquireTokenProgressError.code, ClientAuthErrorMessage.acquireTokenProgressError.desc);\r\n    };\r\n    ClientAuthError.createUserCancelledError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.userCancelledError.code, ClientAuthErrorMessage.userCancelledError.desc);\r\n    };\r\n    ClientAuthError.createErrorInCallbackFunction = function (errorDesc) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.callbackError.code, ClientAuthErrorMessage.callbackError.desc + \" \" + errorDesc + \".\");\r\n    };\r\n    ClientAuthError.createUserLoginRequiredError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.userLoginRequiredError.code, ClientAuthErrorMessage.userLoginRequiredError.desc);\r\n    };\r\n    ClientAuthError.createUserDoesNotExistError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.userDoesNotExistError.code, ClientAuthErrorMessage.userDoesNotExistError.desc);\r\n    };\r\n    ClientAuthError.createClientInfoDecodingError = function (caughtError) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.clientInfoDecodingError.code, ClientAuthErrorMessage.clientInfoDecodingError.desc + \" Failed with error: \" + caughtError);\r\n    };\r\n    ClientAuthError.createClientInfoNotPopulatedError = function (caughtError) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.clientInfoNotPopulatedError.code, ClientAuthErrorMessage.clientInfoNotPopulatedError.desc + \" Failed with error: \" + caughtError);\r\n    };\r\n    ClientAuthError.createIdTokenNullOrEmptyError = function (invalidRawTokenString) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.nullOrEmptyIdToken.code, ClientAuthErrorMessage.nullOrEmptyIdToken.desc + \" Raw ID Token Value: \" + invalidRawTokenString);\r\n    };\r\n    ClientAuthError.createIdTokenParsingError = function (caughtParsingError) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.idTokenNotParsed.code, ClientAuthErrorMessage.idTokenNotParsed.desc + \" Failed with error: \" + caughtParsingError);\r\n    };\r\n    ClientAuthError.createTokenEncodingError = function (incorrectlyEncodedToken) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.tokenEncodingError.code, ClientAuthErrorMessage.tokenEncodingError.desc + \" Attempted to decode: \" + incorrectlyEncodedToken);\r\n    };\r\n    ClientAuthError.createInvalidInteractionTypeError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidInteractionType.code, ClientAuthErrorMessage.invalidInteractionType.desc);\r\n    };\r\n    ClientAuthError.createCacheParseError = function (key) {\r\n        var errorMessage = \"invalid key: \" + key + \", \" + ClientAuthErrorMessage.cacheParseError.desc;\r\n        return new ClientAuthError(ClientAuthErrorMessage.cacheParseError.code, errorMessage);\r\n    };\r\n    ClientAuthError.createBlockTokenRequestsInHiddenIframeError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.blockTokenRequestsInHiddenIframe.code, ClientAuthErrorMessage.blockTokenRequestsInHiddenIframe.desc);\r\n    };\r\n    return ClientAuthError;\r\n}(_AuthError__WEBPACK_IMPORTED_MODULE_1__[\"AuthError\"]));\r\n\r\n//# sourceMappingURL=ClientAuthError.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///7ZR7\n");

/***/ }),

/***/ "8ImU":
/*!***********************************************!*\
  !*** ./node_modules/msal/lib-es6/ScopeSet.js ***!
  \***********************************************/
/*! exports provided: ScopeSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ScopeSet\", function() { return ScopeSet; });\n/* harmony import */ var _error_ClientConfigurationError__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./error/ClientConfigurationError */ \"ZEID\");\n/* harmony import */ var _utils_Constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/Constants */ \"wmgs\");\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\n\r\nvar ScopeSet = /** @class */ (function () {\r\n    function ScopeSet() {\r\n    }\r\n    /**\r\n     * Check if there are dup scopes in a given request\r\n     *\r\n     * @param cachedScopes\r\n     * @param scopes\r\n     */\r\n    // TODO: Rename this, intersecting scopes isn't a great name for duplicate checker\r\n    ScopeSet.isIntersectingScopes = function (cachedScopes, scopes) {\r\n        var convertedCachedScopes = this.trimAndConvertArrayToLowerCase(cachedScopes.slice());\r\n        var requestScopes = this.trimAndConvertArrayToLowerCase(scopes.slice());\r\n        for (var i = 0; i < requestScopes.length; i++) {\r\n            if (convertedCachedScopes.indexOf(requestScopes[i].toLowerCase()) > -1) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Check if a given scope is present in the request\r\n     *\r\n     * @param cachedScopes\r\n     * @param scopes\r\n     */\r\n    ScopeSet.containsScope = function (cachedScopes, scopes) {\r\n        var convertedCachedScopes = this.trimAndConvertArrayToLowerCase(cachedScopes.slice());\r\n        var requestScopes = this.trimAndConvertArrayToLowerCase(scopes.slice());\r\n        return requestScopes.every(function (value) { return convertedCachedScopes.indexOf(value.toString().toLowerCase()) >= 0; });\r\n    };\r\n    /**\r\n     *  Trims and converts string to lower case\r\n     *\r\n     * @param scopes\r\n     */\r\n    // TODO: Rename this, too generic name for a function that only deals with scopes\r\n    ScopeSet.trimAndConvertToLowerCase = function (scope) {\r\n        return scope.trim().toLowerCase();\r\n    };\r\n    /**\r\n     * Performs trimAndConvertToLowerCase on string array\r\n     * @param scopes\r\n     */\r\n    ScopeSet.trimAndConvertArrayToLowerCase = function (scopes) {\r\n        var _this = this;\r\n        return scopes.map(function (scope) { return _this.trimAndConvertToLowerCase(scope); });\r\n    };\r\n    /**\r\n     * Trims each scope in scopes array\r\n     * @param scopes\r\n     */\r\n    ScopeSet.trimScopes = function (scopes) {\r\n        return scopes.map(function (scope) { return scope.trim(); });\r\n    };\r\n    /**\r\n     * Remove one element from a scope array\r\n     *\r\n     * @param scopes\r\n     * @param scope\r\n     */\r\n    // TODO: Rename this, too generic name for a function that only deals with scopes\r\n    ScopeSet.removeElement = function (scopes, scope) {\r\n        var scopeVal = this.trimAndConvertToLowerCase(scope);\r\n        return scopes.filter(function (value) { return value !== scopeVal; });\r\n    };\r\n    /**\r\n     * Parse the scopes into a formatted scopeList\r\n     * @param scopes\r\n     */\r\n    ScopeSet.parseScope = function (scopes) {\r\n        var scopeList = \"\";\r\n        if (scopes) {\r\n            for (var i = 0; i < scopes.length; ++i) {\r\n                scopeList += (i !== scopes.length - 1) ? scopes[i] + \" \" : scopes[i];\r\n            }\r\n        }\r\n        return scopeList;\r\n    };\r\n    /**\r\n     * @hidden\r\n     *\r\n     * Used to validate the scopes input parameter requested  by the developer.\r\n     * @param {Array<string>} scopes - Developer requested permissions. Not all scopes are guaranteed to be included in the access token returned.\r\n     * @param {boolean} scopesRequired - Boolean indicating whether the scopes array is required or not\r\n     * @ignore\r\n     */\r\n    ScopeSet.validateInputScope = function (scopes, scopesRequired) {\r\n        if (!scopes) {\r\n            if (scopesRequired) {\r\n                throw _error_ClientConfigurationError__WEBPACK_IMPORTED_MODULE_0__[\"ClientConfigurationError\"].createScopesRequiredError(scopes);\r\n            }\r\n            else {\r\n                return;\r\n            }\r\n        }\r\n        // Check that scopes is an array object (also throws error if scopes == null)\r\n        if (!Array.isArray(scopes)) {\r\n            throw _error_ClientConfigurationError__WEBPACK_IMPORTED_MODULE_0__[\"ClientConfigurationError\"].createScopesNonArrayError(scopes);\r\n        }\r\n        // Check that scopes is not an empty array\r\n        if (scopes.length < 1 && scopesRequired) {\r\n            throw _error_ClientConfigurationError__WEBPACK_IMPORTED_MODULE_0__[\"ClientConfigurationError\"].createEmptyScopesArrayError(scopes.toString());\r\n        }\r\n    };\r\n    /**\r\n     * @hidden\r\n     *\r\n     * Extracts scope value from the state sent with the authentication request.\r\n     * @param {string} state\r\n     * @returns {string} scope.\r\n     * @ignore\r\n     */\r\n    ScopeSet.getScopeFromState = function (state) {\r\n        if (state) {\r\n            var splitIndex = state.indexOf(_utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"Constants\"].resourceDelimiter);\r\n            if (splitIndex > -1 && splitIndex + 1 < state.length) {\r\n                return state.substring(splitIndex + 1);\r\n            }\r\n        }\r\n        return \"\";\r\n    };\r\n    /**\r\n     * @ignore\r\n     * Appends extraScopesToConsent if passed\r\n     * @param {@link AuthenticationParameters}\r\n     */\r\n    ScopeSet.appendScopes = function (reqScopes, reqExtraScopesToConsent) {\r\n        if (reqScopes) {\r\n            var convertedExtraScopes = reqExtraScopesToConsent ? this.trimAndConvertArrayToLowerCase(reqExtraScopesToConsent.slice()) : null;\r\n            var convertedReqScopes = this.trimAndConvertArrayToLowerCase(reqScopes.slice());\r\n            return convertedExtraScopes ? convertedReqScopes.concat(convertedExtraScopes) : convertedReqScopes;\r\n        }\r\n        return null;\r\n    };\r\n    // #endregion\r\n    /**\r\n     * @ignore\r\n     * Returns true if the scopes array only contains openid and/or profile\r\n     */\r\n    ScopeSet.onlyContainsOidcScopes = function (scopes) {\r\n        var scopesCount = scopes.length;\r\n        var oidcScopesFound = 0;\r\n        if (scopes.indexOf(_utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"Constants\"].openidScope) > -1) {\r\n            oidcScopesFound += 1;\r\n        }\r\n        if (scopes.indexOf(_utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"Constants\"].profileScope) > -1) {\r\n            oidcScopesFound += 1;\r\n        }\r\n        return (scopesCount > 0 && scopesCount === oidcScopesFound);\r\n    };\r\n    /**\r\n     * @ignore\r\n     * Returns true if the scopes array only contains openid and/or profile\r\n     */\r\n    ScopeSet.containsAnyOidcScopes = function (scopes) {\r\n        var containsOpenIdScope = scopes.indexOf(_utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"Constants\"].openidScope) > -1;\r\n        var containsProfileScope = scopes.indexOf(_utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"Constants\"].profileScope) > -1;\r\n        return (containsOpenIdScope || containsProfileScope);\r\n    };\r\n    /**\r\n     * @ignore\r\n     * Returns true if the clientId is the only scope in the array\r\n     */\r\n    ScopeSet.onlyContainsClientId = function (scopes, clientId) {\r\n        // Double negation to force false value returned in case scopes is null\r\n        return !!scopes && (scopes.indexOf(clientId) > -1 && scopes.length === 1);\r\n    };\r\n    /**\r\n     * @ignore\r\n     * Adds missing OIDC scopes to scopes array without duplication. Since STS requires OIDC scopes for\r\n     * all implicit flow requests, 'openid' and 'profile' should always be included in the final request\r\n     */\r\n    ScopeSet.appendDefaultScopes = function (scopes) {\r\n        var extendedScopes = scopes;\r\n        if (extendedScopes.indexOf(_utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"Constants\"].openidScope) === -1) {\r\n            extendedScopes.push(_utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"Constants\"].openidScope);\r\n        }\r\n        if (extendedScopes.indexOf(_utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"Constants\"].profileScope) === -1) {\r\n            extendedScopes.push(_utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"Constants\"].profileScope);\r\n        }\r\n        return extendedScopes;\r\n    };\r\n    /**\r\n     * @ignore\r\n     * Removes present OIDC scopes from scopes array.\r\n     */\r\n    ScopeSet.removeDefaultScopes = function (scopes) {\r\n        return scopes.filter(function (scope) {\r\n            return (scope !== _utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"Constants\"].openidScope && scope !== _utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"Constants\"].profileScope);\r\n        });\r\n    };\r\n    /**\r\n     * @ignore\r\n     * Removes clientId from scopes array if included as only scope. If it's not the only scope, it is treated as a resource scope.\r\n     * @param scopes Array<string>: Pre-normalized scopes array\r\n     * @param clientId string: The application's clientId that is searched for in the scopes array\r\n     */\r\n    ScopeSet.translateClientIdIfSingleScope = function (scopes, clientId) {\r\n        return this.onlyContainsClientId(scopes, clientId) ? _utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"Constants\"].oidcScopes : scopes;\r\n    };\r\n    return ScopeSet;\r\n}());\r\n\r\n//# sourceMappingURL=ScopeSet.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///8ImU\n");

/***/ }),

/***/ "GaoF":
/*!*****************************************************************!*\
  !*** ./node_modules/msal/lib-es6/authority/AuthorityFactory.js ***!
  \*****************************************************************/
/*! exports provided: AuthorityFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AuthorityFactory\", function() { return AuthorityFactory; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"mrSG\");\n/* harmony import */ var _Authority__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Authority */ \"bro/\");\n/* harmony import */ var _utils_StringUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/StringUtils */ \"Emp/\");\n/* harmony import */ var _error_ClientConfigurationError__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../error/ClientConfigurationError */ \"ZEID\");\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\n/**\r\n * @hidden\r\n */\r\n\r\n\r\n\r\nvar AuthorityFactory = /** @class */ (function () {\r\n    function AuthorityFactory() {\r\n    }\r\n    AuthorityFactory.saveMetadataFromNetwork = function (authorityInstance, telemetryManager, correlationId) {\r\n        return tslib__WEBPACK_IMPORTED_MODULE_0__[\"__awaiter\"](this, void 0, void 0, function () {\r\n            var metadata;\r\n            return tslib__WEBPACK_IMPORTED_MODULE_0__[\"__generator\"](this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, authorityInstance.resolveEndpointsAsync(telemetryManager, correlationId)];\r\n                    case 1:\r\n                        metadata = _a.sent();\r\n                        this.metadataMap.set(authorityInstance.CanonicalAuthority, metadata);\r\n                        return [2 /*return*/, metadata];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    AuthorityFactory.getMetadata = function (authorityUrl) {\r\n        return this.metadataMap.get(authorityUrl);\r\n    };\r\n    AuthorityFactory.saveMetadataFromConfig = function (authorityUrl, authorityMetadataJson) {\r\n        try {\r\n            if (authorityMetadataJson) {\r\n                var parsedMetadata = JSON.parse(authorityMetadataJson);\r\n                if (!parsedMetadata.authorization_endpoint || !parsedMetadata.end_session_endpoint || !parsedMetadata.issuer) {\r\n                    throw _error_ClientConfigurationError__WEBPACK_IMPORTED_MODULE_3__[\"ClientConfigurationError\"].createInvalidAuthorityMetadataError();\r\n                }\r\n                this.metadataMap.set(authorityUrl, {\r\n                    AuthorizationEndpoint: parsedMetadata.authorization_endpoint,\r\n                    EndSessionEndpoint: parsedMetadata.end_session_endpoint,\r\n                    Issuer: parsedMetadata.issuer\r\n                });\r\n            }\r\n        }\r\n        catch (e) {\r\n            throw _error_ClientConfigurationError__WEBPACK_IMPORTED_MODULE_3__[\"ClientConfigurationError\"].createInvalidAuthorityMetadataError();\r\n        }\r\n    };\r\n    /**\r\n     * Create an authority object of the correct type based on the url\r\n     * Performs basic authority validation - checks to see if the authority is of a valid type (eg aad, b2c)\r\n     */\r\n    AuthorityFactory.CreateInstance = function (authorityUrl, validateAuthority, authorityMetadata) {\r\n        if (_utils_StringUtils__WEBPACK_IMPORTED_MODULE_2__[\"StringUtils\"].isEmpty(authorityUrl)) {\r\n            return null;\r\n        }\r\n        if (authorityMetadata) {\r\n            // todo: log statements\r\n            this.saveMetadataFromConfig(authorityUrl, authorityMetadata);\r\n        }\r\n        return new _Authority__WEBPACK_IMPORTED_MODULE_1__[\"Authority\"](authorityUrl, validateAuthority, this.metadataMap.get(authorityUrl));\r\n    };\r\n    AuthorityFactory.metadataMap = new Map();\r\n    return AuthorityFactory;\r\n}());\r\n\r\n//# sourceMappingURL=AuthorityFactory.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiR2FvRi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9tc2FsL2xpYi1lczYvYXV0aG9yaXR5L0F1dGhvcml0eUZhY3RvcnkuanM/MTlhYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuaW1wb3J0ICogYXMgdHNsaWJfMSBmcm9tIFwidHNsaWJcIjtcclxuLyoqXHJcbiAqIEBoaWRkZW5cclxuICovXHJcbmltcG9ydCB7IEF1dGhvcml0eSB9IGZyb20gXCIuL0F1dGhvcml0eVwiO1xyXG5pbXBvcnQgeyBTdHJpbmdVdGlscyB9IGZyb20gXCIuLi91dGlscy9TdHJpbmdVdGlsc1wiO1xyXG5pbXBvcnQgeyBDbGllbnRDb25maWd1cmF0aW9uRXJyb3IgfSBmcm9tIFwiLi4vZXJyb3IvQ2xpZW50Q29uZmlndXJhdGlvbkVycm9yXCI7XHJcbnZhciBBdXRob3JpdHlGYWN0b3J5ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xyXG4gICAgZnVuY3Rpb24gQXV0aG9yaXR5RmFjdG9yeSgpIHtcclxuICAgIH1cclxuICAgIEF1dGhvcml0eUZhY3Rvcnkuc2F2ZU1ldGFkYXRhRnJvbU5ldHdvcmsgPSBmdW5jdGlvbiAoYXV0aG9yaXR5SW5zdGFuY2UsIHRlbGVtZXRyeU1hbmFnZXIsIGNvcnJlbGF0aW9uSWQpIHtcclxuICAgICAgICByZXR1cm4gdHNsaWJfMS5fX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdmFyIG1ldGFkYXRhO1xyXG4gICAgICAgICAgICByZXR1cm4gdHNsaWJfMS5fX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoX2EpIHtcclxuICAgICAgICAgICAgICAgIHN3aXRjaCAoX2EubGFiZWwpIHtcclxuICAgICAgICAgICAgICAgICAgICBjYXNlIDA6IHJldHVybiBbNCAvKnlpZWxkKi8sIGF1dGhvcml0eUluc3RhbmNlLnJlc29sdmVFbmRwb2ludHNBc3luYyh0ZWxlbWV0cnlNYW5hZ2VyLCBjb3JyZWxhdGlvbklkKV07XHJcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAxOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICBtZXRhZGF0YSA9IF9hLnNlbnQoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5tZXRhZGF0YU1hcC5zZXQoYXV0aG9yaXR5SW5zdGFuY2UuQ2Fub25pY2FsQXV0aG9yaXR5LCBtZXRhZGF0YSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbMiAvKnJldHVybiovLCBtZXRhZGF0YV07XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfTtcclxuICAgIEF1dGhvcml0eUZhY3RvcnkuZ2V0TWV0YWRhdGEgPSBmdW5jdGlvbiAoYXV0aG9yaXR5VXJsKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMubWV0YWRhdGFNYXAuZ2V0KGF1dGhvcml0eVVybCk7XHJcbiAgICB9O1xyXG4gICAgQXV0aG9yaXR5RmFjdG9yeS5zYXZlTWV0YWRhdGFGcm9tQ29uZmlnID0gZnVuY3Rpb24gKGF1dGhvcml0eVVybCwgYXV0aG9yaXR5TWV0YWRhdGFKc29uKSB7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgaWYgKGF1dGhvcml0eU1ldGFkYXRhSnNvbikge1xyXG4gICAgICAgICAgICAgICAgdmFyIHBhcnNlZE1ldGFkYXRhID0gSlNPTi5wYXJzZShhdXRob3JpdHlNZXRhZGF0YUpzb24pO1xyXG4gICAgICAgICAgICAgICAgaWYgKCFwYXJzZWRNZXRhZGF0YS5hdXRob3JpemF0aW9uX2VuZHBvaW50IHx8ICFwYXJzZWRNZXRhZGF0YS5lbmRfc2Vzc2lvbl9lbmRwb2ludCB8fCAhcGFyc2VkTWV0YWRhdGEuaXNzdWVyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgQ2xpZW50Q29uZmlndXJhdGlvbkVycm9yLmNyZWF0ZUludmFsaWRBdXRob3JpdHlNZXRhZGF0YUVycm9yKCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB0aGlzLm1ldGFkYXRhTWFwLnNldChhdXRob3JpdHlVcmwsIHtcclxuICAgICAgICAgICAgICAgICAgICBBdXRob3JpemF0aW9uRW5kcG9pbnQ6IHBhcnNlZE1ldGFkYXRhLmF1dGhvcml6YXRpb25fZW5kcG9pbnQsXHJcbiAgICAgICAgICAgICAgICAgICAgRW5kU2Vzc2lvbkVuZHBvaW50OiBwYXJzZWRNZXRhZGF0YS5lbmRfc2Vzc2lvbl9lbmRwb2ludCxcclxuICAgICAgICAgICAgICAgICAgICBJc3N1ZXI6IHBhcnNlZE1ldGFkYXRhLmlzc3VlclxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgY2F0Y2ggKGUpIHtcclxuICAgICAgICAgICAgdGhyb3cgQ2xpZW50Q29uZmlndXJhdGlvbkVycm9yLmNyZWF0ZUludmFsaWRBdXRob3JpdHlNZXRhZGF0YUVycm9yKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICogQ3JlYXRlIGFuIGF1dGhvcml0eSBvYmplY3Qgb2YgdGhlIGNvcnJlY3QgdHlwZSBiYXNlZCBvbiB0aGUgdXJsXHJcbiAgICAgKiBQZXJmb3JtcyBiYXNpYyBhdXRob3JpdHkgdmFsaWRhdGlvbiAtIGNoZWNrcyB0byBzZWUgaWYgdGhlIGF1dGhvcml0eSBpcyBvZiBhIHZhbGlkIHR5cGUgKGVnIGFhZCwgYjJjKVxyXG4gICAgICovXHJcbiAgICBBdXRob3JpdHlGYWN0b3J5LkNyZWF0ZUluc3RhbmNlID0gZnVuY3Rpb24gKGF1dGhvcml0eVVybCwgdmFsaWRhdGVBdXRob3JpdHksIGF1dGhvcml0eU1ldGFkYXRhKSB7XHJcbiAgICAgICAgaWYgKFN0cmluZ1V0aWxzLmlzRW1wdHkoYXV0aG9yaXR5VXJsKSkge1xyXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKGF1dGhvcml0eU1ldGFkYXRhKSB7XHJcbiAgICAgICAgICAgIC8vIHRvZG86IGxvZyBzdGF0ZW1lbnRzXHJcbiAgICAgICAgICAgIHRoaXMuc2F2ZU1ldGFkYXRhRnJvbUNvbmZpZyhhdXRob3JpdHlVcmwsIGF1dGhvcml0eU1ldGFkYXRhKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIG5ldyBBdXRob3JpdHkoYXV0aG9yaXR5VXJsLCB2YWxpZGF0ZUF1dGhvcml0eSwgdGhpcy5tZXRhZGF0YU1hcC5nZXQoYXV0aG9yaXR5VXJsKSk7XHJcbiAgICB9O1xyXG4gICAgQXV0aG9yaXR5RmFjdG9yeS5tZXRhZGF0YU1hcCA9IG5ldyBNYXAoKTtcclxuICAgIHJldHVybiBBdXRob3JpdHlGYWN0b3J5O1xyXG59KCkpO1xyXG5leHBvcnQgeyBBdXRob3JpdHlGYWN0b3J5IH07XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUF1dGhvcml0eUZhY3RvcnkuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///GaoF\n");

/***/ }),

/***/ "JKGV":
/*!********************************************************!*\
  !*** ./node_modules/msal/lib-es6/error/ServerError.js ***!
  \********************************************************/
/*! exports provided: ServerErrorMessage, ServerError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ServerErrorMessage\", function() { return ServerErrorMessage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ServerError\", function() { return ServerError; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"mrSG\");\n/* harmony import */ var _AuthError__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AuthError */ \"T0bz\");\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\n\r\nvar ServerErrorMessage = {\r\n    serverUnavailable: {\r\n        code: \"server_unavailable\",\r\n        desc: \"Server is temporarily unavailable.\"\r\n    },\r\n    unknownServerError: {\r\n        code: \"unknown_server_error\"\r\n    },\r\n};\r\n/**\r\n * Error thrown when there is an error with the server code, for example, unavailability.\r\n */\r\nvar ServerError = /** @class */ (function (_super) {\r\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"](ServerError, _super);\r\n    function ServerError(errorCode, errorMessage) {\r\n        var _this = _super.call(this, errorCode, errorMessage) || this;\r\n        _this.name = \"ServerError\";\r\n        Object.setPrototypeOf(_this, ServerError.prototype);\r\n        return _this;\r\n    }\r\n    ServerError.createServerUnavailableError = function () {\r\n        return new ServerError(ServerErrorMessage.serverUnavailable.code, ServerErrorMessage.serverUnavailable.desc);\r\n    };\r\n    ServerError.createUnknownServerError = function (errorDesc) {\r\n        return new ServerError(ServerErrorMessage.unknownServerError.code, errorDesc);\r\n    };\r\n    return ServerError;\r\n}(_AuthError__WEBPACK_IMPORTED_MODULE_1__[\"AuthError\"]));\r\n\r\n//# sourceMappingURL=ServerError.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSktHVi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9tc2FsL2xpYi1lczYvZXJyb3IvU2VydmVyRXJyb3IuanM/MjRhMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuaW1wb3J0ICogYXMgdHNsaWJfMSBmcm9tIFwidHNsaWJcIjtcclxuaW1wb3J0IHsgQXV0aEVycm9yIH0gZnJvbSBcIi4vQXV0aEVycm9yXCI7XHJcbmV4cG9ydCB2YXIgU2VydmVyRXJyb3JNZXNzYWdlID0ge1xyXG4gICAgc2VydmVyVW5hdmFpbGFibGU6IHtcclxuICAgICAgICBjb2RlOiBcInNlcnZlcl91bmF2YWlsYWJsZVwiLFxyXG4gICAgICAgIGRlc2M6IFwiU2VydmVyIGlzIHRlbXBvcmFyaWx5IHVuYXZhaWxhYmxlLlwiXHJcbiAgICB9LFxyXG4gICAgdW5rbm93blNlcnZlckVycm9yOiB7XHJcbiAgICAgICAgY29kZTogXCJ1bmtub3duX3NlcnZlcl9lcnJvclwiXHJcbiAgICB9LFxyXG59O1xyXG4vKipcclxuICogRXJyb3IgdGhyb3duIHdoZW4gdGhlcmUgaXMgYW4gZXJyb3Igd2l0aCB0aGUgc2VydmVyIGNvZGUsIGZvciBleGFtcGxlLCB1bmF2YWlsYWJpbGl0eS5cclxuICovXHJcbnZhciBTZXJ2ZXJFcnJvciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcclxuICAgIHRzbGliXzEuX19leHRlbmRzKFNlcnZlckVycm9yLCBfc3VwZXIpO1xyXG4gICAgZnVuY3Rpb24gU2VydmVyRXJyb3IoZXJyb3JDb2RlLCBlcnJvck1lc3NhZ2UpIHtcclxuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzLCBlcnJvckNvZGUsIGVycm9yTWVzc2FnZSkgfHwgdGhpcztcclxuICAgICAgICBfdGhpcy5uYW1lID0gXCJTZXJ2ZXJFcnJvclwiO1xyXG4gICAgICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZihfdGhpcywgU2VydmVyRXJyb3IucHJvdG90eXBlKTtcclxuICAgICAgICByZXR1cm4gX3RoaXM7XHJcbiAgICB9XHJcbiAgICBTZXJ2ZXJFcnJvci5jcmVhdGVTZXJ2ZXJVbmF2YWlsYWJsZUVycm9yID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHJldHVybiBuZXcgU2VydmVyRXJyb3IoU2VydmVyRXJyb3JNZXNzYWdlLnNlcnZlclVuYXZhaWxhYmxlLmNvZGUsIFNlcnZlckVycm9yTWVzc2FnZS5zZXJ2ZXJVbmF2YWlsYWJsZS5kZXNjKTtcclxuICAgIH07XHJcbiAgICBTZXJ2ZXJFcnJvci5jcmVhdGVVbmtub3duU2VydmVyRXJyb3IgPSBmdW5jdGlvbiAoZXJyb3JEZXNjKSB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBTZXJ2ZXJFcnJvcihTZXJ2ZXJFcnJvck1lc3NhZ2UudW5rbm93blNlcnZlckVycm9yLmNvZGUsIGVycm9yRGVzYyk7XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIFNlcnZlckVycm9yO1xyXG59KEF1dGhFcnJvcikpO1xyXG5leHBvcnQgeyBTZXJ2ZXJFcnJvciB9O1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1TZXJ2ZXJFcnJvci5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///JKGV\n");

/***/ }),

/***/ "O1xl":
/*!******************************************************!*\
  !*** ./node_modules/msal/lib-es6/cache/AuthCache.js ***!
  \******************************************************/
/*! exports provided: AuthCache */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AuthCache\", function() { return AuthCache; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"mrSG\");\n/* harmony import */ var _utils_Constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/Constants */ \"wmgs\");\n/* harmony import */ var _AccessTokenCacheItem__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./AccessTokenCacheItem */ \"iV3A\");\n/* harmony import */ var _BrowserStorage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./BrowserStorage */ \"YAWc\");\n/* harmony import */ var _utils_RequestUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/RequestUtils */ \"kcKs\");\n/* harmony import */ var _utils_StringUtils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/StringUtils */ \"Emp/\");\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * @hidden\r\n */\r\nvar AuthCache = /** @class */ (function (_super) {\r\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"](AuthCache, _super);\r\n    function AuthCache(clientId, cacheLocation, storeAuthStateInCookie) {\r\n        var _this = _super.call(this, cacheLocation) || this;\r\n        _this.clientId = clientId;\r\n        // This is hardcoded to true for now. We may make this configurable in the future\r\n        _this.rollbackEnabled = true;\r\n        _this.migrateCacheEntries(storeAuthStateInCookie);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Support roll back to old cache schema until the next major release: true by default now\r\n     * @param storeAuthStateInCookie\r\n     */\r\n    AuthCache.prototype.migrateCacheEntries = function (storeAuthStateInCookie) {\r\n        var _this = this;\r\n        var idTokenKey = _utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"Constants\"].cachePrefix + \".\" + _utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"PersistentCacheKeys\"].IDTOKEN;\r\n        var clientInfoKey = _utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"Constants\"].cachePrefix + \".\" + _utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"PersistentCacheKeys\"].CLIENT_INFO;\r\n        var errorKey = _utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"Constants\"].cachePrefix + \".\" + _utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"ErrorCacheKeys\"].ERROR;\r\n        var errorDescKey = _utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"Constants\"].cachePrefix + \".\" + _utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"ErrorCacheKeys\"].ERROR_DESC;\r\n        var idTokenValue = _super.prototype.getItem.call(this, idTokenKey);\r\n        var clientInfoValue = _super.prototype.getItem.call(this, clientInfoKey);\r\n        var errorValue = _super.prototype.getItem.call(this, errorKey);\r\n        var errorDescValue = _super.prototype.getItem.call(this, errorDescKey);\r\n        var values = [idTokenValue, clientInfoValue, errorValue, errorDescValue];\r\n        var keysToMigrate = [_utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"PersistentCacheKeys\"].IDTOKEN, _utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"PersistentCacheKeys\"].CLIENT_INFO, _utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"ErrorCacheKeys\"].ERROR, _utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"ErrorCacheKeys\"].ERROR_DESC];\r\n        keysToMigrate.forEach(function (cacheKey, index) { return _this.duplicateCacheEntry(cacheKey, values[index], storeAuthStateInCookie); });\r\n    };\r\n    /**\r\n     * Utility function to help with roll back keys\r\n     * @param newKey\r\n     * @param value\r\n     * @param storeAuthStateInCookie\r\n     */\r\n    AuthCache.prototype.duplicateCacheEntry = function (newKey, value, storeAuthStateInCookie) {\r\n        if (value) {\r\n            this.setItem(newKey, value, storeAuthStateInCookie);\r\n        }\r\n    };\r\n    /**\r\n     * Prepend msal.<client-id> to each key; Skip for any JSON object as Key (defined schemas do not need the key appended: AccessToken Keys or the upcoming schema)\r\n     * @param key\r\n     * @param addInstanceId\r\n     */\r\n    AuthCache.prototype.generateCacheKey = function (key, addInstanceId) {\r\n        try {\r\n            // Defined schemas do not need the key appended\r\n            JSON.parse(key);\r\n            return key;\r\n        }\r\n        catch (e) {\r\n            if (key.indexOf(\"\" + _utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"Constants\"].cachePrefix) === 0 || key.indexOf(_utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"Constants\"].adalIdToken) === 0) {\r\n                return key;\r\n            }\r\n            return addInstanceId ? _utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"Constants\"].cachePrefix + \".\" + this.clientId + \".\" + key : _utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"Constants\"].cachePrefix + \".\" + key;\r\n        }\r\n    };\r\n    /**\r\n     * Validates that the input cache key contains the account search terms (clientId and homeAccountIdentifier) and\r\n     * then whether or not it contains the \"scopes\", depending on the token type being searched for. With matching account\r\n     * search terms, Access Token search tries to match the \"scopes\" keyword, while Id Token search expects \"scopes\" to not be included.\r\n     * @param key\r\n     * @param clientId\r\n     * @param homeAccountIdentifier\r\n     * @param tokenType\r\n     */\r\n    AuthCache.prototype.matchKeyForType = function (key, clientId, homeAccountIdentifier, tokenType) {\r\n        // All valid token cache item keys are valid JSON objects, ignore keys that aren't\r\n        var parsedKey = _utils_StringUtils__WEBPACK_IMPORTED_MODULE_5__[\"StringUtils\"].validateAndParseJsonCacheKey(key);\r\n        if (!parsedKey) {\r\n            return null;\r\n        }\r\n        // Does the cache item match the request account\r\n        var accountMatches = key.match(clientId) && key.match(homeAccountIdentifier);\r\n        // Does the cache item match the requested token type\r\n        var tokenTypeMatches = false;\r\n        switch (tokenType) {\r\n            case _utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"ServerHashParamKeys\"].ACCESS_TOKEN:\r\n                // Cache item is an access token if scopes are included in the cache item key\r\n                tokenTypeMatches = !!key.match(_utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"Constants\"].scopes);\r\n                break;\r\n            case _utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"ServerHashParamKeys\"].ID_TOKEN:\r\n                // Cache may be an ID token if scopes are NOT included in the cache item key\r\n                tokenTypeMatches = !key.match(_utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"Constants\"].scopes);\r\n                break;\r\n        }\r\n        return (accountMatches && tokenTypeMatches) ? parsedKey : null;\r\n    };\r\n    /**\r\n     * add value to storage\r\n     * @param key\r\n     * @param value\r\n     * @param enableCookieStorage\r\n     */\r\n    AuthCache.prototype.setItem = function (key, value, enableCookieStorage) {\r\n        _super.prototype.setItem.call(this, this.generateCacheKey(key, true), value, enableCookieStorage);\r\n        // Values stored in cookies will have rollback disabled to minimize cookie length\r\n        if (this.rollbackEnabled && !enableCookieStorage) {\r\n            _super.prototype.setItem.call(this, this.generateCacheKey(key, false), value, enableCookieStorage);\r\n        }\r\n    };\r\n    /**\r\n     * get one item by key from storage\r\n     * @param key\r\n     * @param enableCookieStorage\r\n     */\r\n    AuthCache.prototype.getItem = function (key, enableCookieStorage) {\r\n        return _super.prototype.getItem.call(this, this.generateCacheKey(key, true), enableCookieStorage);\r\n    };\r\n    /**\r\n     * remove value from storage\r\n     * @param key\r\n     */\r\n    AuthCache.prototype.removeItem = function (key) {\r\n        _super.prototype.removeItem.call(this, this.generateCacheKey(key, true));\r\n        if (this.rollbackEnabled) {\r\n            _super.prototype.removeItem.call(this, this.generateCacheKey(key, false));\r\n        }\r\n    };\r\n    /**\r\n     * Reset the cache items\r\n     */\r\n    AuthCache.prototype.resetCacheItems = function () {\r\n        var storage = window[this.cacheLocation];\r\n        var key;\r\n        for (key in storage) {\r\n            // Check if key contains msal prefix; For now, we are clearing all cache items created by MSAL.js\r\n            if (storage.hasOwnProperty(key) && (key.indexOf(_utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"Constants\"].cachePrefix) !== -1)) {\r\n                _super.prototype.removeItem.call(this, key);\r\n                // TODO: Clear cache based on client id (clarify use cases where this is needed)\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Reset all temporary cache items\r\n     */\r\n    AuthCache.prototype.resetTempCacheItems = function (state) {\r\n        var _this = this;\r\n        var stateId = state && _utils_RequestUtils__WEBPACK_IMPORTED_MODULE_4__[\"RequestUtils\"].parseLibraryState(state).id;\r\n        var isTokenRenewalInProgress = this.tokenRenewalInProgress(state);\r\n        var storage = window[this.cacheLocation];\r\n        // check state and remove associated cache\r\n        if (stateId && !isTokenRenewalInProgress) {\r\n            Object.keys(storage).forEach(function (key) {\r\n                if (key.indexOf(stateId) !== -1) {\r\n                    _this.removeItem(key);\r\n                    _super.prototype.clearItemCookie.call(_this, key);\r\n                }\r\n            });\r\n        }\r\n        // delete the interaction status cache\r\n        this.removeItem(_utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"TemporaryCacheKeys\"].INTERACTION_STATUS);\r\n        this.removeItem(_utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"TemporaryCacheKeys\"].REDIRECT_REQUEST);\r\n    };\r\n    /**\r\n     * Set cookies for IE\r\n     * @param cName\r\n     * @param cValue\r\n     * @param expires\r\n     */\r\n    AuthCache.prototype.setItemCookie = function (cName, cValue, expires) {\r\n        _super.prototype.setItemCookie.call(this, this.generateCacheKey(cName, true), cValue, expires);\r\n        if (this.rollbackEnabled) {\r\n            _super.prototype.setItemCookie.call(this, this.generateCacheKey(cName, false), cValue, expires);\r\n        }\r\n    };\r\n    AuthCache.prototype.clearItemCookie = function (cName) {\r\n        _super.prototype.clearItemCookie.call(this, this.generateCacheKey(cName, true));\r\n        if (this.rollbackEnabled) {\r\n            _super.prototype.clearItemCookie.call(this, this.generateCacheKey(cName, false));\r\n        }\r\n    };\r\n    /**\r\n     * get one item by key from cookies\r\n     * @param cName\r\n     */\r\n    AuthCache.prototype.getItemCookie = function (cName) {\r\n        return _super.prototype.getItemCookie.call(this, this.generateCacheKey(cName, true));\r\n    };\r\n    /**\r\n     * Get all tokens of a certain type from the cache\r\n     * @param clientId\r\n     * @param homeAccountIdentifier\r\n     * @param tokenType\r\n     */\r\n    AuthCache.prototype.getAllTokensByType = function (clientId, homeAccountIdentifier, tokenType) {\r\n        var _this = this;\r\n        var results = Object.keys(window[this.cacheLocation]).reduce(function (tokens, key) {\r\n            var matchedTokenKey = _this.matchKeyForType(key, clientId, homeAccountIdentifier, tokenType);\r\n            if (matchedTokenKey) {\r\n                var value = _this.getItem(key);\r\n                if (value) {\r\n                    try {\r\n                        var newAccessTokenCacheItem = new _AccessTokenCacheItem__WEBPACK_IMPORTED_MODULE_2__[\"AccessTokenCacheItem\"](matchedTokenKey, JSON.parse(value));\r\n                        return tokens.concat([newAccessTokenCacheItem]);\r\n                    }\r\n                    catch (err) {\r\n                        // Skip cache items with non-valid JSON values\r\n                        return tokens;\r\n                    }\r\n                }\r\n            }\r\n            return tokens;\r\n        }, []);\r\n        return results;\r\n    };\r\n    /**\r\n     * Get all access tokens in the cache\r\n     * @param clientId\r\n     * @param homeAccountIdentifier\r\n     */\r\n    AuthCache.prototype.getAllAccessTokens = function (clientId, homeAccountIdentifier) {\r\n        return this.getAllTokensByType(clientId, homeAccountIdentifier, _utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"ServerHashParamKeys\"].ACCESS_TOKEN);\r\n    };\r\n    /**\r\n     * Get all id tokens in the cache in the form of AccessTokenCacheItem objects so they are\r\n     * in a normalized format and can make use of the existing cached access token validation logic\r\n     */\r\n    AuthCache.prototype.getAllIdTokens = function (clientId, homeAccountIdentifier) {\r\n        return this.getAllTokensByType(clientId, homeAccountIdentifier, _utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"ServerHashParamKeys\"].ID_TOKEN);\r\n    };\r\n    /**\r\n     * Get all access and ID tokens in the cache\r\n     * @param clientId\r\n     * @param homeAccountIdentifier\r\n     */\r\n    AuthCache.prototype.getAllTokens = function (clientId, homeAccountIdentifier) {\r\n        var accessTokens = this.getAllAccessTokens(clientId, homeAccountIdentifier);\r\n        var idTokens = this.getAllIdTokens(clientId, homeAccountIdentifier);\r\n        return accessTokens.concat(idTokens);\r\n    };\r\n    /**\r\n     * Return if the token renewal is still in progress\r\n     *\r\n     * @param stateValue\r\n     */\r\n    AuthCache.prototype.tokenRenewalInProgress = function (stateValue) {\r\n        var renewStatus = this.getItem(AuthCache.generateTemporaryCacheKey(_utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"TemporaryCacheKeys\"].RENEW_STATUS, stateValue));\r\n        return !!(renewStatus && renewStatus === _utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"Constants\"].inProgress);\r\n    };\r\n    /**\r\n     * Clear all cookies\r\n     */\r\n    AuthCache.prototype.clearMsalCookie = function (state) {\r\n        var _this = this;\r\n        /*\r\n         * If state is truthy, remove values associated with that request.\r\n         * Otherwise, remove all MSAL cookies.\r\n         */\r\n        if (state) {\r\n            this.clearItemCookie(AuthCache.generateTemporaryCacheKey(_utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"TemporaryCacheKeys\"].NONCE_IDTOKEN, state));\r\n            this.clearItemCookie(AuthCache.generateTemporaryCacheKey(_utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"TemporaryCacheKeys\"].STATE_LOGIN, state));\r\n            this.clearItemCookie(AuthCache.generateTemporaryCacheKey(_utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"TemporaryCacheKeys\"].LOGIN_REQUEST, state));\r\n            this.clearItemCookie(AuthCache.generateTemporaryCacheKey(_utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"TemporaryCacheKeys\"].STATE_ACQ_TOKEN, state));\r\n        }\r\n        else {\r\n            var cookies = document.cookie.split(\";\");\r\n            cookies.forEach(function (cookieString) {\r\n                var cookieName = cookieString.trim().split(\"=\")[0];\r\n                if (cookieName.indexOf(_utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"Constants\"].cachePrefix) > -1) {\r\n                    _super.prototype.clearItemCookie.call(_this, cookieName);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Create acquireTokenAccountKey to cache account object\r\n     * @param accountId\r\n     * @param state\r\n     */\r\n    AuthCache.generateAcquireTokenAccountKey = function (accountId, state) {\r\n        var stateId = _utils_RequestUtils__WEBPACK_IMPORTED_MODULE_4__[\"RequestUtils\"].parseLibraryState(state).id;\r\n        return \"\" + _utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"TemporaryCacheKeys\"].ACQUIRE_TOKEN_ACCOUNT + _utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"Constants\"].resourceDelimiter + accountId + _utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"Constants\"].resourceDelimiter + stateId;\r\n    };\r\n    /**\r\n     * Create authorityKey to cache authority\r\n     * @param state\r\n     */\r\n    AuthCache.generateAuthorityKey = function (state) {\r\n        return AuthCache.generateTemporaryCacheKey(_utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"TemporaryCacheKeys\"].AUTHORITY, state);\r\n    };\r\n    /**\r\n     * Generates the cache key for temporary cache items, using request state\r\n     * @param tempCacheKey Cache key prefix\r\n     * @param state Request state value\r\n     */\r\n    AuthCache.generateTemporaryCacheKey = function (tempCacheKey, state) {\r\n        // Use the state id (a guid), in the interest of shorter key names, which is important for cookies.\r\n        var stateId = _utils_RequestUtils__WEBPACK_IMPORTED_MODULE_4__[\"RequestUtils\"].parseLibraryState(state).id;\r\n        return \"\" + tempCacheKey + _utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"Constants\"].resourceDelimiter + stateId;\r\n    };\r\n    return AuthCache;\r\n}(_BrowserStorage__WEBPACK_IMPORTED_MODULE_3__[\"BrowserStorage\"]));\r\n\r\n//# sourceMappingURL=AuthCache.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///O1xl\n");

/***/ }),

/***/ "T0bz":
/*!******************************************************!*\
  !*** ./node_modules/msal/lib-es6/error/AuthError.js ***!
  \******************************************************/
/*! exports provided: AuthErrorMessage, AuthError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AuthErrorMessage\", function() { return AuthErrorMessage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AuthError\", function() { return AuthError; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"mrSG\");\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nvar AuthErrorMessage = {\r\n    unexpectedError: {\r\n        code: \"unexpected_error\",\r\n        desc: \"Unexpected error in authentication.\"\r\n    },\r\n    noWindowObjectError: {\r\n        code: \"no_window_object\",\r\n        desc: \"No window object available. Details:\"\r\n    }\r\n};\r\n/**\r\n * General error class thrown by the MSAL.js library.\r\n */\r\nvar AuthError = /** @class */ (function (_super) {\r\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"](AuthError, _super);\r\n    function AuthError(errorCode, errorMessage) {\r\n        var _this = _super.call(this, errorMessage) || this;\r\n        Object.setPrototypeOf(_this, AuthError.prototype);\r\n        _this.errorCode = errorCode;\r\n        _this.errorMessage = errorMessage;\r\n        _this.name = \"AuthError\";\r\n        return _this;\r\n    }\r\n    AuthError.createUnexpectedError = function (errDesc) {\r\n        return new AuthError(AuthErrorMessage.unexpectedError.code, AuthErrorMessage.unexpectedError.desc + \": \" + errDesc);\r\n    };\r\n    AuthError.createNoWindowObjectError = function (errDesc) {\r\n        return new AuthError(AuthErrorMessage.noWindowObjectError.code, AuthErrorMessage.noWindowObjectError.desc + \" \" + errDesc);\r\n    };\r\n    return AuthError;\r\n}(Error));\r\n\r\n//# sourceMappingURL=AuthError.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVDBiei5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9tc2FsL2xpYi1lczYvZXJyb3IvQXV0aEVycm9yLmpzPzRmNDYiXSwic291cmNlc0NvbnRlbnQiOlsiLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbmltcG9ydCAqIGFzIHRzbGliXzEgZnJvbSBcInRzbGliXCI7XHJcbmV4cG9ydCB2YXIgQXV0aEVycm9yTWVzc2FnZSA9IHtcclxuICAgIHVuZXhwZWN0ZWRFcnJvcjoge1xyXG4gICAgICAgIGNvZGU6IFwidW5leHBlY3RlZF9lcnJvclwiLFxyXG4gICAgICAgIGRlc2M6IFwiVW5leHBlY3RlZCBlcnJvciBpbiBhdXRoZW50aWNhdGlvbi5cIlxyXG4gICAgfSxcclxuICAgIG5vV2luZG93T2JqZWN0RXJyb3I6IHtcclxuICAgICAgICBjb2RlOiBcIm5vX3dpbmRvd19vYmplY3RcIixcclxuICAgICAgICBkZXNjOiBcIk5vIHdpbmRvdyBvYmplY3QgYXZhaWxhYmxlLiBEZXRhaWxzOlwiXHJcbiAgICB9XHJcbn07XHJcbi8qKlxyXG4gKiBHZW5lcmFsIGVycm9yIGNsYXNzIHRocm93biBieSB0aGUgTVNBTC5qcyBsaWJyYXJ5LlxyXG4gKi9cclxudmFyIEF1dGhFcnJvciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcclxuICAgIHRzbGliXzEuX19leHRlbmRzKEF1dGhFcnJvciwgX3N1cGVyKTtcclxuICAgIGZ1bmN0aW9uIEF1dGhFcnJvcihlcnJvckNvZGUsIGVycm9yTWVzc2FnZSkge1xyXG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMsIGVycm9yTWVzc2FnZSkgfHwgdGhpcztcclxuICAgICAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YoX3RoaXMsIEF1dGhFcnJvci5wcm90b3R5cGUpO1xyXG4gICAgICAgIF90aGlzLmVycm9yQ29kZSA9IGVycm9yQ29kZTtcclxuICAgICAgICBfdGhpcy5lcnJvck1lc3NhZ2UgPSBlcnJvck1lc3NhZ2U7XHJcbiAgICAgICAgX3RoaXMubmFtZSA9IFwiQXV0aEVycm9yXCI7XHJcbiAgICAgICAgcmV0dXJuIF90aGlzO1xyXG4gICAgfVxyXG4gICAgQXV0aEVycm9yLmNyZWF0ZVVuZXhwZWN0ZWRFcnJvciA9IGZ1bmN0aW9uIChlcnJEZXNjKSB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBBdXRoRXJyb3IoQXV0aEVycm9yTWVzc2FnZS51bmV4cGVjdGVkRXJyb3IuY29kZSwgQXV0aEVycm9yTWVzc2FnZS51bmV4cGVjdGVkRXJyb3IuZGVzYyArIFwiOiBcIiArIGVyckRlc2MpO1xyXG4gICAgfTtcclxuICAgIEF1dGhFcnJvci5jcmVhdGVOb1dpbmRvd09iamVjdEVycm9yID0gZnVuY3Rpb24gKGVyckRlc2MpIHtcclxuICAgICAgICByZXR1cm4gbmV3IEF1dGhFcnJvcihBdXRoRXJyb3JNZXNzYWdlLm5vV2luZG93T2JqZWN0RXJyb3IuY29kZSwgQXV0aEVycm9yTWVzc2FnZS5ub1dpbmRvd09iamVjdEVycm9yLmRlc2MgKyBcIiBcIiArIGVyckRlc2MpO1xyXG4gICAgfTtcclxuICAgIHJldHVybiBBdXRoRXJyb3I7XHJcbn0oRXJyb3IpKTtcclxuZXhwb3J0IHsgQXV0aEVycm9yIH07XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUF1dGhFcnJvci5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///T0bz\n");

/***/ }),

/***/ "TeXa":
/*!***********************************************************!*\
  !*** ./node_modules/msal/lib-es6/cache/AccessTokenKey.js ***!
  \***********************************************************/
/*! exports provided: AccessTokenKey */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AccessTokenKey\", function() { return AccessTokenKey; });\n/* harmony import */ var _utils_CryptoUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/CryptoUtils */ \"jUVH\");\n/* harmony import */ var _utils_UrlUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/UrlUtils */ \"JB7q\");\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\n\r\n/**\r\n * @hidden\r\n */\r\nvar AccessTokenKey = /** @class */ (function () {\r\n    function AccessTokenKey(authority, clientId, scopes, uid, utid) {\r\n        this.authority = _utils_UrlUtils__WEBPACK_IMPORTED_MODULE_1__[\"UrlUtils\"].CanonicalizeUri(authority);\r\n        this.clientId = clientId;\r\n        this.scopes = scopes;\r\n        this.homeAccountIdentifier = _utils_CryptoUtils__WEBPACK_IMPORTED_MODULE_0__[\"CryptoUtils\"].base64Encode(uid) + \".\" + _utils_CryptoUtils__WEBPACK_IMPORTED_MODULE_0__[\"CryptoUtils\"].base64Encode(utid);\r\n    }\r\n    return AccessTokenKey;\r\n}());\r\n\r\n//# sourceMappingURL=AccessTokenKey.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGVYYS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9tc2FsL2xpYi1lczYvY2FjaGUvQWNjZXNzVG9rZW5LZXkuanM/NGRlNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuaW1wb3J0IHsgQ3J5cHRvVXRpbHMgfSBmcm9tIFwiLi4vdXRpbHMvQ3J5cHRvVXRpbHNcIjtcclxuaW1wb3J0IHsgVXJsVXRpbHMgfSBmcm9tIFwiLi4vdXRpbHMvVXJsVXRpbHNcIjtcclxuLyoqXHJcbiAqIEBoaWRkZW5cclxuICovXHJcbnZhciBBY2Nlc3NUb2tlbktleSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcclxuICAgIGZ1bmN0aW9uIEFjY2Vzc1Rva2VuS2V5KGF1dGhvcml0eSwgY2xpZW50SWQsIHNjb3BlcywgdWlkLCB1dGlkKSB7XHJcbiAgICAgICAgdGhpcy5hdXRob3JpdHkgPSBVcmxVdGlscy5DYW5vbmljYWxpemVVcmkoYXV0aG9yaXR5KTtcclxuICAgICAgICB0aGlzLmNsaWVudElkID0gY2xpZW50SWQ7XHJcbiAgICAgICAgdGhpcy5zY29wZXMgPSBzY29wZXM7XHJcbiAgICAgICAgdGhpcy5ob21lQWNjb3VudElkZW50aWZpZXIgPSBDcnlwdG9VdGlscy5iYXNlNjRFbmNvZGUodWlkKSArIFwiLlwiICsgQ3J5cHRvVXRpbHMuYmFzZTY0RW5jb2RlKHV0aWQpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIEFjY2Vzc1Rva2VuS2V5O1xyXG59KCkpO1xyXG5leHBvcnQgeyBBY2Nlc3NUb2tlbktleSB9O1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1BY2Nlc3NUb2tlbktleS5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///TeXa\n");

/***/ }),

/***/ "YAWc":
/*!***********************************************************!*\
  !*** ./node_modules/msal/lib-es6/cache/BrowserStorage.js ***!
  \***********************************************************/
/*! exports provided: BrowserStorage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BrowserStorage\", function() { return BrowserStorage; });\n/* harmony import */ var _error_ClientConfigurationError__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error/ClientConfigurationError */ \"ZEID\");\n/* harmony import */ var _error_AuthError__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/AuthError */ \"T0bz\");\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\n\r\n/**\r\n * @hidden\r\n */\r\nvar BrowserStorage = /** @class */ (function () {\r\n    function BrowserStorage(cacheLocation) {\r\n        if (!window) {\r\n            throw _error_AuthError__WEBPACK_IMPORTED_MODULE_1__[\"AuthError\"].createNoWindowObjectError(\"Browser storage class could not find window object\");\r\n        }\r\n        var storageSupported = typeof window[cacheLocation] !== \"undefined\" && window[cacheLocation] != null;\r\n        if (!storageSupported) {\r\n            throw _error_ClientConfigurationError__WEBPACK_IMPORTED_MODULE_0__[\"ClientConfigurationError\"].createStorageNotSupportedError(cacheLocation);\r\n        }\r\n        this.cacheLocation = cacheLocation;\r\n    }\r\n    /**\r\n     * add value to storage\r\n     * @param key\r\n     * @param value\r\n     * @param enableCookieStorage\r\n     */\r\n    BrowserStorage.prototype.setItem = function (key, value, enableCookieStorage) {\r\n        window[this.cacheLocation].setItem(key, value);\r\n        if (enableCookieStorage) {\r\n            this.setItemCookie(key, value);\r\n        }\r\n    };\r\n    /**\r\n     * get one item by key from storage\r\n     * @param key\r\n     * @param enableCookieStorage\r\n     */\r\n    BrowserStorage.prototype.getItem = function (key, enableCookieStorage) {\r\n        if (enableCookieStorage && this.getItemCookie(key)) {\r\n            return this.getItemCookie(key);\r\n        }\r\n        return window[this.cacheLocation].getItem(key);\r\n    };\r\n    /**\r\n     * remove value from storage\r\n     * @param key\r\n     */\r\n    BrowserStorage.prototype.removeItem = function (key) {\r\n        return window[this.cacheLocation].removeItem(key);\r\n    };\r\n    /**\r\n     * clear storage (remove all items from it)\r\n     */\r\n    BrowserStorage.prototype.clear = function () {\r\n        return window[this.cacheLocation].clear();\r\n    };\r\n    /**\r\n     * add value to cookies\r\n     * @param cName\r\n     * @param cValue\r\n     * @param expires\r\n     */\r\n    BrowserStorage.prototype.setItemCookie = function (cName, cValue, expires) {\r\n        var cookieStr = cName + \"=\" + cValue + \";path=/;\";\r\n        if (expires) {\r\n            var expireTime = this.getCookieExpirationTime(expires);\r\n            cookieStr += \"expires=\" + expireTime + \";\";\r\n        }\r\n        document.cookie = cookieStr;\r\n    };\r\n    /**\r\n     * get one item by key from cookies\r\n     * @param cName\r\n     */\r\n    BrowserStorage.prototype.getItemCookie = function (cName) {\r\n        var name = cName + \"=\";\r\n        var ca = document.cookie.split(\";\");\r\n        for (var i = 0; i < ca.length; i++) {\r\n            var c = ca[i];\r\n            while (c.charAt(0) === \" \") {\r\n                c = c.substring(1);\r\n            }\r\n            if (c.indexOf(name) === 0) {\r\n                return c.substring(name.length, c.length);\r\n            }\r\n        }\r\n        return \"\";\r\n    };\r\n    /**\r\n     * Clear an item in the cookies by key\r\n     * @param cName\r\n     */\r\n    BrowserStorage.prototype.clearItemCookie = function (cName) {\r\n        this.setItemCookie(cName, \"\", -1);\r\n    };\r\n    /**\r\n     * Get cookie expiration time\r\n     * @param cookieLifeDays\r\n     */\r\n    BrowserStorage.prototype.getCookieExpirationTime = function (cookieLifeDays) {\r\n        var today = new Date();\r\n        var expr = new Date(today.getTime() + cookieLifeDays * 24 * 60 * 60 * 1000);\r\n        return expr.toUTCString();\r\n    };\r\n    return BrowserStorage;\r\n}());\r\n\r\n//# sourceMappingURL=BrowserStorage.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiWUFXYy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9tc2FsL2xpYi1lczYvY2FjaGUvQnJvd3NlclN0b3JhZ2UuanM/NjAwNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuaW1wb3J0IHsgQ2xpZW50Q29uZmlndXJhdGlvbkVycm9yIH0gZnJvbSBcIi4uL2Vycm9yL0NsaWVudENvbmZpZ3VyYXRpb25FcnJvclwiO1xyXG5pbXBvcnQgeyBBdXRoRXJyb3IgfSBmcm9tIFwiLi4vZXJyb3IvQXV0aEVycm9yXCI7XHJcbi8qKlxyXG4gKiBAaGlkZGVuXHJcbiAqL1xyXG52YXIgQnJvd3NlclN0b3JhZ2UgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XHJcbiAgICBmdW5jdGlvbiBCcm93c2VyU3RvcmFnZShjYWNoZUxvY2F0aW9uKSB7XHJcbiAgICAgICAgaWYgKCF3aW5kb3cpIHtcclxuICAgICAgICAgICAgdGhyb3cgQXV0aEVycm9yLmNyZWF0ZU5vV2luZG93T2JqZWN0RXJyb3IoXCJCcm93c2VyIHN0b3JhZ2UgY2xhc3MgY291bGQgbm90IGZpbmQgd2luZG93IG9iamVjdFwiKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdmFyIHN0b3JhZ2VTdXBwb3J0ZWQgPSB0eXBlb2Ygd2luZG93W2NhY2hlTG9jYXRpb25dICE9PSBcInVuZGVmaW5lZFwiICYmIHdpbmRvd1tjYWNoZUxvY2F0aW9uXSAhPSBudWxsO1xyXG4gICAgICAgIGlmICghc3RvcmFnZVN1cHBvcnRlZCkge1xyXG4gICAgICAgICAgICB0aHJvdyBDbGllbnRDb25maWd1cmF0aW9uRXJyb3IuY3JlYXRlU3RvcmFnZU5vdFN1cHBvcnRlZEVycm9yKGNhY2hlTG9jYXRpb24pO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmNhY2hlTG9jYXRpb24gPSBjYWNoZUxvY2F0aW9uO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBhZGQgdmFsdWUgdG8gc3RvcmFnZVxyXG4gICAgICogQHBhcmFtIGtleVxyXG4gICAgICogQHBhcmFtIHZhbHVlXHJcbiAgICAgKiBAcGFyYW0gZW5hYmxlQ29va2llU3RvcmFnZVxyXG4gICAgICovXHJcbiAgICBCcm93c2VyU3RvcmFnZS5wcm90b3R5cGUuc2V0SXRlbSA9IGZ1bmN0aW9uIChrZXksIHZhbHVlLCBlbmFibGVDb29raWVTdG9yYWdlKSB7XHJcbiAgICAgICAgd2luZG93W3RoaXMuY2FjaGVMb2NhdGlvbl0uc2V0SXRlbShrZXksIHZhbHVlKTtcclxuICAgICAgICBpZiAoZW5hYmxlQ29va2llU3RvcmFnZSkge1xyXG4gICAgICAgICAgICB0aGlzLnNldEl0ZW1Db29raWUoa2V5LCB2YWx1ZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICogZ2V0IG9uZSBpdGVtIGJ5IGtleSBmcm9tIHN0b3JhZ2VcclxuICAgICAqIEBwYXJhbSBrZXlcclxuICAgICAqIEBwYXJhbSBlbmFibGVDb29raWVTdG9yYWdlXHJcbiAgICAgKi9cclxuICAgIEJyb3dzZXJTdG9yYWdlLnByb3RvdHlwZS5nZXRJdGVtID0gZnVuY3Rpb24gKGtleSwgZW5hYmxlQ29va2llU3RvcmFnZSkge1xyXG4gICAgICAgIGlmIChlbmFibGVDb29raWVTdG9yYWdlICYmIHRoaXMuZ2V0SXRlbUNvb2tpZShrZXkpKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmdldEl0ZW1Db29raWUoa2V5KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHdpbmRvd1t0aGlzLmNhY2hlTG9jYXRpb25dLmdldEl0ZW0oa2V5KTtcclxuICAgIH07XHJcbiAgICAvKipcclxuICAgICAqIHJlbW92ZSB2YWx1ZSBmcm9tIHN0b3JhZ2VcclxuICAgICAqIEBwYXJhbSBrZXlcclxuICAgICAqL1xyXG4gICAgQnJvd3NlclN0b3JhZ2UucHJvdG90eXBlLnJlbW92ZUl0ZW0gPSBmdW5jdGlvbiAoa2V5KSB7XHJcbiAgICAgICAgcmV0dXJuIHdpbmRvd1t0aGlzLmNhY2hlTG9jYXRpb25dLnJlbW92ZUl0ZW0oa2V5KTtcclxuICAgIH07XHJcbiAgICAvKipcclxuICAgICAqIGNsZWFyIHN0b3JhZ2UgKHJlbW92ZSBhbGwgaXRlbXMgZnJvbSBpdClcclxuICAgICAqL1xyXG4gICAgQnJvd3NlclN0b3JhZ2UucHJvdG90eXBlLmNsZWFyID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHJldHVybiB3aW5kb3dbdGhpcy5jYWNoZUxvY2F0aW9uXS5jbGVhcigpO1xyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICogYWRkIHZhbHVlIHRvIGNvb2tpZXNcclxuICAgICAqIEBwYXJhbSBjTmFtZVxyXG4gICAgICogQHBhcmFtIGNWYWx1ZVxyXG4gICAgICogQHBhcmFtIGV4cGlyZXNcclxuICAgICAqL1xyXG4gICAgQnJvd3NlclN0b3JhZ2UucHJvdG90eXBlLnNldEl0ZW1Db29raWUgPSBmdW5jdGlvbiAoY05hbWUsIGNWYWx1ZSwgZXhwaXJlcykge1xyXG4gICAgICAgIHZhciBjb29raWVTdHIgPSBjTmFtZSArIFwiPVwiICsgY1ZhbHVlICsgXCI7cGF0aD0vO1wiO1xyXG4gICAgICAgIGlmIChleHBpcmVzKSB7XHJcbiAgICAgICAgICAgIHZhciBleHBpcmVUaW1lID0gdGhpcy5nZXRDb29raWVFeHBpcmF0aW9uVGltZShleHBpcmVzKTtcclxuICAgICAgICAgICAgY29va2llU3RyICs9IFwiZXhwaXJlcz1cIiArIGV4cGlyZVRpbWUgKyBcIjtcIjtcclxuICAgICAgICB9XHJcbiAgICAgICAgZG9jdW1lbnQuY29va2llID0gY29va2llU3RyO1xyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICogZ2V0IG9uZSBpdGVtIGJ5IGtleSBmcm9tIGNvb2tpZXNcclxuICAgICAqIEBwYXJhbSBjTmFtZVxyXG4gICAgICovXHJcbiAgICBCcm93c2VyU3RvcmFnZS5wcm90b3R5cGUuZ2V0SXRlbUNvb2tpZSA9IGZ1bmN0aW9uIChjTmFtZSkge1xyXG4gICAgICAgIHZhciBuYW1lID0gY05hbWUgKyBcIj1cIjtcclxuICAgICAgICB2YXIgY2EgPSBkb2N1bWVudC5jb29raWUuc3BsaXQoXCI7XCIpO1xyXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY2EubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgdmFyIGMgPSBjYVtpXTtcclxuICAgICAgICAgICAgd2hpbGUgKGMuY2hhckF0KDApID09PSBcIiBcIikge1xyXG4gICAgICAgICAgICAgICAgYyA9IGMuc3Vic3RyaW5nKDEpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChjLmluZGV4T2YobmFtZSkgPT09IDApIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBjLnN1YnN0cmluZyhuYW1lLmxlbmd0aCwgYy5sZW5ndGgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBcIlwiO1xyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICogQ2xlYXIgYW4gaXRlbSBpbiB0aGUgY29va2llcyBieSBrZXlcclxuICAgICAqIEBwYXJhbSBjTmFtZVxyXG4gICAgICovXHJcbiAgICBCcm93c2VyU3RvcmFnZS5wcm90b3R5cGUuY2xlYXJJdGVtQ29va2llID0gZnVuY3Rpb24gKGNOYW1lKSB7XHJcbiAgICAgICAgdGhpcy5zZXRJdGVtQ29va2llKGNOYW1lLCBcIlwiLCAtMSk7XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiBHZXQgY29va2llIGV4cGlyYXRpb24gdGltZVxyXG4gICAgICogQHBhcmFtIGNvb2tpZUxpZmVEYXlzXHJcbiAgICAgKi9cclxuICAgIEJyb3dzZXJTdG9yYWdlLnByb3RvdHlwZS5nZXRDb29raWVFeHBpcmF0aW9uVGltZSA9IGZ1bmN0aW9uIChjb29raWVMaWZlRGF5cykge1xyXG4gICAgICAgIHZhciB0b2RheSA9IG5ldyBEYXRlKCk7XHJcbiAgICAgICAgdmFyIGV4cHIgPSBuZXcgRGF0ZSh0b2RheS5nZXRUaW1lKCkgKyBjb29raWVMaWZlRGF5cyAqIDI0ICogNjAgKiA2MCAqIDEwMDApO1xyXG4gICAgICAgIHJldHVybiBleHByLnRvVVRDU3RyaW5nKCk7XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIEJyb3dzZXJTdG9yYWdlO1xyXG59KCkpO1xyXG5leHBvcnQgeyBCcm93c2VyU3RvcmFnZSB9O1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1Ccm93c2VyU3RvcmFnZS5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///YAWc\n");

/***/ }),

/***/ "ZEID":
/*!*********************************************************************!*\
  !*** ./node_modules/msal/lib-es6/error/ClientConfigurationError.js ***!
  \*********************************************************************/
/*! exports provided: ClientConfigurationErrorMessage, ClientConfigurationError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ClientConfigurationErrorMessage\", function() { return ClientConfigurationErrorMessage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ClientConfigurationError\", function() { return ClientConfigurationError; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"mrSG\");\n/* harmony import */ var _ClientAuthError__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ClientAuthError */ \"7ZR7\");\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\n\r\nvar ClientConfigurationErrorMessage = {\r\n    configurationNotSet: {\r\n        code: \"no_config_set\",\r\n        desc: \"Configuration has not been set. Please call the UserAgentApplication constructor with a valid Configuration object.\"\r\n    },\r\n    storageNotSupported: {\r\n        code: \"storage_not_supported\",\r\n        desc: \"The value for the cacheLocation is not supported.\"\r\n    },\r\n    noRedirectCallbacksSet: {\r\n        code: \"no_redirect_callbacks\",\r\n        desc: \"No redirect callbacks have been set. Please call handleRedirectCallback() with the appropriate function arguments before continuing. \" +\r\n            \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\"\r\n    },\r\n    invalidCallbackObject: {\r\n        code: \"invalid_callback_object\",\r\n        desc: \"The object passed for the callback was invalid. \" +\r\n            \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\"\r\n    },\r\n    scopesRequired: {\r\n        code: \"scopes_required\",\r\n        desc: \"Scopes are required to obtain an access token.\"\r\n    },\r\n    emptyScopes: {\r\n        code: \"empty_input_scopes_error\",\r\n        desc: \"Scopes cannot be passed as empty array.\"\r\n    },\r\n    nonArrayScopes: {\r\n        code: \"nonarray_input_scopes_error\",\r\n        desc: \"Scopes cannot be passed as non-array.\"\r\n    },\r\n    invalidPrompt: {\r\n        code: \"invalid_prompt_value\",\r\n        desc: \"Supported prompt values are 'login', 'select_account', 'consent' and 'none'\",\r\n    },\r\n    invalidAuthorityType: {\r\n        code: \"invalid_authority_type\",\r\n        desc: \"The given authority is not a valid type of authority supported by MSAL. Please see here for valid authorities: <insert URL here>.\"\r\n    },\r\n    authorityUriInsecure: {\r\n        code: \"authority_uri_insecure\",\r\n        desc: \"Authority URIs must use https.\"\r\n    },\r\n    authorityUriInvalidPath: {\r\n        code: \"authority_uri_invalid_path\",\r\n        desc: \"Given authority URI is invalid.\"\r\n    },\r\n    unsupportedAuthorityValidation: {\r\n        code: \"unsupported_authority_validation\",\r\n        desc: \"The authority validation is not supported for this authority type.\"\r\n    },\r\n    untrustedAuthority: {\r\n        code: \"untrusted_authority\",\r\n        desc: \"The provided authority is not a trusted authority. Please include this authority in the knownAuthorities config parameter or set validateAuthority=false.\"\r\n    },\r\n    b2cAuthorityUriInvalidPath: {\r\n        code: \"b2c_authority_uri_invalid_path\",\r\n        desc: \"The given URI for the B2C authority is invalid.\"\r\n    },\r\n    b2cKnownAuthoritiesNotSet: {\r\n        code: \"b2c_known_authorities_not_set\",\r\n        desc: \"Must set known authorities when validateAuthority is set to True and using B2C\"\r\n    },\r\n    claimsRequestParsingError: {\r\n        code: \"claims_request_parsing_error\",\r\n        desc: \"Could not parse the given claims request object.\"\r\n    },\r\n    emptyRequestError: {\r\n        code: \"empty_request_error\",\r\n        desc: \"Request object is required.\"\r\n    },\r\n    invalidCorrelationIdError: {\r\n        code: \"invalid_guid_sent_as_correlationId\",\r\n        desc: \"Please set the correlationId as a valid guid\"\r\n    },\r\n    telemetryConfigError: {\r\n        code: \"telemetry_config_error\",\r\n        desc: \"Telemetry config is not configured with required values\"\r\n    },\r\n    ssoSilentError: {\r\n        code: \"sso_silent_error\",\r\n        desc: \"request must contain either sid or login_hint\"\r\n    },\r\n    invalidAuthorityMetadataError: {\r\n        code: \"authority_metadata_error\",\r\n        desc: \"Invalid authorityMetadata. Must be a JSON object containing authorization_endpoint, end_session_endpoint, and issuer fields.\"\r\n    }\r\n};\r\n/**\r\n * Error thrown when there is an error in configuration of the .js library.\r\n */\r\nvar ClientConfigurationError = /** @class */ (function (_super) {\r\n    tslib__WEBPACK_IMPORTED_MODULE_0__[\"__extends\"](ClientConfigurationError, _super);\r\n    function ClientConfigurationError(errorCode, errorMessage) {\r\n        var _this = _super.call(this, errorCode, errorMessage) || this;\r\n        _this.name = \"ClientConfigurationError\";\r\n        Object.setPrototypeOf(_this, ClientConfigurationError.prototype);\r\n        return _this;\r\n    }\r\n    ClientConfigurationError.createNoSetConfigurationError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.configurationNotSet.code, \"\" + ClientConfigurationErrorMessage.configurationNotSet.desc);\r\n    };\r\n    ClientConfigurationError.createStorageNotSupportedError = function (givenCacheLocation) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.storageNotSupported.code, ClientConfigurationErrorMessage.storageNotSupported.desc + \" Given location: \" + givenCacheLocation);\r\n    };\r\n    ClientConfigurationError.createRedirectCallbacksNotSetError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.noRedirectCallbacksSet.code, ClientConfigurationErrorMessage.noRedirectCallbacksSet.desc);\r\n    };\r\n    ClientConfigurationError.createInvalidCallbackObjectError = function (callbackObject) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidCallbackObject.code, ClientConfigurationErrorMessage.invalidCallbackObject.desc + \" Given value for callback function: \" + callbackObject);\r\n    };\r\n    ClientConfigurationError.createEmptyScopesArrayError = function (scopesValue) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.emptyScopes.code, ClientConfigurationErrorMessage.emptyScopes.desc + \" Given value: \" + scopesValue + \".\");\r\n    };\r\n    ClientConfigurationError.createScopesNonArrayError = function (scopesValue) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.nonArrayScopes.code, ClientConfigurationErrorMessage.nonArrayScopes.desc + \" Given value: \" + scopesValue + \".\");\r\n    };\r\n    ClientConfigurationError.createScopesRequiredError = function (scopesValue) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.scopesRequired.code, ClientConfigurationErrorMessage.scopesRequired.desc + \" Given value: \" + scopesValue);\r\n    };\r\n    ClientConfigurationError.createInvalidPromptError = function (promptValue) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidPrompt.code, ClientConfigurationErrorMessage.invalidPrompt.desc + \" Given value: \" + promptValue);\r\n    };\r\n    ClientConfigurationError.createClaimsRequestParsingError = function (claimsRequestParseError) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.claimsRequestParsingError.code, ClientConfigurationErrorMessage.claimsRequestParsingError.desc + \" Given value: \" + claimsRequestParseError);\r\n    };\r\n    ClientConfigurationError.createEmptyRequestError = function () {\r\n        var _a = ClientConfigurationErrorMessage.emptyRequestError, code = _a.code, desc = _a.desc;\r\n        return new ClientConfigurationError(code, desc);\r\n    };\r\n    ClientConfigurationError.createInvalidCorrelationIdError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidCorrelationIdError.code, ClientConfigurationErrorMessage.invalidCorrelationIdError.desc);\r\n    };\r\n    ClientConfigurationError.createKnownAuthoritiesNotSetError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.b2cKnownAuthoritiesNotSet.code, ClientConfigurationErrorMessage.b2cKnownAuthoritiesNotSet.desc);\r\n    };\r\n    ClientConfigurationError.createInvalidAuthorityTypeError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidAuthorityType.code, ClientConfigurationErrorMessage.invalidAuthorityType.desc);\r\n    };\r\n    ClientConfigurationError.createUntrustedAuthorityError = function (host) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.untrustedAuthority.code, ClientConfigurationErrorMessage.untrustedAuthority.desc + \" Provided Authority: \" + host);\r\n    };\r\n    ClientConfigurationError.createTelemetryConfigError = function (config) {\r\n        var _a = ClientConfigurationErrorMessage.telemetryConfigError, code = _a.code, desc = _a.desc;\r\n        var requiredKeys = {\r\n            applicationName: \"string\",\r\n            applicationVersion: \"string\",\r\n            telemetryEmitter: \"function\"\r\n        };\r\n        var missingKeys = Object.keys(requiredKeys)\r\n            .reduce(function (keys, key) {\r\n            return config[key] ? keys : keys.concat([key + \" (\" + requiredKeys[key] + \")\"]);\r\n        }, []);\r\n        return new ClientConfigurationError(code, desc + \" mising values: \" + missingKeys.join(\",\"));\r\n    };\r\n    ClientConfigurationError.createSsoSilentError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.ssoSilentError.code, ClientConfigurationErrorMessage.ssoSilentError.desc);\r\n    };\r\n    ClientConfigurationError.createInvalidAuthorityMetadataError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidAuthorityMetadataError.code, ClientConfigurationErrorMessage.invalidAuthorityMetadataError.desc);\r\n    };\r\n    return ClientConfigurationError;\r\n}(_ClientAuthError__WEBPACK_IMPORTED_MODULE_1__[\"ClientAuthError\"]));\r\n\r\n//# sourceMappingURL=ClientConfigurationError.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///ZEID\n");

/***/ }),

/***/ "ZES5":
/*!***********************************************************!*\
  !*** ./node_modules/msal/lib-es6/UserAgentApplication.js ***!
  \***********************************************************/
/*! exports provided: UserAgentApplication */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(Promise) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UserAgentApplication\", function() { return UserAgentApplication; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"mrSG\");\n/* harmony import */ var _cache_AccessTokenKey__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cache/AccessTokenKey */ \"TeXa\");\n/* harmony import */ var _cache_AccessTokenValue__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cache/AccessTokenValue */ \"66Uo\");\n/* harmony import */ var _ServerRequestParameters__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ServerRequestParameters */ \"z2Jz\");\n/* harmony import */ var _authority_Authority__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./authority/Authority */ \"bro/\");\n/* harmony import */ var _ClientInfo__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ClientInfo */ \"2Lt5\");\n/* harmony import */ var _IdToken__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./IdToken */ \"yRtI\");\n/* harmony import */ var _cache_AuthCache__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./cache/AuthCache */ \"O1xl\");\n/* harmony import */ var _Account__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Account */ \"2Sq9\");\n/* harmony import */ var _ScopeSet__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./ScopeSet */ \"8ImU\");\n/* harmony import */ var _utils_StringUtils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./utils/StringUtils */ \"Emp/\");\n/* harmony import */ var _utils_WindowUtils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./utils/WindowUtils */ \"6CUc\");\n/* harmony import */ var _utils_TokenUtils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./utils/TokenUtils */ \"Jv1r\");\n/* harmony import */ var _utils_TimeUtils__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./utils/TimeUtils */ \"G1Z1\");\n/* harmony import */ var _utils_UrlUtils__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./utils/UrlUtils */ \"JB7q\");\n/* harmony import */ var _utils_RequestUtils__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./utils/RequestUtils */ \"kcKs\");\n/* harmony import */ var _utils_ResponseUtils__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./utils/ResponseUtils */ \"mp9i\");\n/* harmony import */ var _authority_AuthorityFactory__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./authority/AuthorityFactory */ \"GaoF\");\n/* harmony import */ var _Configuration__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./Configuration */ \"WRS4\");\n/* harmony import */ var _error_ClientConfigurationError__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./error/ClientConfigurationError */ \"ZEID\");\n/* harmony import */ var _error_AuthError__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./error/AuthError */ \"T0bz\");\n/* harmony import */ var _error_ClientAuthError__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./error/ClientAuthError */ \"7ZR7\");\n/* harmony import */ var _error_ServerError__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./error/ServerError */ \"JKGV\");\n/* harmony import */ var _error_InteractionRequiredAuthError__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./error/InteractionRequiredAuthError */ \"3Kci\");\n/* harmony import */ var _AuthResponse__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./AuthResponse */ \"d2+l\");\n/* harmony import */ var _telemetry_TelemetryManager__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./telemetry/TelemetryManager */ \"03G2\");\n/* harmony import */ var _telemetry_ApiEvent__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./telemetry/ApiEvent */ \"F+3F\");\n/* harmony import */ var _utils_Constants__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./utils/Constants */ \"wmgs\");\n/* harmony import */ var _utils_CryptoUtils__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./utils/CryptoUtils */ \"jUVH\");\n/* harmony import */ var _authority_TrustedAuthority__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./authority/TrustedAuthority */ \"wwyH\");\n/* harmony import */ var _utils_AuthCacheUtils__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./utils/AuthCacheUtils */ \"c6fL\");\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// default authority\r\nvar DEFAULT_AUTHORITY = \"https://login.microsoftonline.com/common\";\r\n/**\r\n * UserAgentApplication class\r\n *\r\n * Object Instance that the developer can use to make loginXX OR acquireTokenXX functions\r\n */\r\nvar UserAgentApplication = /** @class */ (function () {\r\n    /**\r\n     * @constructor\r\n     * Constructor for the UserAgentApplication used to instantiate the UserAgentApplication object\r\n     *\r\n     * Important attributes in the Configuration object for auth are:\r\n     * - clientID: the application ID of your application.\r\n     * You can obtain one by registering your application with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview\r\n     * - authority: the authority URL for your application.\r\n     *\r\n     * In Azure AD, authority is a URL indicating the Azure active directory that MSAL uses to obtain tokens.\r\n     * It is of the form https://login.microsoftonline.com/&lt;Enter_the_Tenant_Info_Here&gt;.\r\n     * If your application supports Accounts in one organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with the Tenant Id or Tenant name (for example, contoso.microsoft.com).\r\n     * If your application supports Accounts in any organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with organizations.\r\n     * If your application supports Accounts in any organizational directory and personal Microsoft accounts, replace \"Enter_the_Tenant_Info_Here\" value with common.\r\n     * To restrict support to Personal Microsoft accounts only, replace \"Enter_the_Tenant_Info_Here\" value with consumers.\r\n     *\r\n     *\r\n     * In Azure B2C, authority is of the form https://&lt;instance&gt;/tfp/&lt;tenant&gt;/&lt;policyName&gt;/\r\n     *\r\n     * @param {@link (Configuration:type)} configuration object for the MSAL UserAgentApplication instance\r\n     */\r\n    function UserAgentApplication(configuration) {\r\n        // callbacks for token/error\r\n        this.authResponseCallback = null;\r\n        this.tokenReceivedCallback = null;\r\n        this.errorReceivedCallback = null;\r\n        // Set the Configuration\r\n        this.config = Object(_Configuration__WEBPACK_IMPORTED_MODULE_18__[\"buildConfiguration\"])(configuration);\r\n        this.logger = this.config.system.logger;\r\n        this.clientId = this.config.auth.clientId;\r\n        this.inCookie = this.config.cache.storeAuthStateInCookie;\r\n        this.telemetryManager = this.getTelemetryManagerFromConfig(this.config.system.telemetry, this.clientId);\r\n        _authority_TrustedAuthority__WEBPACK_IMPORTED_MODULE_29__[\"TrustedAuthority\"].setTrustedAuthoritiesFromConfig(this.config.auth.validateAuthority, this.config.auth.knownAuthorities);\r\n        _authority_AuthorityFactory__WEBPACK_IMPORTED_MODULE_17__[\"AuthorityFactory\"].saveMetadataFromConfig(this.config.auth.authority, this.config.auth.authorityMetadata);\r\n        // if no authority is passed, set the default: \"https://login.microsoftonline.com/common\"\r\n        this.authority = this.config.auth.authority || DEFAULT_AUTHORITY;\r\n        // cache keys msal - typescript throws an error if any value other than \"localStorage\" or \"sessionStorage\" is passed\r\n        this.cacheStorage = new _cache_AuthCache__WEBPACK_IMPORTED_MODULE_7__[\"AuthCache\"](this.clientId, this.config.cache.cacheLocation, this.inCookie);\r\n        // Initialize window handling code\r\n        window.activeRenewals = {};\r\n        window.renewStates = [];\r\n        window.callbackMappedToRenewStates = {};\r\n        window.promiseMappedToRenewStates = {};\r\n        window.msal = this;\r\n        var urlHash = window.location.hash;\r\n        var urlContainsHash = _utils_UrlUtils__WEBPACK_IMPORTED_MODULE_14__[\"UrlUtils\"].urlContainsHash(urlHash);\r\n        // check if back button is pressed\r\n        _utils_WindowUtils__WEBPACK_IMPORTED_MODULE_11__[\"WindowUtils\"].checkIfBackButtonIsPressed(this.cacheStorage);\r\n        // On the server 302 - Redirect, handle this\r\n        if (urlContainsHash) {\r\n            var stateInfo = this.getResponseState(urlHash);\r\n            if (stateInfo.method === _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].interactionTypeRedirect) {\r\n                this.handleRedirectAuthenticationResponse(urlHash);\r\n            }\r\n        }\r\n    }\r\n    Object.defineProperty(UserAgentApplication.prototype, \"authority\", {\r\n        /**\r\n         * Method to manage the authority URL.\r\n         *\r\n         * @returns {string} authority\r\n         */\r\n        get: function () {\r\n            return this.authorityInstance.CanonicalAuthority;\r\n        },\r\n        /**\r\n         * setter for the authority URL\r\n         * @param {string} authority\r\n         */\r\n        // If the developer passes an authority, create an instance\r\n        set: function (val) {\r\n            this.authorityInstance = _authority_AuthorityFactory__WEBPACK_IMPORTED_MODULE_17__[\"AuthorityFactory\"].CreateInstance(val, this.config.auth.validateAuthority);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Get the current authority instance from the MSAL configuration object\r\n     *\r\n     * @returns {@link Authority} authority instance\r\n     */\r\n    UserAgentApplication.prototype.getAuthorityInstance = function () {\r\n        return this.authorityInstance;\r\n    };\r\n    UserAgentApplication.prototype.handleRedirectCallback = function (authOrTokenCallback, errorReceivedCallback) {\r\n        if (!authOrTokenCallback) {\r\n            throw _error_ClientConfigurationError__WEBPACK_IMPORTED_MODULE_19__[\"ClientConfigurationError\"].createInvalidCallbackObjectError(authOrTokenCallback);\r\n        }\r\n        // Set callbacks\r\n        if (errorReceivedCallback) {\r\n            this.tokenReceivedCallback = authOrTokenCallback;\r\n            this.errorReceivedCallback = errorReceivedCallback;\r\n            this.logger.warning(\"This overload for callback is deprecated - please change the format of the callbacks to a single callback as shown: (err: AuthError, response: AuthResponse).\");\r\n        }\r\n        else {\r\n            this.authResponseCallback = authOrTokenCallback;\r\n        }\r\n        if (this.redirectError) {\r\n            this.authErrorHandler(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].interactionTypeRedirect, this.redirectError, this.redirectResponse);\r\n        }\r\n        else if (this.redirectResponse) {\r\n            this.authResponseHandler(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].interactionTypeRedirect, this.redirectResponse);\r\n        }\r\n    };\r\n    /**\r\n     * Public API to verify if the URL contains the hash with known properties\r\n     * @param hash\r\n     */\r\n    UserAgentApplication.prototype.urlContainsHash = function (hash) {\r\n        this.logger.verbose(\"UrlContainsHash has been called\");\r\n        return _utils_UrlUtils__WEBPACK_IMPORTED_MODULE_14__[\"UrlUtils\"].urlContainsHash(hash);\r\n    };\r\n    UserAgentApplication.prototype.authResponseHandler = function (interactionType, response, resolve) {\r\n        this.logger.verbose(\"AuthResponseHandler has been called\");\r\n        if (interactionType === _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].interactionTypeRedirect) {\r\n            this.logger.verbose(\"Interaction type is redirect\");\r\n            if (this.errorReceivedCallback) {\r\n                this.logger.verbose(\"Two callbacks were provided to handleRedirectCallback, calling success callback with response\");\r\n                this.tokenReceivedCallback(response);\r\n            }\r\n            else if (this.authResponseCallback) {\r\n                this.logger.verbose(\"One callback was provided to handleRedirectCallback, calling authResponseCallback with response\");\r\n                this.authResponseCallback(null, response);\r\n            }\r\n        }\r\n        else if (interactionType === _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].interactionTypePopup) {\r\n            this.logger.verbose(\"Interaction type is popup, resolving\");\r\n            resolve(response);\r\n        }\r\n        else {\r\n            throw _error_ClientAuthError__WEBPACK_IMPORTED_MODULE_21__[\"ClientAuthError\"].createInvalidInteractionTypeError();\r\n        }\r\n    };\r\n    UserAgentApplication.prototype.authErrorHandler = function (interactionType, authErr, response, reject) {\r\n        this.logger.verbose(\"AuthErrorHandler has been called\");\r\n        // set interaction_status to complete\r\n        this.cacheStorage.removeItem(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"TemporaryCacheKeys\"].INTERACTION_STATUS);\r\n        if (interactionType === _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].interactionTypeRedirect) {\r\n            this.logger.verbose(\"Interaction type is redirect\");\r\n            if (this.errorReceivedCallback) {\r\n                this.logger.verbose(\"Two callbacks were provided to handleRedirectCallback, calling error callback\");\r\n                this.errorReceivedCallback(authErr, response.accountState);\r\n            }\r\n            else if (this.authResponseCallback) {\r\n                this.logger.verbose(\"One callback was provided to handleRedirectCallback, calling authResponseCallback with error\");\r\n                this.authResponseCallback(authErr, response);\r\n            }\r\n            else {\r\n                this.logger.verbose(\"handleRedirectCallback has not been called and no callbacks are registered, throwing error\");\r\n                throw authErr;\r\n            }\r\n        }\r\n        else if (interactionType === _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].interactionTypePopup) {\r\n            this.logger.verbose(\"Interaction type is popup, rejecting\");\r\n            reject(authErr);\r\n        }\r\n        else {\r\n            throw _error_ClientAuthError__WEBPACK_IMPORTED_MODULE_21__[\"ClientAuthError\"].createInvalidInteractionTypeError();\r\n        }\r\n    };\r\n    // #endregion\r\n    /**\r\n     * Use when initiating the login process by redirecting the user's browser to the authorization endpoint.\r\n     * @param {@link (AuthenticationParameters:type)}\r\n     */\r\n    UserAgentApplication.prototype.loginRedirect = function (userRequest) {\r\n        this.logger.verbose(\"LoginRedirect has been called\");\r\n        // validate request\r\n        var request = _utils_RequestUtils__WEBPACK_IMPORTED_MODULE_15__[\"RequestUtils\"].validateRequest(userRequest, true, this.clientId, _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].interactionTypeRedirect);\r\n        this.acquireTokenInteractive(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].interactionTypeRedirect, true, request, null, null);\r\n    };\r\n    /**\r\n     * Use when you want to obtain an access_token for your API by redirecting the user's browser window to the authorization endpoint.\r\n     * @param {@link (AuthenticationParameters:type)}\r\n     *\r\n     * To renew idToken, please pass clientId as the only scope in the Authentication Parameters\r\n     */\r\n    UserAgentApplication.prototype.acquireTokenRedirect = function (userRequest) {\r\n        this.logger.verbose(\"AcquireTokenRedirect has been called\");\r\n        // validate request\r\n        var request = _utils_RequestUtils__WEBPACK_IMPORTED_MODULE_15__[\"RequestUtils\"].validateRequest(userRequest, false, this.clientId, _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].interactionTypeRedirect);\r\n        this.acquireTokenInteractive(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].interactionTypeRedirect, false, request, null, null);\r\n    };\r\n    /**\r\n     * Use when initiating the login process via opening a popup window in the user's browser\r\n     *\r\n     * @param {@link (AuthenticationParameters:type)}\r\n     *\r\n     * @returns {Promise.<AuthResponse>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\r\n     */\r\n    UserAgentApplication.prototype.loginPopup = function (userRequest) {\r\n        var _this = this;\r\n        this.logger.verbose(\"LoginPopup has been called\");\r\n        // validate request\r\n        var request = _utils_RequestUtils__WEBPACK_IMPORTED_MODULE_15__[\"RequestUtils\"].validateRequest(userRequest, true, this.clientId, _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].interactionTypePopup);\r\n        var apiEvent = this.telemetryManager.createAndStartApiEvent(request.correlationId, _telemetry_ApiEvent__WEBPACK_IMPORTED_MODULE_26__[\"API_EVENT_IDENTIFIER\"].LoginPopup);\r\n        return new Promise(function (resolve, reject) {\r\n            _this.acquireTokenInteractive(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].interactionTypePopup, true, request, resolve, reject);\r\n        })\r\n            .then(function (resp) {\r\n            _this.logger.verbose(\"Successfully logged in\");\r\n            _this.telemetryManager.stopAndFlushApiEvent(request.correlationId, apiEvent, true);\r\n            return resp;\r\n        })\r\n            .catch(function (error) {\r\n            _this.cacheStorage.resetTempCacheItems(request.state);\r\n            _this.telemetryManager.stopAndFlushApiEvent(request.correlationId, apiEvent, false, error.errorCode);\r\n            throw error;\r\n        });\r\n    };\r\n    /**\r\n     * Use when you want to obtain an access_token for your API via opening a popup window in the user's browser\r\n     * @param {@link AuthenticationParameters}\r\n     *\r\n     * To renew idToken, please pass clientId as the only scope in the Authentication Parameters\r\n     * @returns {Promise.<AuthResponse>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\r\n     */\r\n    UserAgentApplication.prototype.acquireTokenPopup = function (userRequest) {\r\n        var _this = this;\r\n        this.logger.verbose(\"AcquireTokenPopup has been called\");\r\n        // validate request\r\n        var request = _utils_RequestUtils__WEBPACK_IMPORTED_MODULE_15__[\"RequestUtils\"].validateRequest(userRequest, false, this.clientId, _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].interactionTypePopup);\r\n        var apiEvent = this.telemetryManager.createAndStartApiEvent(request.correlationId, _telemetry_ApiEvent__WEBPACK_IMPORTED_MODULE_26__[\"API_EVENT_IDENTIFIER\"].AcquireTokenPopup);\r\n        return new Promise(function (resolve, reject) {\r\n            _this.acquireTokenInteractive(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].interactionTypePopup, false, request, resolve, reject);\r\n        })\r\n            .then(function (resp) {\r\n            _this.logger.verbose(\"Successfully acquired token\");\r\n            _this.telemetryManager.stopAndFlushApiEvent(request.correlationId, apiEvent, true);\r\n            return resp;\r\n        })\r\n            .catch(function (error) {\r\n            _this.cacheStorage.resetTempCacheItems(request.state);\r\n            _this.telemetryManager.stopAndFlushApiEvent(request.correlationId, apiEvent, false, error.errorCode);\r\n            throw error;\r\n        });\r\n    };\r\n    // #region Acquire Token\r\n    /**\r\n     * Use when initiating the login process or when you want to obtain an access_token for your API,\r\n     * either by redirecting the user's browser window to the authorization endpoint or via opening a popup window in the user's browser.\r\n     * @param {@link (AuthenticationParameters:type)}\r\n     *\r\n     * To renew idToken, please pass clientId as the only scope in the Authentication Parameters\r\n     */\r\n    UserAgentApplication.prototype.acquireTokenInteractive = function (interactionType, isLoginCall, request, resolve, reject) {\r\n        var _this = this;\r\n        this.logger.verbose(\"AcquireTokenInteractive has been called\");\r\n        // block the request if made from the hidden iframe\r\n        _utils_WindowUtils__WEBPACK_IMPORTED_MODULE_11__[\"WindowUtils\"].blockReloadInHiddenIframes();\r\n        var interactionProgress = this.cacheStorage.getItem(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"TemporaryCacheKeys\"].INTERACTION_STATUS);\r\n        if (interactionType === _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].interactionTypeRedirect) {\r\n            this.cacheStorage.setItem(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"TemporaryCacheKeys\"].REDIRECT_REQUEST, \"\" + _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].inProgress + _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].resourceDelimiter + request.state);\r\n        }\r\n        // If already in progress, do not proceed\r\n        if (interactionProgress === _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].inProgress) {\r\n            var thrownError = isLoginCall ? _error_ClientAuthError__WEBPACK_IMPORTED_MODULE_21__[\"ClientAuthError\"].createLoginInProgressError() : _error_ClientAuthError__WEBPACK_IMPORTED_MODULE_21__[\"ClientAuthError\"].createAcquireTokenInProgressError();\r\n            var stateOnlyResponse = Object(_AuthResponse__WEBPACK_IMPORTED_MODULE_24__[\"buildResponseStateOnly\"])(this.getAccountState(request.state));\r\n            this.cacheStorage.resetTempCacheItems(request.state);\r\n            this.authErrorHandler(interactionType, thrownError, stateOnlyResponse, reject);\r\n            return;\r\n        }\r\n        // Get the account object if a session exists\r\n        var account;\r\n        if (request && request.account && !isLoginCall) {\r\n            account = request.account;\r\n            this.logger.verbose(\"Account set from request\");\r\n        }\r\n        else {\r\n            account = this.getAccount();\r\n            this.logger.verbose(\"Account set from MSAL Cache\");\r\n        }\r\n        // If no session exists, prompt the user to login.\r\n        if (!account && !_ServerRequestParameters__WEBPACK_IMPORTED_MODULE_3__[\"ServerRequestParameters\"].isSSOParam(request)) {\r\n            if (isLoginCall) {\r\n                // extract ADAL id_token if exists\r\n                var adalIdToken = this.extractADALIdToken();\r\n                // silent login if ADAL id_token is retrieved successfully - SSO\r\n                if (adalIdToken && !request.scopes) {\r\n                    this.logger.info(\"ADAL's idToken exists. Extracting login information from ADAL's idToken\");\r\n                    var tokenRequest = this.buildIDTokenRequest(request);\r\n                    this.silentLogin = true;\r\n                    this.acquireTokenSilent(tokenRequest).then(function (response) {\r\n                        _this.silentLogin = false;\r\n                        _this.logger.info(\"Unified cache call is successful\");\r\n                        _this.authResponseHandler(interactionType, response, resolve);\r\n                        return;\r\n                    }, function (error) {\r\n                        _this.silentLogin = false;\r\n                        _this.logger.error(\"Error occurred during unified cache ATS: \" + error);\r\n                        // proceed to login since ATS failed\r\n                        _this.acquireTokenHelper(null, interactionType, isLoginCall, request, resolve, reject);\r\n                    });\r\n                }\r\n                // No ADAL token found, proceed to login\r\n                else {\r\n                    this.logger.verbose(\"Login call but no token found, proceed to login\");\r\n                    this.acquireTokenHelper(null, interactionType, isLoginCall, request, resolve, reject);\r\n                }\r\n            }\r\n            // AcquireToken call, but no account or context given, so throw error\r\n            else {\r\n                this.logger.verbose(\"AcquireToken call, no context or account given\");\r\n                this.logger.info(\"User login is required\");\r\n                var stateOnlyResponse = Object(_AuthResponse__WEBPACK_IMPORTED_MODULE_24__[\"buildResponseStateOnly\"])(this.getAccountState(request.state));\r\n                this.cacheStorage.resetTempCacheItems(request.state);\r\n                this.authErrorHandler(interactionType, _error_ClientAuthError__WEBPACK_IMPORTED_MODULE_21__[\"ClientAuthError\"].createUserLoginRequiredError(), stateOnlyResponse, reject);\r\n                return;\r\n            }\r\n        }\r\n        // User session exists\r\n        else {\r\n            this.logger.verbose(\"User session exists, login not required\");\r\n            this.acquireTokenHelper(account, interactionType, isLoginCall, request, resolve, reject);\r\n        }\r\n    };\r\n    /**\r\n     * @hidden\r\n     * @ignore\r\n     * Helper function to acquireToken\r\n     *\r\n     */\r\n    UserAgentApplication.prototype.acquireTokenHelper = function (account, interactionType, isLoginCall, request, resolve, reject) {\r\n        return tslib__WEBPACK_IMPORTED_MODULE_0__[\"__awaiter\"](this, void 0, void 0, function () {\r\n            var requestSignature, serverAuthenticationRequest, acquireTokenAuthority, popUpWindow, responseType, loginStartPage, urlNavigate, hash, error_1, navigate, err_1;\r\n            return tslib__WEBPACK_IMPORTED_MODULE_0__[\"__generator\"](this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.logger.verbose(\"AcquireTokenHelper has been called\");\r\n                        this.logger.verbose(\"Interaction type: \" + interactionType + \". isLoginCall: \" + isLoginCall);\r\n                        // Track the acquireToken progress\r\n                        this.cacheStorage.setItem(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"TemporaryCacheKeys\"].INTERACTION_STATUS, _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].inProgress);\r\n                        requestSignature = request.scopes ? request.scopes.join(\" \").toLowerCase() : _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].oidcScopes.join(\" \");\r\n                        this.logger.verbosePii(\"Request signature: \" + requestSignature);\r\n                        acquireTokenAuthority = (request && request.authority) ? _authority_AuthorityFactory__WEBPACK_IMPORTED_MODULE_17__[\"AuthorityFactory\"].CreateInstance(request.authority, this.config.auth.validateAuthority, request.authorityMetadata) : this.authorityInstance;\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 11, , 12]);\r\n                        if (!!acquireTokenAuthority.hasCachedMetadata()) return [3 /*break*/, 3];\r\n                        this.logger.verbose(\"No cached metadata for authority\");\r\n                        return [4 /*yield*/, _authority_AuthorityFactory__WEBPACK_IMPORTED_MODULE_17__[\"AuthorityFactory\"].saveMetadataFromNetwork(acquireTokenAuthority, this.telemetryManager, request.correlationId)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        this.logger.verbose(\"Cached metadata found for authority\");\r\n                        _a.label = 4;\r\n                    case 4:\r\n                        responseType = isLoginCall ? _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"ResponseTypes\"].id_token : this.getTokenType(account, request.scopes);\r\n                        loginStartPage = request.redirectStartPage || window.location.href;\r\n                        serverAuthenticationRequest = new _ServerRequestParameters__WEBPACK_IMPORTED_MODULE_3__[\"ServerRequestParameters\"](acquireTokenAuthority, this.clientId, responseType, this.getRedirectUri(request && request.redirectUri), request.scopes, request.state, request.correlationId);\r\n                        this.logger.verbose(\"Finished building server authentication request\");\r\n                        this.updateCacheEntries(serverAuthenticationRequest, account, isLoginCall, loginStartPage);\r\n                        this.logger.verbose(\"Updating cache entries\");\r\n                        // populate QueryParameters (sid/login_hint) and any other extraQueryParameters set by the developer\r\n                        serverAuthenticationRequest.populateQueryParams(account, request);\r\n                        this.logger.verbose(\"Query parameters populated from account\");\r\n                        urlNavigate = _utils_UrlUtils__WEBPACK_IMPORTED_MODULE_14__[\"UrlUtils\"].createNavigateUrl(serverAuthenticationRequest) + _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].response_mode_fragment;\r\n                        // set state in cache\r\n                        if (interactionType === _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].interactionTypeRedirect) {\r\n                            if (!isLoginCall) {\r\n                                this.cacheStorage.setItem(_cache_AuthCache__WEBPACK_IMPORTED_MODULE_7__[\"AuthCache\"].generateTemporaryCacheKey(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"TemporaryCacheKeys\"].STATE_ACQ_TOKEN, request.state), serverAuthenticationRequest.state, this.inCookie);\r\n                                this.logger.verbose(\"State cached for redirect\");\r\n                                this.logger.verbosePii(\"State cached: \" + serverAuthenticationRequest.state);\r\n                            }\r\n                            else {\r\n                                this.logger.verbose(\"Interaction type redirect but login call is true. State not cached\");\r\n                            }\r\n                        }\r\n                        else if (interactionType === _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].interactionTypePopup) {\r\n                            window.renewStates.push(serverAuthenticationRequest.state);\r\n                            window.requestType = isLoginCall ? _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].login : _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].renewToken;\r\n                            this.logger.verbose(\"State saved to window\");\r\n                            this.logger.verbosePii(\"State saved: \" + serverAuthenticationRequest.state);\r\n                            // Register callback to capture results from server\r\n                            this.registerCallback(serverAuthenticationRequest.state, requestSignature, resolve, reject);\r\n                        }\r\n                        else {\r\n                            this.logger.verbose(\"Invalid interaction error. State not cached\");\r\n                            throw _error_ClientAuthError__WEBPACK_IMPORTED_MODULE_21__[\"ClientAuthError\"].createInvalidInteractionTypeError();\r\n                        }\r\n                        if (!(interactionType === _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].interactionTypePopup)) return [3 /*break*/, 9];\r\n                        this.logger.verbose(\"Interaction type is popup. Generating popup window\");\r\n                        // Generate a popup window\r\n                        try {\r\n                            popUpWindow = this.openPopup(urlNavigate, \"msal\", _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].popUpWidth, _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].popUpHeight);\r\n                            // Push popup window handle onto stack for tracking\r\n                            _utils_WindowUtils__WEBPACK_IMPORTED_MODULE_11__[\"WindowUtils\"].trackPopup(popUpWindow);\r\n                        }\r\n                        catch (e) {\r\n                            this.logger.info(_error_ClientAuthError__WEBPACK_IMPORTED_MODULE_21__[\"ClientAuthErrorMessage\"].popUpWindowError.code + \":\" + _error_ClientAuthError__WEBPACK_IMPORTED_MODULE_21__[\"ClientAuthErrorMessage\"].popUpWindowError.desc);\r\n                            this.cacheStorage.setItem(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"ErrorCacheKeys\"].ERROR, _error_ClientAuthError__WEBPACK_IMPORTED_MODULE_21__[\"ClientAuthErrorMessage\"].popUpWindowError.code);\r\n                            this.cacheStorage.setItem(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"ErrorCacheKeys\"].ERROR_DESC, _error_ClientAuthError__WEBPACK_IMPORTED_MODULE_21__[\"ClientAuthErrorMessage\"].popUpWindowError.desc);\r\n                            if (reject) {\r\n                                reject(_error_ClientAuthError__WEBPACK_IMPORTED_MODULE_21__[\"ClientAuthError\"].createPopupWindowError());\r\n                                return [2 /*return*/];\r\n                            }\r\n                        }\r\n                        if (!popUpWindow) return [3 /*break*/, 8];\r\n                        _a.label = 5;\r\n                    case 5:\r\n                        _a.trys.push([5, 7, , 8]);\r\n                        return [4 /*yield*/, _utils_WindowUtils__WEBPACK_IMPORTED_MODULE_11__[\"WindowUtils\"].monitorPopupForHash(popUpWindow, this.config.system.loadFrameTimeout, urlNavigate, this.logger)];\r\n                    case 6:\r\n                        hash = _a.sent();\r\n                        this.handleAuthenticationResponse(hash);\r\n                        // Request completed successfully, set to completed\r\n                        this.cacheStorage.removeItem(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"TemporaryCacheKeys\"].INTERACTION_STATUS);\r\n                        this.logger.info(\"Closing popup window\");\r\n                        // TODO: Check how this can be extracted for any framework specific code?\r\n                        if (this.config.framework.isAngular) {\r\n                            this.broadcast(\"msal:popUpHashChanged\", hash);\r\n                        }\r\n                        _utils_WindowUtils__WEBPACK_IMPORTED_MODULE_11__[\"WindowUtils\"].closePopups();\r\n                        return [3 /*break*/, 8];\r\n                    case 7:\r\n                        error_1 = _a.sent();\r\n                        if (reject) {\r\n                            reject(error_1);\r\n                        }\r\n                        if (this.config.framework.isAngular) {\r\n                            this.broadcast(\"msal:popUpClosed\", error_1.errorCode + _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].resourceDelimiter + error_1.errorMessage);\r\n                        }\r\n                        else {\r\n                            // Request failed, set to canceled\r\n                            this.cacheStorage.removeItem(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"TemporaryCacheKeys\"].INTERACTION_STATUS);\r\n                            popUpWindow.close();\r\n                        }\r\n                        return [3 /*break*/, 8];\r\n                    case 8: return [3 /*break*/, 10];\r\n                    case 9:\r\n                        // If onRedirectNavigate is implemented, invoke it and provide urlNavigate\r\n                        if (request.onRedirectNavigate) {\r\n                            this.logger.verbose(\"Invoking onRedirectNavigate callback\");\r\n                            navigate = request.onRedirectNavigate(urlNavigate);\r\n                            // Returning false from onRedirectNavigate will stop navigation\r\n                            if (navigate !== false) {\r\n                                this.logger.verbose(\"onRedirectNavigate did not return false, navigating\");\r\n                                this.navigateWindow(urlNavigate);\r\n                            }\r\n                            else {\r\n                                this.logger.verbose(\"onRedirectNavigate returned false, stopping navigation\");\r\n                            }\r\n                        }\r\n                        else {\r\n                            // Otherwise, perform navigation\r\n                            this.logger.verbose(\"Navigating window to urlNavigate\");\r\n                            this.navigateWindow(urlNavigate);\r\n                        }\r\n                        _a.label = 10;\r\n                    case 10: return [3 /*break*/, 12];\r\n                    case 11:\r\n                        err_1 = _a.sent();\r\n                        this.logger.error(err_1);\r\n                        this.cacheStorage.resetTempCacheItems(request.state);\r\n                        this.authErrorHandler(interactionType, _error_ClientAuthError__WEBPACK_IMPORTED_MODULE_21__[\"ClientAuthError\"].createEndpointResolutionError(err_1.toString), Object(_AuthResponse__WEBPACK_IMPORTED_MODULE_24__[\"buildResponseStateOnly\"])(request.state), reject);\r\n                        if (popUpWindow) {\r\n                            popUpWindow.close();\r\n                        }\r\n                        return [3 /*break*/, 12];\r\n                    case 12: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * API interfacing idToken request when applications already have a session/hint acquired by authorization client applications\r\n     * @param request\r\n     */\r\n    UserAgentApplication.prototype.ssoSilent = function (request) {\r\n        this.logger.verbose(\"ssoSilent has been called\");\r\n        // throw an error on an empty request\r\n        if (!request) {\r\n            throw _error_ClientConfigurationError__WEBPACK_IMPORTED_MODULE_19__[\"ClientConfigurationError\"].createEmptyRequestError();\r\n        }\r\n        // throw an error on no hints passed\r\n        if (!request.sid && !request.loginHint) {\r\n            throw _error_ClientConfigurationError__WEBPACK_IMPORTED_MODULE_19__[\"ClientConfigurationError\"].createSsoSilentError();\r\n        }\r\n        return this.acquireTokenSilent(tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"]({}, request, { scopes: _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].oidcScopes }));\r\n    };\r\n    /**\r\n     * Use this function to obtain a token before every call to the API / resource provider\r\n     *\r\n     * MSAL return's a cached token when available\r\n     * Or it send's a request to the STS to obtain a new token using a hidden iframe.\r\n     *\r\n     * @param {@link AuthenticationParameters}\r\n     *\r\n     * To renew idToken, please pass clientId as the only scope in the Authentication Parameters\r\n     * @returns {Promise.<AuthResponse>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\r\n     *\r\n     */\r\n    UserAgentApplication.prototype.acquireTokenSilent = function (userRequest) {\r\n        var _this = this;\r\n        this.logger.verbose(\"AcquireTokenSilent has been called\");\r\n        // validate the request\r\n        var request = _utils_RequestUtils__WEBPACK_IMPORTED_MODULE_15__[\"RequestUtils\"].validateRequest(userRequest, false, this.clientId, _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].interactionTypeSilent);\r\n        var apiEvent = this.telemetryManager.createAndStartApiEvent(request.correlationId, _telemetry_ApiEvent__WEBPACK_IMPORTED_MODULE_26__[\"API_EVENT_IDENTIFIER\"].AcquireTokenSilent);\r\n        var requestSignature = _utils_RequestUtils__WEBPACK_IMPORTED_MODULE_15__[\"RequestUtils\"].createRequestSignature(request);\r\n        return new Promise(function (resolve, reject) { return tslib__WEBPACK_IMPORTED_MODULE_0__[\"__awaiter\"](_this, void 0, void 0, function () {\r\n            var scope, account, adalIdToken, responseType, serverAuthenticationRequest, adalIdTokenObject, userContainedClaims, authErr, cacheResultResponse, logMessage, err_2;\r\n            return tslib__WEBPACK_IMPORTED_MODULE_0__[\"__generator\"](this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        // block the request if made from the hidden iframe\r\n                        _utils_WindowUtils__WEBPACK_IMPORTED_MODULE_11__[\"WindowUtils\"].blockReloadInHiddenIframes();\r\n                        scope = request.scopes.join(\" \").toLowerCase();\r\n                        this.logger.verbosePii(\"Serialized scopes: \" + scope);\r\n                        if (request.account) {\r\n                            account = request.account;\r\n                            this.logger.verbose(\"Account set from request\");\r\n                        }\r\n                        else {\r\n                            account = this.getAccount();\r\n                            this.logger.verbose(\"Account set from MSAL Cache\");\r\n                        }\r\n                        adalIdToken = this.cacheStorage.getItem(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].adalIdToken);\r\n                        // In the event of no account being passed in the config, no session id, and no pre-existing adalIdToken, user will need to log in\r\n                        if (!account && !(request.sid || request.loginHint) && _utils_StringUtils__WEBPACK_IMPORTED_MODULE_10__[\"StringUtils\"].isEmpty(adalIdToken)) {\r\n                            this.logger.info(\"User login is required\");\r\n                            // The promise rejects with a UserLoginRequiredError, which should be caught and user should be prompted to log in interactively\r\n                            return [2 /*return*/, reject(_error_ClientAuthError__WEBPACK_IMPORTED_MODULE_21__[\"ClientAuthError\"].createUserLoginRequiredError())];\r\n                        }\r\n                        responseType = this.getTokenType(account, request.scopes);\r\n                        this.logger.verbose(\"Response type: \" + responseType);\r\n                        serverAuthenticationRequest = new _ServerRequestParameters__WEBPACK_IMPORTED_MODULE_3__[\"ServerRequestParameters\"](_authority_AuthorityFactory__WEBPACK_IMPORTED_MODULE_17__[\"AuthorityFactory\"].CreateInstance(request.authority, this.config.auth.validateAuthority, request.authorityMetadata), this.clientId, responseType, this.getRedirectUri(request.redirectUri), request.scopes, request.state, request.correlationId);\r\n                        this.logger.verbose(\"Finished building server authentication request\");\r\n                        // populate QueryParameters (sid/login_hint) and any other extraQueryParameters set by the developer\r\n                        if (_ServerRequestParameters__WEBPACK_IMPORTED_MODULE_3__[\"ServerRequestParameters\"].isSSOParam(request) || account) {\r\n                            serverAuthenticationRequest.populateQueryParams(account, request, null, true);\r\n                            this.logger.verbose(\"Query parameters populated from existing SSO or account\");\r\n                        }\r\n                        // if user didn't pass login_hint/sid and adal's idtoken is present, extract the login_hint from the adalIdToken\r\n                        else if (!account && !_utils_StringUtils__WEBPACK_IMPORTED_MODULE_10__[\"StringUtils\"].isEmpty(adalIdToken)) {\r\n                            adalIdTokenObject = _utils_TokenUtils__WEBPACK_IMPORTED_MODULE_12__[\"TokenUtils\"].extractIdToken(adalIdToken);\r\n                            this.logger.verbose(\"ADAL's idToken exists. Extracting login information from ADAL's idToken to populate query parameters\");\r\n                            serverAuthenticationRequest.populateQueryParams(account, null, adalIdTokenObject, true);\r\n                        }\r\n                        else {\r\n                            this.logger.verbose(\"No additional query parameters added\");\r\n                        }\r\n                        userContainedClaims = request.claimsRequest || serverAuthenticationRequest.claimsValue;\r\n                        // If request.forceRefresh is set to true, force a request for a new token instead of getting it from the cache\r\n                        if (!userContainedClaims && !request.forceRefresh) {\r\n                            try {\r\n                                cacheResultResponse = this.getCachedToken(serverAuthenticationRequest, account);\r\n                            }\r\n                            catch (e) {\r\n                                authErr = e;\r\n                            }\r\n                        }\r\n                        if (!cacheResultResponse) return [3 /*break*/, 1];\r\n                        this.logger.verbose(\"Token found in cache lookup\");\r\n                        this.logger.verbosePii(\"Scopes found: \" + JSON.stringify(cacheResultResponse.scopes));\r\n                        resolve(cacheResultResponse);\r\n                        return [2 /*return*/, null];\r\n                    case 1:\r\n                        if (!authErr) return [3 /*break*/, 2];\r\n                        this.logger.infoPii(authErr.errorCode + \":\" + authErr.errorMessage);\r\n                        reject(authErr);\r\n                        return [2 /*return*/, null];\r\n                    case 2:\r\n                        logMessage = void 0;\r\n                        if (userContainedClaims) {\r\n                            logMessage = \"Skipped cache lookup since claims were given\";\r\n                        }\r\n                        else if (request.forceRefresh) {\r\n                            logMessage = \"Skipped cache lookup since request.forceRefresh option was set to true\";\r\n                        }\r\n                        else {\r\n                            logMessage = \"No valid token found in cache lookup\";\r\n                        }\r\n                        this.logger.verbose(logMessage);\r\n                        // Cache result can return null if cache is empty. In that case, set authority to default value if no authority is passed to the API.\r\n                        if (!serverAuthenticationRequest.authorityInstance) {\r\n                            serverAuthenticationRequest.authorityInstance = request.authority ?\r\n                                _authority_AuthorityFactory__WEBPACK_IMPORTED_MODULE_17__[\"AuthorityFactory\"].CreateInstance(request.authority, this.config.auth.validateAuthority, request.authorityMetadata)\r\n                                : this.authorityInstance;\r\n                        }\r\n                        this.logger.verbosePii(\"Authority instance: \" + serverAuthenticationRequest.authority);\r\n                        _a.label = 3;\r\n                    case 3:\r\n                        _a.trys.push([3, 7, , 8]);\r\n                        if (!!serverAuthenticationRequest.authorityInstance.hasCachedMetadata()) return [3 /*break*/, 5];\r\n                        this.logger.verbose(\"No cached metadata for authority\");\r\n                        return [4 /*yield*/, _authority_AuthorityFactory__WEBPACK_IMPORTED_MODULE_17__[\"AuthorityFactory\"].saveMetadataFromNetwork(serverAuthenticationRequest.authorityInstance, this.telemetryManager, request.correlationId)];\r\n                    case 4:\r\n                        _a.sent();\r\n                        this.logger.verbose(\"Authority has been updated with endpoint discovery response\");\r\n                        return [3 /*break*/, 6];\r\n                    case 5:\r\n                        this.logger.verbose(\"Cached metadata found for authority\");\r\n                        _a.label = 6;\r\n                    case 6:\r\n                        /*\r\n                         * refresh attempt with iframe\r\n                         * Already renewing for this scope, callback when we get the token.\r\n                         */\r\n                        if (window.activeRenewals[requestSignature]) {\r\n                            this.logger.verbose(\"Renewing token in progress. Registering callback\");\r\n                            // Active renewals contains the state for each renewal.\r\n                            this.registerCallback(window.activeRenewals[requestSignature], requestSignature, resolve, reject);\r\n                        }\r\n                        else {\r\n                            if (request.scopes && _ScopeSet__WEBPACK_IMPORTED_MODULE_9__[\"ScopeSet\"].onlyContainsOidcScopes(request.scopes)) {\r\n                                /*\r\n                                 * App uses idToken to send to api endpoints\r\n                                 * Default scope is tracked as OIDC scopes to store this token\r\n                                 */\r\n                                this.logger.verbose(\"OpenID Connect scopes only, renewing idToken\");\r\n                                this.silentLogin = true;\r\n                                this.renewIdToken(requestSignature, resolve, reject, account, serverAuthenticationRequest);\r\n                            }\r\n                            else {\r\n                                // renew access token\r\n                                this.logger.verbose(\"Renewing access token\");\r\n                                this.renewToken(requestSignature, resolve, reject, account, serverAuthenticationRequest);\r\n                            }\r\n                        }\r\n                        return [3 /*break*/, 8];\r\n                    case 7:\r\n                        err_2 = _a.sent();\r\n                        this.logger.error(err_2);\r\n                        reject(_error_ClientAuthError__WEBPACK_IMPORTED_MODULE_21__[\"ClientAuthError\"].createEndpointResolutionError(err_2.toString()));\r\n                        return [2 /*return*/, null];\r\n                    case 8: return [2 /*return*/];\r\n                }\r\n            });\r\n        }); })\r\n            .then(function (res) {\r\n            _this.logger.verbose(\"Successfully acquired token\");\r\n            _this.telemetryManager.stopAndFlushApiEvent(request.correlationId, apiEvent, true);\r\n            return res;\r\n        })\r\n            .catch(function (error) {\r\n            _this.cacheStorage.resetTempCacheItems(request.state);\r\n            _this.telemetryManager.stopAndFlushApiEvent(request.correlationId, apiEvent, false, error.errorCode);\r\n            throw error;\r\n        });\r\n    };\r\n    // #endregion\r\n    // #region Popup Window Creation\r\n    /**\r\n     * @hidden\r\n     *\r\n     * Configures popup window for login.\r\n     *\r\n     * @param urlNavigate\r\n     * @param title\r\n     * @param popUpWidth\r\n     * @param popUpHeight\r\n     * @ignore\r\n     * @hidden\r\n     */\r\n    UserAgentApplication.prototype.openPopup = function (urlNavigate, title, popUpWidth, popUpHeight) {\r\n        this.logger.verbose(\"OpenPopup has been called\");\r\n        try {\r\n            /**\r\n             * adding winLeft and winTop to account for dual monitor\r\n             * using screenLeft and screenTop for IE8 and earlier\r\n             */\r\n            var winLeft = window.screenLeft ? window.screenLeft : window.screenX;\r\n            var winTop = window.screenTop ? window.screenTop : window.screenY;\r\n            /**\r\n             * window.innerWidth displays browser window\"s height and width excluding toolbars\r\n             * using document.documentElement.clientWidth for IE8 and earlier\r\n             */\r\n            var width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\r\n            var height = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\r\n            var left = ((width / 2) - (popUpWidth / 2)) + winLeft;\r\n            var top_1 = ((height / 2) - (popUpHeight / 2)) + winTop;\r\n            // open the window\r\n            var popupWindow = window.open(urlNavigate, title, \"width=\" + popUpWidth + \", height=\" + popUpHeight + \", top=\" + top_1 + \", left=\" + left + \", scrollbars=yes\");\r\n            if (!popupWindow) {\r\n                throw _error_ClientAuthError__WEBPACK_IMPORTED_MODULE_21__[\"ClientAuthError\"].createPopupWindowError();\r\n            }\r\n            if (popupWindow.focus) {\r\n                popupWindow.focus();\r\n            }\r\n            return popupWindow;\r\n        }\r\n        catch (e) {\r\n            this.cacheStorage.removeItem(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"TemporaryCacheKeys\"].INTERACTION_STATUS);\r\n            throw _error_ClientAuthError__WEBPACK_IMPORTED_MODULE_21__[\"ClientAuthError\"].createPopupWindowError(e.toString());\r\n        }\r\n    };\r\n    // #endregion\r\n    // #region Iframe Management\r\n    /**\r\n     * @hidden\r\n     * Calling _loadFrame but with a timeout to signal failure in loadframeStatus. Callbacks are left.\r\n     * registered when network errors occur and subsequent token requests for same resource are registered to the pending request.\r\n     * @ignore\r\n     */\r\n    UserAgentApplication.prototype.loadIframeTimeout = function (urlNavigate, frameName, requestSignature) {\r\n        return tslib__WEBPACK_IMPORTED_MODULE_0__[\"__awaiter\"](this, void 0, void 0, function () {\r\n            var expectedState, iframe, _a, hash, error_2;\r\n            return tslib__WEBPACK_IMPORTED_MODULE_0__[\"__generator\"](this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        expectedState = window.activeRenewals[requestSignature];\r\n                        this.logger.verbosePii(\"Set loading state to pending for: \" + requestSignature + \":\" + expectedState);\r\n                        this.cacheStorage.setItem(_cache_AuthCache__WEBPACK_IMPORTED_MODULE_7__[\"AuthCache\"].generateTemporaryCacheKey(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"TemporaryCacheKeys\"].RENEW_STATUS, expectedState), _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].inProgress);\r\n                        if (!this.config.system.navigateFrameWait) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, _utils_WindowUtils__WEBPACK_IMPORTED_MODULE_11__[\"WindowUtils\"].loadFrame(urlNavigate, frameName, this.config.system.navigateFrameWait, this.logger)];\r\n                    case 1:\r\n                        _a = _b.sent();\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        _a = _utils_WindowUtils__WEBPACK_IMPORTED_MODULE_11__[\"WindowUtils\"].loadFrameSync(urlNavigate, frameName, this.logger);\r\n                        _b.label = 3;\r\n                    case 3:\r\n                        iframe = _a;\r\n                        _b.label = 4;\r\n                    case 4:\r\n                        _b.trys.push([4, 6, , 7]);\r\n                        return [4 /*yield*/, _utils_WindowUtils__WEBPACK_IMPORTED_MODULE_11__[\"WindowUtils\"].monitorIframeForHash(iframe.contentWindow, this.config.system.loadFrameTimeout, urlNavigate, this.logger)];\r\n                    case 5:\r\n                        hash = _b.sent();\r\n                        if (hash) {\r\n                            this.handleAuthenticationResponse(hash);\r\n                        }\r\n                        return [3 /*break*/, 7];\r\n                    case 6:\r\n                        error_2 = _b.sent();\r\n                        if (this.cacheStorage.getItem(_cache_AuthCache__WEBPACK_IMPORTED_MODULE_7__[\"AuthCache\"].generateTemporaryCacheKey(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"TemporaryCacheKeys\"].RENEW_STATUS, expectedState)) === _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].inProgress) {\r\n                            // fail the iframe session if it's in pending state\r\n                            this.logger.verbose(\"Loading frame has timed out after: \" + (this.config.system.loadFrameTimeout / 1000) + \" seconds for scope/authority \" + requestSignature + \":\" + expectedState);\r\n                            // Error after timeout\r\n                            if (expectedState && window.callbackMappedToRenewStates[expectedState]) {\r\n                                window.callbackMappedToRenewStates[expectedState](null, error_2);\r\n                            }\r\n                            this.cacheStorage.removeItem(_cache_AuthCache__WEBPACK_IMPORTED_MODULE_7__[\"AuthCache\"].generateTemporaryCacheKey(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"TemporaryCacheKeys\"].RENEW_STATUS, expectedState));\r\n                        }\r\n                        _utils_WindowUtils__WEBPACK_IMPORTED_MODULE_11__[\"WindowUtils\"].removeHiddenIframe(iframe);\r\n                        throw error_2;\r\n                    case 7:\r\n                        _utils_WindowUtils__WEBPACK_IMPORTED_MODULE_11__[\"WindowUtils\"].removeHiddenIframe(iframe);\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    // #endregion\r\n    // #region General Helpers\r\n    /**\r\n     * @hidden\r\n     * Used to redirect the browser to the STS authorization endpoint\r\n     * @param {string} urlNavigate - URL of the authorization endpoint\r\n     */\r\n    UserAgentApplication.prototype.navigateWindow = function (urlNavigate, popupWindow) {\r\n        // Navigate if valid URL\r\n        if (urlNavigate && !_utils_StringUtils__WEBPACK_IMPORTED_MODULE_10__[\"StringUtils\"].isEmpty(urlNavigate)) {\r\n            var navigateWindow = popupWindow ? popupWindow : window;\r\n            var logMessage = popupWindow ? \"Navigated Popup window to:\" + urlNavigate : \"Navigate to:\" + urlNavigate;\r\n            this.logger.infoPii(logMessage);\r\n            navigateWindow.location.assign(urlNavigate);\r\n        }\r\n        else {\r\n            this.logger.info(\"Navigate url is empty\");\r\n            throw _error_AuthError__WEBPACK_IMPORTED_MODULE_20__[\"AuthError\"].createUnexpectedError(\"Navigate url is empty\");\r\n        }\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Used to add the developer requested callback to the array of callbacks for the specified scopes. The updated array is stored on the window object\r\n     * @param {string} expectedState - Unique state identifier (guid).\r\n     * @param {string} scope - Developer requested permissions. Not all scopes are guaranteed to be included in the access token returned.\r\n     * @param {Function} resolve - The resolve function of the promise object.\r\n     * @param {Function} reject - The reject function of the promise object.\r\n     * @ignore\r\n     */\r\n    UserAgentApplication.prototype.registerCallback = function (expectedState, requestSignature, resolve, reject) {\r\n        var _this = this;\r\n        // track active renewals\r\n        window.activeRenewals[requestSignature] = expectedState;\r\n        // initialize callbacks mapped array\r\n        if (!window.promiseMappedToRenewStates[expectedState]) {\r\n            window.promiseMappedToRenewStates[expectedState] = [];\r\n        }\r\n        // indexing on the current state, push the callback params to callbacks mapped\r\n        window.promiseMappedToRenewStates[expectedState].push({ resolve: resolve, reject: reject });\r\n        // Store the server response in the current window??\r\n        if (!window.callbackMappedToRenewStates[expectedState]) {\r\n            window.callbackMappedToRenewStates[expectedState] = function (response, error) {\r\n                // reset active renewals\r\n                window.activeRenewals[requestSignature] = null;\r\n                // for all promiseMappedtoRenewStates for a given 'state' - call the reject/resolve with error/token respectively\r\n                for (var i = 0; i < window.promiseMappedToRenewStates[expectedState].length; ++i) {\r\n                    try {\r\n                        if (error) {\r\n                            window.promiseMappedToRenewStates[expectedState][i].reject(error);\r\n                        }\r\n                        else if (response) {\r\n                            window.promiseMappedToRenewStates[expectedState][i].resolve(response);\r\n                        }\r\n                        else {\r\n                            _this.cacheStorage.resetTempCacheItems(expectedState);\r\n                            throw _error_AuthError__WEBPACK_IMPORTED_MODULE_20__[\"AuthError\"].createUnexpectedError(\"Error and response are both null\");\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        _this.logger.warning(e);\r\n                    }\r\n                }\r\n                // reset\r\n                window.promiseMappedToRenewStates[expectedState] = null;\r\n                window.callbackMappedToRenewStates[expectedState] = null;\r\n            };\r\n        }\r\n    };\r\n    // #endregion\r\n    // #region Logout\r\n    /**\r\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\r\n     * Default behaviour is to redirect the user to `window.location.href`.\r\n     */\r\n    UserAgentApplication.prototype.logout = function (correlationId) {\r\n        this.logger.verbose(\"Logout has been called\");\r\n        this.logoutAsync(correlationId);\r\n    };\r\n    /**\r\n     * Async version of logout(). Use to log out the current user.\r\n     * @param correlationId Request correlationId\r\n     */\r\n    UserAgentApplication.prototype.logoutAsync = function (correlationId) {\r\n        return tslib__WEBPACK_IMPORTED_MODULE_0__[\"__awaiter\"](this, void 0, void 0, function () {\r\n            var requestCorrelationId, apiEvent, correlationIdParam, postLogoutQueryParam, urlNavigate, error_3;\r\n            return tslib__WEBPACK_IMPORTED_MODULE_0__[\"__generator\"](this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        requestCorrelationId = correlationId || _utils_CryptoUtils__WEBPACK_IMPORTED_MODULE_28__[\"CryptoUtils\"].createNewGuid();\r\n                        apiEvent = this.telemetryManager.createAndStartApiEvent(requestCorrelationId, _telemetry_ApiEvent__WEBPACK_IMPORTED_MODULE_26__[\"API_EVENT_IDENTIFIER\"].Logout);\r\n                        this.clearCache();\r\n                        this.account = null;\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 5, , 6]);\r\n                        if (!!this.authorityInstance.hasCachedMetadata()) return [3 /*break*/, 3];\r\n                        this.logger.verbose(\"No cached metadata for authority\");\r\n                        return [4 /*yield*/, _authority_AuthorityFactory__WEBPACK_IMPORTED_MODULE_17__[\"AuthorityFactory\"].saveMetadataFromNetwork(this.authorityInstance, this.telemetryManager, correlationId)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        this.logger.verbose(\"Cached metadata found for authority\");\r\n                        _a.label = 4;\r\n                    case 4:\r\n                        correlationIdParam = \"client-request-id=\" + requestCorrelationId;\r\n                        postLogoutQueryParam = void 0;\r\n                        if (this.getPostLogoutRedirectUri()) {\r\n                            postLogoutQueryParam = \"&post_logout_redirect_uri=\" + encodeURIComponent(this.getPostLogoutRedirectUri());\r\n                            this.logger.verbose(\"redirectUri found and set\");\r\n                        }\r\n                        else {\r\n                            postLogoutQueryParam = \"\";\r\n                            this.logger.verbose(\"No redirectUri set for app. postLogoutQueryParam is empty\");\r\n                        }\r\n                        urlNavigate = void 0;\r\n                        if (this.authorityInstance.EndSessionEndpoint) {\r\n                            urlNavigate = this.authorityInstance.EndSessionEndpoint + \"?\" + correlationIdParam + postLogoutQueryParam;\r\n                            this.logger.verbose(\"EndSessionEndpoint found and urlNavigate set\");\r\n                            this.logger.verbosePii(\"urlNavigate set to: \" + this.authorityInstance.EndSessionEndpoint);\r\n                        }\r\n                        else {\r\n                            urlNavigate = this.authority + \"oauth2/v2.0/logout?\" + correlationIdParam + postLogoutQueryParam;\r\n                            this.logger.verbose(\"No endpoint, urlNavigate set to default\");\r\n                        }\r\n                        this.telemetryManager.stopAndFlushApiEvent(requestCorrelationId, apiEvent, true);\r\n                        this.logger.verbose(\"Navigating window to urlNavigate\");\r\n                        this.navigateWindow(urlNavigate);\r\n                        return [3 /*break*/, 6];\r\n                    case 5:\r\n                        error_3 = _a.sent();\r\n                        this.telemetryManager.stopAndFlushApiEvent(requestCorrelationId, apiEvent, false, error_3.errorCode);\r\n                        return [3 /*break*/, 6];\r\n                    case 6: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Clear all access tokens and ID tokens in the cache.\r\n     * @ignore\r\n     */\r\n    UserAgentApplication.prototype.clearCache = function () {\r\n        this.logger.verbose(\"Clearing cache\");\r\n        window.renewStates = [];\r\n        var tokenCacheItems = this.cacheStorage.getAllTokens(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].clientId, _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].homeAccountIdentifier);\r\n        for (var i = 0; i < tokenCacheItems.length; i++) {\r\n            this.cacheStorage.removeItem(JSON.stringify(tokenCacheItems[i].key));\r\n        }\r\n        this.cacheStorage.resetCacheItems();\r\n        this.cacheStorage.clearMsalCookie();\r\n        this.logger.verbose(\"Cache cleared\");\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Clear a given access token from the cache.\r\n     *\r\n     * @param accessToken\r\n     */\r\n    UserAgentApplication.prototype.clearCacheForScope = function (accessToken) {\r\n        this.logger.verbose(\"Clearing access token from cache\");\r\n        var accessTokenItems = this.cacheStorage.getAllAccessTokens(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].clientId, _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].homeAccountIdentifier);\r\n        for (var i = 0; i < accessTokenItems.length; i++) {\r\n            var token = accessTokenItems[i];\r\n            if (token.value.accessToken === accessToken) {\r\n                this.cacheStorage.removeItem(JSON.stringify(token.key));\r\n                this.logger.verbosePii(\"Access token removed: \" + token.key);\r\n            }\r\n        }\r\n    };\r\n    // #endregion\r\n    // #region Response\r\n    /**\r\n     * @hidden\r\n     * @ignore\r\n     * Checks if the redirect response is received from the STS. In case of redirect, the url fragment has either id_token, access_token or error.\r\n     * @param {string} hash - Hash passed from redirect page.\r\n     * @returns {Boolean} - true if response contains id_token, access_token or error, false otherwise.\r\n     */\r\n    UserAgentApplication.prototype.isCallback = function (hash) {\r\n        this.logger.info(\"isCallback will be deprecated in favor of urlContainsHash in MSAL.js v2.0.\");\r\n        this.logger.verbose(\"isCallback has been called\");\r\n        return _utils_UrlUtils__WEBPACK_IMPORTED_MODULE_14__[\"UrlUtils\"].urlContainsHash(hash);\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Used to call the constructor callback with the token/error\r\n     * @param {string} [hash=window.location.hash] - Hash fragment of Url.\r\n     */\r\n    UserAgentApplication.prototype.processCallBack = function (hash, stateInfo, parentCallback) {\r\n        this.logger.info(\"ProcessCallBack has been called. Processing callback from redirect response\");\r\n        // get the state info from the hash\r\n        if (!stateInfo) {\r\n            this.logger.verbose(\"StateInfo is null, getting stateInfo from hash\");\r\n            stateInfo = this.getResponseState(hash);\r\n        }\r\n        var response;\r\n        var authErr;\r\n        // Save the token info from the hash\r\n        try {\r\n            response = this.saveTokenFromHash(hash, stateInfo);\r\n        }\r\n        catch (err) {\r\n            authErr = err;\r\n        }\r\n        try {\r\n            // Clear the cookie in the hash\r\n            this.cacheStorage.clearMsalCookie(stateInfo.state);\r\n            var accountState = this.getAccountState(stateInfo.state);\r\n            if (response) {\r\n                if ((stateInfo.requestType === _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].renewToken) || response.accessToken) {\r\n                    if (window.parent !== window) {\r\n                        this.logger.verbose(\"Window is in iframe, acquiring token silently\");\r\n                    }\r\n                    else {\r\n                        this.logger.verbose(\"Acquiring token interactive in progress\");\r\n                    }\r\n                    this.logger.verbose(\"Response tokenType set to \" + _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"ServerHashParamKeys\"].ACCESS_TOKEN);\r\n                    response.tokenType = _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"ServerHashParamKeys\"].ACCESS_TOKEN;\r\n                }\r\n                else if (stateInfo.requestType === _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].login) {\r\n                    this.logger.verbose(\"Response tokenType set to \" + _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"ServerHashParamKeys\"].ID_TOKEN);\r\n                    response.tokenType = _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"ServerHashParamKeys\"].ID_TOKEN;\r\n                }\r\n                if (!parentCallback) {\r\n                    this.logger.verbose(\"Setting redirectResponse\");\r\n                    this.redirectResponse = response;\r\n                    return;\r\n                }\r\n            }\r\n            else if (!parentCallback) {\r\n                this.logger.verbose(\"Response is null, setting redirectResponse with state\");\r\n                this.redirectResponse = Object(_AuthResponse__WEBPACK_IMPORTED_MODULE_24__[\"buildResponseStateOnly\"])(accountState);\r\n                this.redirectError = authErr;\r\n                this.cacheStorage.resetTempCacheItems(stateInfo.state);\r\n                return;\r\n            }\r\n            this.logger.verbose(\"Calling callback provided to processCallback\");\r\n            parentCallback(response, authErr);\r\n        }\r\n        catch (err) {\r\n            this.logger.error(\"Error occurred in token received callback function: \" + err);\r\n            throw _error_ClientAuthError__WEBPACK_IMPORTED_MODULE_21__[\"ClientAuthError\"].createErrorInCallbackFunction(err.toString());\r\n        }\r\n    };\r\n    /**\r\n     * @hidden\r\n     * This method must be called for processing the response received from the STS if using popups or iframes. It extracts the hash, processes the token or error\r\n     * information and saves it in the cache. It then resolves the promises with the result.\r\n     * @param {string} [hash=window.location.hash] - Hash fragment of Url.\r\n     */\r\n    UserAgentApplication.prototype.handleAuthenticationResponse = function (hash) {\r\n        this.logger.verbose(\"HandleAuthenticationResponse has been called\");\r\n        // retrieve the hash\r\n        var locationHash = hash || window.location.hash;\r\n        // if (window.parent !== window), by using self, window.parent becomes equal to window in getResponseState method specifically\r\n        var stateInfo = this.getResponseState(locationHash);\r\n        this.logger.verbose(\"Obtained state from response\");\r\n        var tokenResponseCallback = window.callbackMappedToRenewStates[stateInfo.state];\r\n        this.processCallBack(locationHash, stateInfo, tokenResponseCallback);\r\n    };\r\n    /**\r\n     * @hidden\r\n     * This method must be called for processing the response received from the STS when using redirect flows. It extracts the hash, processes the token or error\r\n     * information and saves it in the cache. The result can then be accessed by user registered callbacks.\r\n     * @param {string} [hash=window.location.hash] - Hash fragment of Url.\r\n     */\r\n    UserAgentApplication.prototype.handleRedirectAuthenticationResponse = function (hash) {\r\n        this.logger.info(\"Returned from redirect url\");\r\n        this.logger.verbose(\"HandleRedirectAuthenticationResponse has been called\");\r\n        // clear hash from window\r\n        _utils_WindowUtils__WEBPACK_IMPORTED_MODULE_11__[\"WindowUtils\"].clearUrlFragment();\r\n        this.logger.verbose(\"Window.location.hash cleared\");\r\n        // if (window.parent !== window), by using self, window.parent becomes equal to window in getResponseState method specifically\r\n        var stateInfo = this.getResponseState(hash);\r\n        // if set to navigate to loginRequest page post login\r\n        if (this.config.auth.navigateToLoginRequestUrl && window.parent === window) {\r\n            this.logger.verbose(\"Window.parent is equal to window, not in popup or iframe. Navigation to login request url after login turned on\");\r\n            var loginRequestUrl = this.cacheStorage.getItem(_cache_AuthCache__WEBPACK_IMPORTED_MODULE_7__[\"AuthCache\"].generateTemporaryCacheKey(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"TemporaryCacheKeys\"].LOGIN_REQUEST, stateInfo.state), this.inCookie);\r\n            // Redirect to home page if login request url is null (real null or the string null)\r\n            if (!loginRequestUrl || loginRequestUrl === \"null\") {\r\n                this.logger.error(\"Unable to get valid login request url from cache, redirecting to home page\");\r\n                window.location.assign(\"/\");\r\n                return;\r\n            }\r\n            else {\r\n                this.logger.verbose(\"Valid login request url obtained from cache\");\r\n                var currentUrl = _utils_UrlUtils__WEBPACK_IMPORTED_MODULE_14__[\"UrlUtils\"].removeHashFromUrl(window.location.href);\r\n                var finalRedirectUrl = _utils_UrlUtils__WEBPACK_IMPORTED_MODULE_14__[\"UrlUtils\"].removeHashFromUrl(loginRequestUrl);\r\n                if (currentUrl !== finalRedirectUrl) {\r\n                    this.logger.verbose(\"Current url is not login request url, navigating\");\r\n                    this.logger.verbosePii(\"CurrentUrl: \" + currentUrl + \", finalRedirectUrl: \" + finalRedirectUrl);\r\n                    window.location.assign(\"\" + finalRedirectUrl + hash);\r\n                    return;\r\n                }\r\n                else {\r\n                    this.logger.verbose(\"Current url matches login request url\");\r\n                    var loginRequestUrlComponents = _utils_UrlUtils__WEBPACK_IMPORTED_MODULE_14__[\"UrlUtils\"].GetUrlComponents(loginRequestUrl);\r\n                    if (loginRequestUrlComponents.Hash) {\r\n                        this.logger.verbose(\"Login request url contains hash, resetting non-msal hash\");\r\n                        window.location.hash = loginRequestUrlComponents.Hash;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (!this.config.auth.navigateToLoginRequestUrl) {\r\n            this.logger.verbose(\"Default navigation to start page after login turned off\");\r\n        }\r\n        this.processCallBack(hash, stateInfo, null);\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Creates a stateInfo object from the URL fragment and returns it.\r\n     * @param {string} hash  -  Hash passed from redirect page\r\n     * @returns {TokenResponse} an object created from the redirect response from AAD comprising of the keys - parameters, requestType, stateMatch, stateResponse and valid.\r\n     * @ignore\r\n     */\r\n    UserAgentApplication.prototype.getResponseState = function (hash) {\r\n        this.logger.verbose(\"GetResponseState has been called\");\r\n        var parameters = _utils_UrlUtils__WEBPACK_IMPORTED_MODULE_14__[\"UrlUtils\"].deserializeHash(hash);\r\n        var stateResponse;\r\n        if (!parameters) {\r\n            throw _error_AuthError__WEBPACK_IMPORTED_MODULE_20__[\"AuthError\"].createUnexpectedError(\"Hash was not parsed correctly.\");\r\n        }\r\n        if (parameters.hasOwnProperty(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"ServerHashParamKeys\"].STATE)) {\r\n            this.logger.verbose(\"Hash contains state. Creating stateInfo object\");\r\n            var parsedState = _utils_RequestUtils__WEBPACK_IMPORTED_MODULE_15__[\"RequestUtils\"].parseLibraryState(parameters.state);\r\n            stateResponse = {\r\n                requestType: _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].unknown,\r\n                state: parameters.state,\r\n                timestamp: parsedState.ts,\r\n                method: parsedState.method,\r\n                stateMatch: false\r\n            };\r\n        }\r\n        else {\r\n            throw _error_AuthError__WEBPACK_IMPORTED_MODULE_20__[\"AuthError\"].createUnexpectedError(\"Hash does not contain state.\");\r\n        }\r\n        /*\r\n         * async calls can fire iframe and login request at the same time if developer does not use the API as expected\r\n         * incoming callback needs to be looked up to find the request type\r\n         */\r\n        // loginRedirect\r\n        if (stateResponse.state === this.cacheStorage.getItem(_cache_AuthCache__WEBPACK_IMPORTED_MODULE_7__[\"AuthCache\"].generateTemporaryCacheKey(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"TemporaryCacheKeys\"].STATE_LOGIN, stateResponse.state), this.inCookie) || stateResponse.state === this.silentAuthenticationState) {\r\n            this.logger.verbose(\"State matches cached state, setting requestType to login\");\r\n            stateResponse.requestType = _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].login;\r\n            stateResponse.stateMatch = true;\r\n            return stateResponse;\r\n        }\r\n        // acquireTokenRedirect\r\n        else if (stateResponse.state === this.cacheStorage.getItem(_cache_AuthCache__WEBPACK_IMPORTED_MODULE_7__[\"AuthCache\"].generateTemporaryCacheKey(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"TemporaryCacheKeys\"].STATE_ACQ_TOKEN, stateResponse.state), this.inCookie)) {\r\n            this.logger.verbose(\"State matches cached state, setting requestType to renewToken\");\r\n            stateResponse.requestType = _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].renewToken;\r\n            stateResponse.stateMatch = true;\r\n            return stateResponse;\r\n        }\r\n        // external api requests may have many renewtoken requests for different resource\r\n        if (!stateResponse.stateMatch) {\r\n            this.logger.verbose(\"State does not match cached state, setting requestType to type from window\");\r\n            stateResponse.requestType = window.requestType;\r\n            var statesInParentContext = window.renewStates;\r\n            for (var i = 0; i < statesInParentContext.length; i++) {\r\n                if (statesInParentContext[i] === stateResponse.state) {\r\n                    this.logger.verbose(\"Matching state found for request\");\r\n                    stateResponse.stateMatch = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!stateResponse.stateMatch) {\r\n                this.logger.verbose(\"Matching state not found for request\");\r\n            }\r\n        }\r\n        return stateResponse;\r\n    };\r\n    // #endregion\r\n    // #region Token Processing (Extract to TokenProcessing.ts)\r\n    /**\r\n     * @hidden\r\n     * Used to get token for the specified set of scopes from the cache\r\n     * @param {@link ServerRequestParameters} - Request sent to the STS to obtain an id_token/access_token\r\n     * @param {Account} account - Account for which the scopes were requested\r\n     */\r\n    UserAgentApplication.prototype.getCachedToken = function (serverAuthenticationRequest, account) {\r\n        this.logger.verbose(\"GetCachedToken has been called\");\r\n        var scopes = serverAuthenticationRequest.scopes;\r\n        /**\r\n         * Id Token should be returned in every acquireTokenSilent call. The only exception is a response_type = token\r\n         * request when a valid ID Token is not present in the cache.\r\n         */\r\n        var idToken = this.getCachedIdToken(serverAuthenticationRequest, account);\r\n        var authResponse = this.getCachedAccessToken(serverAuthenticationRequest, account, scopes);\r\n        var accountState = this.getAccountState(serverAuthenticationRequest.state);\r\n        return _utils_ResponseUtils__WEBPACK_IMPORTED_MODULE_16__[\"ResponseUtils\"].buildAuthResponse(idToken, authResponse, serverAuthenticationRequest, account, scopes, accountState);\r\n    };\r\n    /**\r\n     * @hidden\r\n     *\r\n     * Uses passed in authority to further filter an array of tokenCacheItems until only the token being searched for remains, then returns that tokenCacheItem.\r\n     * This method will throw if authority filtering still yields multiple matching tokens and will return null if not tokens match the authority passed in.\r\n     *\r\n     * @param authority\r\n     * @param tokenCacheItems\r\n     * @param request\r\n     * @param requestScopes\r\n     * @param tokenType\r\n     */\r\n    UserAgentApplication.prototype.getTokenCacheItemByAuthority = function (authority, tokenCacheItems, requestScopes, tokenType) {\r\n        var _this = this;\r\n        var filteredAuthorityItems;\r\n        if (_utils_UrlUtils__WEBPACK_IMPORTED_MODULE_14__[\"UrlUtils\"].isCommonAuthority(authority) || _utils_UrlUtils__WEBPACK_IMPORTED_MODULE_14__[\"UrlUtils\"].isOrganizationsAuthority(authority)) {\r\n            filteredAuthorityItems = _utils_AuthCacheUtils__WEBPACK_IMPORTED_MODULE_30__[\"AuthCacheUtils\"].filterTokenCacheItemsByDomain(tokenCacheItems, _utils_UrlUtils__WEBPACK_IMPORTED_MODULE_14__[\"UrlUtils\"].GetUrlComponents(authority).HostNameAndPort);\r\n        }\r\n        else {\r\n            filteredAuthorityItems = _utils_AuthCacheUtils__WEBPACK_IMPORTED_MODULE_30__[\"AuthCacheUtils\"].filterTokenCacheItemsByAuthority(tokenCacheItems, authority);\r\n        }\r\n        if (filteredAuthorityItems.length === 1) {\r\n            return filteredAuthorityItems[0];\r\n        }\r\n        else if (filteredAuthorityItems.length > 1) {\r\n            this.logger.warning(\"Multiple matching tokens found. Cleaning cache and requesting a new token.\");\r\n            filteredAuthorityItems.forEach(function (accessTokenCacheItem) {\r\n                _this.cacheStorage.removeItem(JSON.stringify(accessTokenCacheItem.key));\r\n            });\r\n            return null;\r\n        }\r\n        else {\r\n            this.logger.verbose(\"No matching tokens of type \" + tokenType + \" found\");\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @hidden\r\n     *\r\n     * Searches the token cache for an ID Token that matches the request parameter and returns it as an IdToken object.\r\n     *\r\n     * @param serverAuthenticationRequest\r\n     * @param account\r\n     */\r\n    UserAgentApplication.prototype.getCachedIdToken = function (serverAuthenticationRequest, account) {\r\n        this.logger.verbose(\"Getting all cached tokens of type ID Token\");\r\n        var idTokenCacheItems = this.cacheStorage.getAllIdTokens(this.clientId, account ? account.homeAccountIdentifier : null);\r\n        var matchAuthority = serverAuthenticationRequest.authority || this.authority;\r\n        var idTokenCacheItem = this.getTokenCacheItemByAuthority(matchAuthority, idTokenCacheItems, null, _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"ServerHashParamKeys\"].ID_TOKEN);\r\n        if (idTokenCacheItem) {\r\n            this.logger.verbose(\"Evaluating ID token found\");\r\n            var idTokenIsStillValid = this.evaluateTokenExpiration(idTokenCacheItem);\r\n            if (idTokenIsStillValid) {\r\n                this.logger.verbose(\"ID token expiration is within offset, using ID token found in cache\");\r\n                var idTokenValue = idTokenCacheItem.value;\r\n                if (idTokenValue) {\r\n                    this.logger.verbose(\"ID Token found in cache is valid and unexpired\");\r\n                }\r\n                else {\r\n                    this.logger.verbose(\"ID Token found in cache is invalid\");\r\n                }\r\n                return (idTokenValue) ? new _IdToken__WEBPACK_IMPORTED_MODULE_6__[\"IdToken\"](idTokenValue.idToken) : null;\r\n            }\r\n            else {\r\n                this.logger.verbose(\"Cached ID token is expired, removing from cache\");\r\n                this.cacheStorage.removeItem(JSON.stringify(idTokenCacheItem.key));\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            this.logger.verbose(\"No tokens found\");\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @hidden\r\n     *\r\n     * Searches the token cache for an access token that matches the request parameters and returns it as an AuthResponse.\r\n     *\r\n     * @param serverAuthenticationRequest\r\n     * @param account\r\n     * @param scopes\r\n     */\r\n    UserAgentApplication.prototype.getCachedAccessToken = function (serverAuthenticationRequest, account, scopes) {\r\n        this.logger.verbose(\"Getting all cached tokens of type Access Token\");\r\n        var tokenCacheItems = this.cacheStorage.getAllAccessTokens(this.clientId, account ? account.homeAccountIdentifier : null);\r\n        var scopeFilteredTokenCacheItems = _utils_AuthCacheUtils__WEBPACK_IMPORTED_MODULE_30__[\"AuthCacheUtils\"].filterTokenCacheItemsByScope(tokenCacheItems, scopes);\r\n        var matchAuthority = serverAuthenticationRequest.authority || this.authority;\r\n        // serverAuthenticationRequest.authority can only be common or organizations if not null\r\n        var accessTokenCacheItem = this.getTokenCacheItemByAuthority(matchAuthority, scopeFilteredTokenCacheItems, scopes, _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"ServerHashParamKeys\"].ACCESS_TOKEN);\r\n        if (!accessTokenCacheItem) {\r\n            this.logger.verbose(\"No matching token found when filtering by scope and authority\");\r\n            var authorityList = this.getUniqueAuthority(tokenCacheItems, \"authority\");\r\n            if (authorityList.length > 1) {\r\n                throw _error_ClientAuthError__WEBPACK_IMPORTED_MODULE_21__[\"ClientAuthError\"].createMultipleAuthoritiesInCacheError(scopes.toString());\r\n            }\r\n            this.logger.verbose(\"Single authority used, setting authorityInstance\");\r\n            serverAuthenticationRequest.authorityInstance = _authority_AuthorityFactory__WEBPACK_IMPORTED_MODULE_17__[\"AuthorityFactory\"].CreateInstance(authorityList[0], this.config.auth.validateAuthority);\r\n            return null;\r\n        }\r\n        else {\r\n            serverAuthenticationRequest.authorityInstance = _authority_AuthorityFactory__WEBPACK_IMPORTED_MODULE_17__[\"AuthorityFactory\"].CreateInstance(accessTokenCacheItem.key.authority, this.config.auth.validateAuthority);\r\n            this.logger.verbose(\"Evaluating access token found\");\r\n            var tokenIsStillValid = this.evaluateTokenExpiration(accessTokenCacheItem);\r\n            // The response value will stay null if token retrieved from the cache is expired, otherwise it will be populated with said token's data\r\n            if (tokenIsStillValid) {\r\n                this.logger.verbose(\"Access token expiration is within offset, using access token found in cache\");\r\n                if (!account) {\r\n                    account = this.getAccount();\r\n                    if (!account) {\r\n                        throw _error_AuthError__WEBPACK_IMPORTED_MODULE_20__[\"AuthError\"].createUnexpectedError(\"Account should not be null here.\");\r\n                    }\r\n                }\r\n                var aState = this.getAccountState(serverAuthenticationRequest.state);\r\n                var response = {\r\n                    uniqueId: \"\",\r\n                    tenantId: \"\",\r\n                    tokenType: _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"ServerHashParamKeys\"].ACCESS_TOKEN,\r\n                    idToken: null,\r\n                    idTokenClaims: null,\r\n                    accessToken: accessTokenCacheItem.value.accessToken,\r\n                    scopes: accessTokenCacheItem.key.scopes.split(\" \"),\r\n                    expiresOn: new Date(Number(accessTokenCacheItem.value.expiresIn) * 1000),\r\n                    account: account,\r\n                    accountState: aState,\r\n                    fromCache: true\r\n                };\r\n                return response;\r\n            }\r\n            else {\r\n                this.logger.verbose(\"Access token expired, removing from cache\");\r\n                this.cacheStorage.removeItem(JSON.stringify(accessTokenCacheItem.key));\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns true if the token passed in is within the acceptable expiration time offset, false if it is expired.\r\n     * @param tokenCacheItem\r\n     * @param serverAuthenticationRequest\r\n     */\r\n    UserAgentApplication.prototype.evaluateTokenExpiration = function (tokenCacheItem) {\r\n        var expiration = Number(tokenCacheItem.value.expiresIn);\r\n        return _utils_TokenUtils__WEBPACK_IMPORTED_MODULE_12__[\"TokenUtils\"].validateExpirationIsWithinOffset(expiration, this.config.system.tokenRenewalOffsetSeconds);\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Used to get a unique list of authorities from the cache\r\n     * @param {Array<AccessTokenCacheItem>}  accessTokenCacheItems - accessTokenCacheItems saved in the cache\r\n     * @ignore\r\n     */\r\n    UserAgentApplication.prototype.getUniqueAuthority = function (accessTokenCacheItems, property) {\r\n        this.logger.verbose(\"GetUniqueAuthority has been called\");\r\n        var authorityList = [];\r\n        var flags = [];\r\n        accessTokenCacheItems.forEach(function (element) {\r\n            if (element.key.hasOwnProperty(property) && (flags.indexOf(element.key[property]) === -1)) {\r\n                flags.push(element.key[property]);\r\n                authorityList.push(element.key[property]);\r\n            }\r\n        });\r\n        return authorityList;\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Check if ADAL id_token exists and return if exists.\r\n     *\r\n     */\r\n    UserAgentApplication.prototype.extractADALIdToken = function () {\r\n        this.logger.verbose(\"ExtractADALIdToken has been called\");\r\n        var adalIdToken = this.cacheStorage.getItem(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].adalIdToken);\r\n        return (!_utils_StringUtils__WEBPACK_IMPORTED_MODULE_10__[\"StringUtils\"].isEmpty(adalIdToken)) ? _utils_TokenUtils__WEBPACK_IMPORTED_MODULE_12__[\"TokenUtils\"].extractIdToken(adalIdToken) : null;\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Acquires access token using a hidden iframe.\r\n     * @ignore\r\n     */\r\n    UserAgentApplication.prototype.renewToken = function (requestSignature, resolve, reject, account, serverAuthenticationRequest) {\r\n        this.logger.verbose(\"RenewToken has been called\");\r\n        this.logger.verbosePii(\"RenewToken scope and authority: \" + requestSignature);\r\n        var frameName = _utils_WindowUtils__WEBPACK_IMPORTED_MODULE_11__[\"WindowUtils\"].generateFrameName(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"FramePrefix\"].TOKEN_FRAME, requestSignature);\r\n        _utils_WindowUtils__WEBPACK_IMPORTED_MODULE_11__[\"WindowUtils\"].addHiddenIFrame(frameName, this.logger);\r\n        this.updateCacheEntries(serverAuthenticationRequest, account, false);\r\n        this.logger.verbosePii(\"RenewToken expected state: \" + serverAuthenticationRequest.state);\r\n        // Build urlNavigate with \"prompt=none\" and navigate to URL in hidden iFrame\r\n        var urlNavigate = _utils_UrlUtils__WEBPACK_IMPORTED_MODULE_14__[\"UrlUtils\"].urlRemoveQueryStringParameter(_utils_UrlUtils__WEBPACK_IMPORTED_MODULE_14__[\"UrlUtils\"].createNavigateUrl(serverAuthenticationRequest), _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].prompt) + _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].prompt_none + _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].response_mode_fragment;\r\n        window.renewStates.push(serverAuthenticationRequest.state);\r\n        window.requestType = _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].renewToken;\r\n        this.logger.verbose(\"Set window.renewState and requestType\");\r\n        this.registerCallback(serverAuthenticationRequest.state, requestSignature, resolve, reject);\r\n        this.logger.infoPii(\"Navigate to: \" + urlNavigate);\r\n        this.loadIframeTimeout(urlNavigate, frameName, requestSignature).catch(function (error) { return reject(error); });\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Renews idtoken for app's own backend when clientId is passed as a single scope in the scopes array.\r\n     * @ignore\r\n     */\r\n    UserAgentApplication.prototype.renewIdToken = function (requestSignature, resolve, reject, account, serverAuthenticationRequest) {\r\n        this.logger.info(\"RenewIdToken has been called\");\r\n        var frameName = _utils_WindowUtils__WEBPACK_IMPORTED_MODULE_11__[\"WindowUtils\"].generateFrameName(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"FramePrefix\"].ID_TOKEN_FRAME, requestSignature);\r\n        _utils_WindowUtils__WEBPACK_IMPORTED_MODULE_11__[\"WindowUtils\"].addHiddenIFrame(frameName, this.logger);\r\n        this.updateCacheEntries(serverAuthenticationRequest, account, false);\r\n        this.logger.verbose(\"RenewIdToken expected state: \" + serverAuthenticationRequest.state);\r\n        // Build urlNavigate with \"prompt=none\" and navigate to URL in hidden iFrame\r\n        var urlNavigate = _utils_UrlUtils__WEBPACK_IMPORTED_MODULE_14__[\"UrlUtils\"].urlRemoveQueryStringParameter(_utils_UrlUtils__WEBPACK_IMPORTED_MODULE_14__[\"UrlUtils\"].createNavigateUrl(serverAuthenticationRequest), _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].prompt) + _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].prompt_none + _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].response_mode_fragment;\r\n        if (this.silentLogin) {\r\n            this.logger.verbose(\"Silent login is true, set silentAuthenticationState\");\r\n            window.requestType = _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].login;\r\n            this.silentAuthenticationState = serverAuthenticationRequest.state;\r\n        }\r\n        else {\r\n            this.logger.verbose(\"Not silent login, set window.renewState and requestType\");\r\n            window.requestType = _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].renewToken;\r\n            window.renewStates.push(serverAuthenticationRequest.state);\r\n        }\r\n        // note: scope here is clientId\r\n        this.registerCallback(serverAuthenticationRequest.state, requestSignature, resolve, reject);\r\n        this.logger.infoPii(\"Navigate to:\\\" \" + urlNavigate);\r\n        this.loadIframeTimeout(urlNavigate, frameName, requestSignature).catch(function (error) { return reject(error); });\r\n    };\r\n    /**\r\n     * @hidden\r\n     *\r\n     * This method builds an Access Token Cache item and saves it to the cache, returning the original\r\n     * AuthResponse augmented with a parsed expiresOn attribute.\r\n     *\r\n     * @param response The AuthResponse object that contains the token to be saved\r\n     * @param authority The authority under which the ID token will be cached\r\n     * @param scopes The scopes to be added to the cache item key (undefined for ID token cache items)\r\n     * @param clientInfo Client Info object that is used to generate the homeAccountIdentifier\r\n     * @param expiration Token expiration timestamp\r\n     */\r\n    UserAgentApplication.prototype.saveToken = function (response, authority, scopes, clientInfo, expiration) {\r\n        var accessTokenKey = new _cache_AccessTokenKey__WEBPACK_IMPORTED_MODULE_1__[\"AccessTokenKey\"](authority, this.clientId, scopes, clientInfo.uid, clientInfo.utid);\r\n        var accessTokenValue = new _cache_AccessTokenValue__WEBPACK_IMPORTED_MODULE_2__[\"AccessTokenValue\"](response.accessToken, response.idToken.rawIdToken, expiration.toString(), clientInfo.encodeClientInfo());\r\n        this.cacheStorage.setItem(JSON.stringify(accessTokenKey), JSON.stringify(accessTokenValue));\r\n        if (expiration) {\r\n            this.logger.verbose(\"New expiration set for token\");\r\n            response.expiresOn = new Date(expiration * 1000);\r\n        }\r\n        else {\r\n            this.logger.error(\"Could not parse expiresIn parameter for access token\");\r\n        }\r\n        return response;\r\n    };\r\n    /**\r\n     * @hidden\r\n     *\r\n     * This method sets up the elements of an ID Token cache item and calls saveToken to save it in\r\n     * Access Token Cache item format for the client application to use.\r\n     *\r\n     * @param response The AuthResponse object that will be used to build the cache item\r\n     * @param authority The authority under which the ID token will be cached\r\n     * @param parameters The response's Hash Params, which contain the ID token returned from the server\r\n     * @param clientInfo Client Info object that is used to generate the homeAccountIdentifier\r\n     * @param idTokenObj ID Token object from which the ID token's expiration is extracted\r\n     */\r\n    /* tslint:disable:no-string-literal */\r\n    UserAgentApplication.prototype.saveIdToken = function (response, authority, parameters, clientInfo, idTokenObj) {\r\n        this.logger.verbose(\"SaveIdToken has been called\");\r\n        var idTokenResponse = tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"]({}, response);\r\n        // Scopes are undefined so they don't show up in ID token cache key\r\n        var scopes;\r\n        idTokenResponse.scopes = _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].oidcScopes;\r\n        idTokenResponse.accessToken = parameters[_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"ServerHashParamKeys\"].ID_TOKEN];\r\n        var expiration = Number(idTokenObj.expiration);\r\n        // Set ID Token item in cache\r\n        this.logger.verbose(\"Saving ID token to cache\");\r\n        return this.saveToken(idTokenResponse, authority, scopes, clientInfo, expiration);\r\n    };\r\n    /**\r\n     * @hidden\r\n     *\r\n     * This method sets up the elements of an Access Token cache item and calls saveToken to save it to the cache\r\n     *\r\n     * @param response The AuthResponse object that will be used to build the cache item\r\n     * @param authority The authority under which the access token will be cached\r\n     * @param parameters The response's Hash Params, which contain the access token returned from the server\r\n     * @param clientInfo Client Info object that is used to generate the homeAccountIdentifier\r\n     */\r\n    /* tslint:disable:no-string-literal */\r\n    UserAgentApplication.prototype.saveAccessToken = function (response, authority, parameters, clientInfo) {\r\n        this.logger.verbose(\"SaveAccessToken has been called\");\r\n        var accessTokenResponse = tslib__WEBPACK_IMPORTED_MODULE_0__[\"__assign\"]({}, response);\r\n        // read the scopes\r\n        var scope = parameters[_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"ServerHashParamKeys\"].SCOPE];\r\n        var consentedScopes = scope.split(\" \");\r\n        // retrieve all access tokens from the cache, remove the dup scopes\r\n        var accessTokenCacheItems = this.cacheStorage.getAllAccessTokens(this.clientId, authority);\r\n        this.logger.verbose(\"Retrieving all access tokens from cache and removing duplicates\");\r\n        for (var i = 0; i < accessTokenCacheItems.length; i++) {\r\n            var accessTokenCacheItem = accessTokenCacheItems[i];\r\n            if (accessTokenCacheItem.key.homeAccountIdentifier === response.account.homeAccountIdentifier) {\r\n                var cachedScopes = accessTokenCacheItem.key.scopes.split(\" \");\r\n                if (_ScopeSet__WEBPACK_IMPORTED_MODULE_9__[\"ScopeSet\"].isIntersectingScopes(cachedScopes, consentedScopes)) {\r\n                    this.cacheStorage.removeItem(JSON.stringify(accessTokenCacheItem.key));\r\n                }\r\n            }\r\n        }\r\n        accessTokenResponse.accessToken = parameters[_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"ServerHashParamKeys\"].ACCESS_TOKEN];\r\n        accessTokenResponse.scopes = consentedScopes;\r\n        var expiresIn = _utils_TimeUtils__WEBPACK_IMPORTED_MODULE_13__[\"TimeUtils\"].parseExpiresIn(parameters[_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"ServerHashParamKeys\"].EXPIRES_IN]);\r\n        var parsedState = _utils_RequestUtils__WEBPACK_IMPORTED_MODULE_15__[\"RequestUtils\"].parseLibraryState(parameters[_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"ServerHashParamKeys\"].STATE]);\r\n        var expiration = parsedState.ts + expiresIn;\r\n        this.logger.verbose(\"Saving access token to cache\");\r\n        return this.saveToken(accessTokenResponse, authority, scope, clientInfo, expiration);\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Saves token or error received in the response from AAD in the cache. In case of id_token, it also creates the account object.\r\n     * @ignore\r\n     */\r\n    UserAgentApplication.prototype.saveTokenFromHash = function (hash, stateInfo) {\r\n        this.logger.verbose(\"SaveTokenFromHash has been called\");\r\n        this.logger.info(\"State status: \" + stateInfo.stateMatch + \"; Request type: \" + stateInfo.requestType);\r\n        var response = {\r\n            uniqueId: \"\",\r\n            tenantId: \"\",\r\n            tokenType: \"\",\r\n            idToken: null,\r\n            idTokenClaims: null,\r\n            accessToken: null,\r\n            scopes: [],\r\n            expiresOn: null,\r\n            account: null,\r\n            accountState: \"\",\r\n            fromCache: false\r\n        };\r\n        var error;\r\n        var hashParams = _utils_UrlUtils__WEBPACK_IMPORTED_MODULE_14__[\"UrlUtils\"].deserializeHash(hash);\r\n        var authorityKey = \"\";\r\n        var acquireTokenAccountKey = \"\";\r\n        var idTokenObj = null;\r\n        // If server returns an error\r\n        if (hashParams.hasOwnProperty(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"ServerHashParamKeys\"].ERROR_DESCRIPTION) || hashParams.hasOwnProperty(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"ServerHashParamKeys\"].ERROR)) {\r\n            this.logger.verbose(\"Server returned an error\");\r\n            this.logger.infoPii(\"Error : \" + hashParams[_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"ServerHashParamKeys\"].ERROR] + \"; Error description: \" + hashParams[_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"ServerHashParamKeys\"].ERROR_DESCRIPTION]);\r\n            this.cacheStorage.setItem(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"ErrorCacheKeys\"].ERROR, hashParams[_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"ServerHashParamKeys\"].ERROR]);\r\n            this.cacheStorage.setItem(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"ErrorCacheKeys\"].ERROR_DESC, hashParams[_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"ServerHashParamKeys\"].ERROR_DESCRIPTION]);\r\n            // login\r\n            if (stateInfo.requestType === _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].login) {\r\n                this.logger.verbose(\"RequestType is login, caching login error, generating authorityKey\");\r\n                this.cacheStorage.setItem(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"ErrorCacheKeys\"].LOGIN_ERROR, hashParams[_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"ServerHashParamKeys\"].ERROR_DESCRIPTION] + \":\" + hashParams[_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"ServerHashParamKeys\"].ERROR]);\r\n                authorityKey = _cache_AuthCache__WEBPACK_IMPORTED_MODULE_7__[\"AuthCache\"].generateAuthorityKey(stateInfo.state);\r\n            }\r\n            // acquireToken\r\n            if (stateInfo.requestType === _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].renewToken) {\r\n                this.logger.verbose(\"RequestType is renewToken, generating acquireTokenAccountKey\");\r\n                authorityKey = _cache_AuthCache__WEBPACK_IMPORTED_MODULE_7__[\"AuthCache\"].generateAuthorityKey(stateInfo.state);\r\n                var account = this.getAccount();\r\n                var accountId = void 0;\r\n                if (account && !_utils_StringUtils__WEBPACK_IMPORTED_MODULE_10__[\"StringUtils\"].isEmpty(account.homeAccountIdentifier)) {\r\n                    accountId = account.homeAccountIdentifier;\r\n                    this.logger.verbose(\"AccountId is set\");\r\n                }\r\n                else {\r\n                    accountId = _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].no_account;\r\n                    this.logger.verbose(\"AccountId is set as no_account\");\r\n                }\r\n                acquireTokenAccountKey = _cache_AuthCache__WEBPACK_IMPORTED_MODULE_7__[\"AuthCache\"].generateAcquireTokenAccountKey(accountId, stateInfo.state);\r\n            }\r\n            var _a = _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"ServerHashParamKeys\"].ERROR, hashErr = hashParams[_a], _b = _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"ServerHashParamKeys\"].ERROR_DESCRIPTION, hashErrDesc = hashParams[_b];\r\n            if (_error_InteractionRequiredAuthError__WEBPACK_IMPORTED_MODULE_23__[\"InteractionRequiredAuthError\"].isInteractionRequiredError(hashErr) ||\r\n                _error_InteractionRequiredAuthError__WEBPACK_IMPORTED_MODULE_23__[\"InteractionRequiredAuthError\"].isInteractionRequiredError(hashErrDesc)) {\r\n                error = new _error_InteractionRequiredAuthError__WEBPACK_IMPORTED_MODULE_23__[\"InteractionRequiredAuthError\"](hashParams[_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"ServerHashParamKeys\"].ERROR], hashParams[_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"ServerHashParamKeys\"].ERROR_DESCRIPTION]);\r\n            }\r\n            else {\r\n                error = new _error_ServerError__WEBPACK_IMPORTED_MODULE_22__[\"ServerError\"](hashParams[_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"ServerHashParamKeys\"].ERROR], hashParams[_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"ServerHashParamKeys\"].ERROR_DESCRIPTION]);\r\n            }\r\n        }\r\n        // If the server returns \"Success\"\r\n        else {\r\n            this.logger.verbose(\"Server returns success\");\r\n            // Verify the state from redirect and record tokens to storage if exists\r\n            if (stateInfo.stateMatch) {\r\n                this.logger.info(\"State is right\");\r\n                if (hashParams.hasOwnProperty(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"ServerHashParamKeys\"].SESSION_STATE)) {\r\n                    this.logger.verbose(\"Fragment has session state, caching\");\r\n                    this.cacheStorage.setItem(_cache_AuthCache__WEBPACK_IMPORTED_MODULE_7__[\"AuthCache\"].generateTemporaryCacheKey(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"TemporaryCacheKeys\"].SESSION_STATE, stateInfo.state), hashParams[_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"ServerHashParamKeys\"].SESSION_STATE]);\r\n                }\r\n                response.accountState = this.getAccountState(stateInfo.state);\r\n                var clientInfo = void 0;\r\n                // Process access_token\r\n                if (hashParams.hasOwnProperty(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"ServerHashParamKeys\"].ACCESS_TOKEN)) {\r\n                    this.logger.info(\"Fragment has access token\");\r\n                    response.accessToken = hashParams[_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"ServerHashParamKeys\"].ACCESS_TOKEN];\r\n                    if (hashParams.hasOwnProperty(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"ServerHashParamKeys\"].SCOPE)) {\r\n                        response.scopes = hashParams[_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"ServerHashParamKeys\"].SCOPE].split(\" \");\r\n                    }\r\n                    // retrieve the id_token from response if present\r\n                    if (hashParams.hasOwnProperty(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"ServerHashParamKeys\"].ID_TOKEN)) {\r\n                        this.logger.verbose(\"Fragment has id_token\");\r\n                        idTokenObj = new _IdToken__WEBPACK_IMPORTED_MODULE_6__[\"IdToken\"](hashParams[_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"ServerHashParamKeys\"].ID_TOKEN]);\r\n                    }\r\n                    else {\r\n                        this.logger.verbose(\"No idToken on fragment, getting idToken from cache\");\r\n                        idTokenObj = new _IdToken__WEBPACK_IMPORTED_MODULE_6__[\"IdToken\"](this.cacheStorage.getItem(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"PersistentCacheKeys\"].IDTOKEN));\r\n                    }\r\n                    response = _utils_ResponseUtils__WEBPACK_IMPORTED_MODULE_16__[\"ResponseUtils\"].setResponseIdToken(response, idTokenObj);\r\n                    // set authority\r\n                    var authority = this.populateAuthority(stateInfo.state, this.inCookie, this.cacheStorage, idTokenObj);\r\n                    this.logger.verbose(\"Got authority from cache\");\r\n                    // retrieve client_info - if it is not found, generate the uid and utid from idToken\r\n                    if (hashParams.hasOwnProperty(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"ServerHashParamKeys\"].CLIENT_INFO)) {\r\n                        this.logger.verbose(\"Fragment has clientInfo\");\r\n                        clientInfo = new _ClientInfo__WEBPACK_IMPORTED_MODULE_5__[\"ClientInfo\"](hashParams[_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"ServerHashParamKeys\"].CLIENT_INFO], authority);\r\n                    }\r\n                    else if (this.authorityInstance.AuthorityType === _authority_Authority__WEBPACK_IMPORTED_MODULE_4__[\"AuthorityType\"].Adfs) {\r\n                        clientInfo = _ClientInfo__WEBPACK_IMPORTED_MODULE_5__[\"ClientInfo\"].createClientInfoFromIdToken(idTokenObj, authority);\r\n                    }\r\n                    else {\r\n                        this.logger.warning(\"ClientInfo not received in the response from AAD\");\r\n                    }\r\n                    response.account = _Account__WEBPACK_IMPORTED_MODULE_8__[\"Account\"].createAccount(idTokenObj, clientInfo);\r\n                    this.logger.verbose(\"Account object created from response\");\r\n                    var accountKey = void 0;\r\n                    if (response.account && !_utils_StringUtils__WEBPACK_IMPORTED_MODULE_10__[\"StringUtils\"].isEmpty(response.account.homeAccountIdentifier)) {\r\n                        this.logger.verbose(\"AccountKey set\");\r\n                        accountKey = response.account.homeAccountIdentifier;\r\n                    }\r\n                    else {\r\n                        this.logger.verbose(\"AccountKey set as no_account\");\r\n                        accountKey = _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].no_account;\r\n                    }\r\n                    acquireTokenAccountKey = _cache_AuthCache__WEBPACK_IMPORTED_MODULE_7__[\"AuthCache\"].generateAcquireTokenAccountKey(accountKey, stateInfo.state);\r\n                    var acquireTokenAccountKey_noaccount = _cache_AuthCache__WEBPACK_IMPORTED_MODULE_7__[\"AuthCache\"].generateAcquireTokenAccountKey(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].no_account, stateInfo.state);\r\n                    this.logger.verbose(\"AcquireTokenAccountKey generated\");\r\n                    var cachedAccount = this.cacheStorage.getItem(acquireTokenAccountKey);\r\n                    var acquireTokenAccount = void 0;\r\n                    // Check with the account in the Cache\r\n                    if (!_utils_StringUtils__WEBPACK_IMPORTED_MODULE_10__[\"StringUtils\"].isEmpty(cachedAccount)) {\r\n                        acquireTokenAccount = JSON.parse(cachedAccount);\r\n                        this.logger.verbose(\"AcquireToken request account retrieved from cache\");\r\n                        if (response.account && acquireTokenAccount && _Account__WEBPACK_IMPORTED_MODULE_8__[\"Account\"].compareAccounts(response.account, acquireTokenAccount)) {\r\n                            response = this.saveAccessToken(response, authority, hashParams, clientInfo);\r\n                            this.logger.info(\"The user object received in the response is the same as the one passed in the acquireToken request\");\r\n                        }\r\n                        else {\r\n                            this.logger.warning(\"The account object created from the response is not the same as the one passed in the acquireToken request\");\r\n                        }\r\n                    }\r\n                    else if (!_utils_StringUtils__WEBPACK_IMPORTED_MODULE_10__[\"StringUtils\"].isEmpty(this.cacheStorage.getItem(acquireTokenAccountKey_noaccount))) {\r\n                        this.logger.verbose(\"No acquireToken account retrieved from cache\");\r\n                        response = this.saveAccessToken(response, authority, hashParams, clientInfo);\r\n                    }\r\n                }\r\n                // Process id_token\r\n                if (hashParams.hasOwnProperty(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"ServerHashParamKeys\"].ID_TOKEN)) {\r\n                    this.logger.info(\"Fragment has idToken\");\r\n                    // set the idToken\r\n                    idTokenObj = new _IdToken__WEBPACK_IMPORTED_MODULE_6__[\"IdToken\"](hashParams[_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"ServerHashParamKeys\"].ID_TOKEN]);\r\n                    // set authority\r\n                    var authority = this.populateAuthority(stateInfo.state, this.inCookie, this.cacheStorage, idTokenObj);\r\n                    response = _utils_ResponseUtils__WEBPACK_IMPORTED_MODULE_16__[\"ResponseUtils\"].setResponseIdToken(response, idTokenObj);\r\n                    if (hashParams.hasOwnProperty(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"ServerHashParamKeys\"].CLIENT_INFO)) {\r\n                        this.logger.verbose(\"Fragment has clientInfo\");\r\n                        clientInfo = new _ClientInfo__WEBPACK_IMPORTED_MODULE_5__[\"ClientInfo\"](hashParams[_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"ServerHashParamKeys\"].CLIENT_INFO], authority);\r\n                    }\r\n                    else if (this.authorityInstance.AuthorityType === _authority_Authority__WEBPACK_IMPORTED_MODULE_4__[\"AuthorityType\"].Adfs) {\r\n                        clientInfo = _ClientInfo__WEBPACK_IMPORTED_MODULE_5__[\"ClientInfo\"].createClientInfoFromIdToken(idTokenObj, authority);\r\n                    }\r\n                    else {\r\n                        this.logger.warning(\"ClientInfo not received in the response from AAD\");\r\n                    }\r\n                    this.account = _Account__WEBPACK_IMPORTED_MODULE_8__[\"Account\"].createAccount(idTokenObj, clientInfo);\r\n                    response.account = this.account;\r\n                    this.logger.verbose(\"Account object created from response\");\r\n                    if (idTokenObj && idTokenObj.nonce) {\r\n                        this.logger.verbose(\"IdToken has nonce\");\r\n                        // check nonce integrity if idToken has nonce - throw an error if not matched\r\n                        var cachedNonce = this.cacheStorage.getItem(_cache_AuthCache__WEBPACK_IMPORTED_MODULE_7__[\"AuthCache\"].generateTemporaryCacheKey(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"TemporaryCacheKeys\"].NONCE_IDTOKEN, stateInfo.state), this.inCookie);\r\n                        if (idTokenObj.nonce !== cachedNonce) {\r\n                            this.account = null;\r\n                            this.cacheStorage.setItem(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"ErrorCacheKeys\"].LOGIN_ERROR, \"Nonce Mismatch. Expected Nonce: \" + cachedNonce + \",\" + \"Actual Nonce: \" + idTokenObj.nonce);\r\n                            this.logger.error(\"Nonce Mismatch. Expected Nonce: \" + cachedNonce + \", Actual Nonce: \" + idTokenObj.nonce);\r\n                            error = _error_ClientAuthError__WEBPACK_IMPORTED_MODULE_21__[\"ClientAuthError\"].createNonceMismatchError(cachedNonce, idTokenObj.nonce);\r\n                        }\r\n                        // Save the token\r\n                        else {\r\n                            this.logger.verbose(\"Nonce matches, saving idToken to cache\");\r\n                            this.cacheStorage.setItem(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"PersistentCacheKeys\"].IDTOKEN, hashParams[_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"ServerHashParamKeys\"].ID_TOKEN], this.inCookie);\r\n                            this.cacheStorage.setItem(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"PersistentCacheKeys\"].CLIENT_INFO, clientInfo.encodeClientInfo(), this.inCookie);\r\n                            // Save idToken as access token item for app itself\r\n                            this.saveIdToken(response, authority, hashParams, clientInfo, idTokenObj);\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.logger.verbose(\"No idToken or no nonce. Cache key for Authority set as state\");\r\n                        authorityKey = stateInfo.state;\r\n                        acquireTokenAccountKey = stateInfo.state;\r\n                        this.logger.error(\"Invalid id_token received in the response\");\r\n                        error = _error_ClientAuthError__WEBPACK_IMPORTED_MODULE_21__[\"ClientAuthError\"].createInvalidIdTokenError(idTokenObj);\r\n                        this.cacheStorage.setItem(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"ErrorCacheKeys\"].ERROR, error.errorCode);\r\n                        this.cacheStorage.setItem(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"ErrorCacheKeys\"].ERROR_DESC, error.errorMessage);\r\n                    }\r\n                }\r\n            }\r\n            // State mismatch - unexpected/invalid state\r\n            else {\r\n                this.logger.verbose(\"State mismatch\");\r\n                authorityKey = stateInfo.state;\r\n                acquireTokenAccountKey = stateInfo.state;\r\n                var expectedState = this.cacheStorage.getItem(_cache_AuthCache__WEBPACK_IMPORTED_MODULE_7__[\"AuthCache\"].generateTemporaryCacheKey(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"TemporaryCacheKeys\"].STATE_LOGIN, stateInfo.state), this.inCookie);\r\n                this.logger.error(\"State Mismatch. Expected State: \" + expectedState + \", Actual State: \" + stateInfo.state);\r\n                error = _error_ClientAuthError__WEBPACK_IMPORTED_MODULE_21__[\"ClientAuthError\"].createInvalidStateError(stateInfo.state, expectedState);\r\n                this.cacheStorage.setItem(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"ErrorCacheKeys\"].ERROR, error.errorCode);\r\n                this.cacheStorage.setItem(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"ErrorCacheKeys\"].ERROR_DESC, error.errorMessage);\r\n            }\r\n        }\r\n        // Set status to completed\r\n        this.cacheStorage.removeItem(_cache_AuthCache__WEBPACK_IMPORTED_MODULE_7__[\"AuthCache\"].generateTemporaryCacheKey(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"TemporaryCacheKeys\"].RENEW_STATUS, stateInfo.state));\r\n        this.cacheStorage.resetTempCacheItems(stateInfo.state);\r\n        this.logger.verbose(\"Status set to complete, temporary cache cleared\");\r\n        // this is required if navigateToLoginRequestUrl=false\r\n        if (this.inCookie) {\r\n            this.logger.verbose(\"InCookie is true, setting authorityKey in cookie\");\r\n            this.cacheStorage.setItemCookie(authorityKey, \"\", -1);\r\n            this.cacheStorage.clearMsalCookie(stateInfo.state);\r\n        }\r\n        if (error) {\r\n            // Error case, set status to cancelled\r\n            throw error;\r\n        }\r\n        if (!response) {\r\n            throw _error_AuthError__WEBPACK_IMPORTED_MODULE_20__[\"AuthError\"].createUnexpectedError(\"Response is null\");\r\n        }\r\n        return response;\r\n    };\r\n    /**\r\n     * Set Authority when saving Token from the hash\r\n     * @param state\r\n     * @param inCookie\r\n     * @param cacheStorage\r\n     * @param idTokenObj\r\n     * @param response\r\n     */\r\n    UserAgentApplication.prototype.populateAuthority = function (state, inCookie, cacheStorage, idTokenObj) {\r\n        this.logger.verbose(\"PopulateAuthority has been called\");\r\n        var authorityKey = _cache_AuthCache__WEBPACK_IMPORTED_MODULE_7__[\"AuthCache\"].generateAuthorityKey(state);\r\n        var cachedAuthority = cacheStorage.getItem(authorityKey, inCookie);\r\n        // retrieve the authority from cache and replace with tenantID\r\n        return _utils_StringUtils__WEBPACK_IMPORTED_MODULE_10__[\"StringUtils\"].isEmpty(cachedAuthority) ? cachedAuthority : _utils_UrlUtils__WEBPACK_IMPORTED_MODULE_14__[\"UrlUtils\"].replaceTenantPath(cachedAuthority, idTokenObj.tenantId);\r\n    };\r\n    /* tslint:enable:no-string-literal */\r\n    // #endregion\r\n    // #region Account\r\n    /**\r\n     * Returns the signed in account\r\n     * (the account object is created at the time of successful login)\r\n     * or null when no state is found\r\n     * @returns {@link Account} - the account object stored in MSAL\r\n     */\r\n    UserAgentApplication.prototype.getAccount = function () {\r\n        // if a session already exists, get the account from the session\r\n        if (this.account) {\r\n            return this.account;\r\n        }\r\n        // frame is used to get idToken and populate the account for the given session\r\n        var rawIdToken = this.cacheStorage.getItem(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"PersistentCacheKeys\"].IDTOKEN, this.inCookie);\r\n        var rawClientInfo = this.cacheStorage.getItem(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"PersistentCacheKeys\"].CLIENT_INFO, this.inCookie);\r\n        if (!_utils_StringUtils__WEBPACK_IMPORTED_MODULE_10__[\"StringUtils\"].isEmpty(rawIdToken) && !_utils_StringUtils__WEBPACK_IMPORTED_MODULE_10__[\"StringUtils\"].isEmpty(rawClientInfo)) {\r\n            var idToken = new _IdToken__WEBPACK_IMPORTED_MODULE_6__[\"IdToken\"](rawIdToken);\r\n            var clientInfo = new _ClientInfo__WEBPACK_IMPORTED_MODULE_5__[\"ClientInfo\"](rawClientInfo, \"\");\r\n            this.account = _Account__WEBPACK_IMPORTED_MODULE_8__[\"Account\"].createAccount(idToken, clientInfo);\r\n            return this.account;\r\n        }\r\n        // if login not yet done, return null\r\n        return null;\r\n    };\r\n    /**\r\n     * @hidden\r\n     *\r\n     * Extracts state value from the accountState sent with the authentication request.\r\n     * @returns {string} scope.\r\n     * @ignore\r\n     */\r\n    UserAgentApplication.prototype.getAccountState = function (state) {\r\n        if (state) {\r\n            var splitIndex = state.indexOf(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].resourceDelimiter);\r\n            if (splitIndex > -1 && splitIndex + 1 < state.length) {\r\n                return state.substring(splitIndex + 1);\r\n            }\r\n        }\r\n        return state;\r\n    };\r\n    /**\r\n     * Use to get a list of unique accounts in MSAL cache based on homeAccountIdentifier.\r\n     *\r\n     * @param {@link Array<Account>} Account - all unique accounts in MSAL cache.\r\n     */\r\n    UserAgentApplication.prototype.getAllAccounts = function () {\r\n        var accounts = [];\r\n        var accessTokenCacheItems = this.cacheStorage.getAllAccessTokens(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].clientId, _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].homeAccountIdentifier);\r\n        for (var i = 0; i < accessTokenCacheItems.length; i++) {\r\n            var idToken = new _IdToken__WEBPACK_IMPORTED_MODULE_6__[\"IdToken\"](accessTokenCacheItems[i].value.idToken);\r\n            var clientInfo = new _ClientInfo__WEBPACK_IMPORTED_MODULE_5__[\"ClientInfo\"](accessTokenCacheItems[i].value.homeAccountIdentifier, \"\");\r\n            var account = _Account__WEBPACK_IMPORTED_MODULE_8__[\"Account\"].createAccount(idToken, clientInfo);\r\n            accounts.push(account);\r\n        }\r\n        return this.getUniqueAccounts(accounts);\r\n    };\r\n    /**\r\n     * @hidden\r\n     *\r\n     * Used to filter accounts based on homeAccountIdentifier\r\n     * @param {Array<Account>}  Accounts - accounts saved in the cache\r\n     * @ignore\r\n     */\r\n    UserAgentApplication.prototype.getUniqueAccounts = function (accounts) {\r\n        if (!accounts || accounts.length <= 1) {\r\n            return accounts;\r\n        }\r\n        var flags = [];\r\n        var uniqueAccounts = [];\r\n        for (var index = 0; index < accounts.length; ++index) {\r\n            if (accounts[index].homeAccountIdentifier && flags.indexOf(accounts[index].homeAccountIdentifier) === -1) {\r\n                flags.push(accounts[index].homeAccountIdentifier);\r\n                uniqueAccounts.push(accounts[index]);\r\n            }\r\n        }\r\n        return uniqueAccounts;\r\n    };\r\n    // #endregion\r\n    // #region Angular\r\n    /**\r\n     * @hidden\r\n     *\r\n     * Broadcast messages - Used only for Angular?  *\r\n     * @param eventName\r\n     * @param data\r\n     */\r\n    UserAgentApplication.prototype.broadcast = function (eventName, data) {\r\n        var evt = new CustomEvent(eventName, { detail: data });\r\n        window.dispatchEvent(evt);\r\n    };\r\n    /**\r\n     * @hidden\r\n     *\r\n     * Helper function to retrieve the cached token\r\n     *\r\n     * @param scopes\r\n     * @param {@link Account} account\r\n     * @param state\r\n     * @return {@link AuthResponse} AuthResponse\r\n     */\r\n    UserAgentApplication.prototype.getCachedTokenInternal = function (scopes, account, state, correlationId) {\r\n        // Get the current session's account object\r\n        var accountObject = account || this.getAccount();\r\n        if (!accountObject) {\r\n            return null;\r\n        }\r\n        // Construct AuthenticationRequest based on response type; set \"redirectUri\" from the \"request\" which makes this call from Angular - for this.getRedirectUri()\r\n        var newAuthority = this.authorityInstance ? this.authorityInstance : _authority_AuthorityFactory__WEBPACK_IMPORTED_MODULE_17__[\"AuthorityFactory\"].CreateInstance(this.authority, this.config.auth.validateAuthority);\r\n        var responseType = this.getTokenType(accountObject, scopes);\r\n        var serverAuthenticationRequest = new _ServerRequestParameters__WEBPACK_IMPORTED_MODULE_3__[\"ServerRequestParameters\"](newAuthority, this.clientId, responseType, this.getRedirectUri(), scopes, state, correlationId);\r\n        // get cached token\r\n        return this.getCachedToken(serverAuthenticationRequest, account);\r\n    };\r\n    /**\r\n     * @hidden\r\n     *\r\n     * Get scopes for the Endpoint - Used in Angular to track protected and unprotected resources without interaction from the developer app\r\n     * Note: Please check if we need to set the \"redirectUri\" from the \"request\" which makes this call from Angular - for this.getRedirectUri()\r\n     *\r\n     * @param endpoint\r\n     */\r\n    UserAgentApplication.prototype.getScopesForEndpoint = function (endpoint) {\r\n        // if user specified list of unprotectedResources, no need to send token to these endpoints, return null.\r\n        if (this.config.framework.unprotectedResources.length > 0) {\r\n            for (var i = 0; i < this.config.framework.unprotectedResources.length; i++) {\r\n                if (endpoint.indexOf(this.config.framework.unprotectedResources[i]) > -1) {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n        // process all protected resources and send the matched one\r\n        if (this.config.framework.protectedResourceMap.size > 0) {\r\n            for (var _i = 0, _a = Array.from(this.config.framework.protectedResourceMap.keys()); _i < _a.length; _i++) {\r\n                var key = _a[_i];\r\n                // configEndpoint is like /api/Todo requested endpoint can be /api/Todo/1\r\n                if (endpoint.indexOf(key) > -1) {\r\n                    return this.config.framework.protectedResourceMap.get(key);\r\n                }\r\n            }\r\n        }\r\n        /*\r\n         * default resource will be clientid if nothing specified\r\n         * App will use idtoken for calls to itself\r\n         * check if it's staring from http or https, needs to match with app host\r\n         */\r\n        if (endpoint.indexOf(\"http://\") > -1 || endpoint.indexOf(\"https://\") > -1) {\r\n            if (_utils_UrlUtils__WEBPACK_IMPORTED_MODULE_14__[\"UrlUtils\"].getHostFromUri(endpoint) === _utils_UrlUtils__WEBPACK_IMPORTED_MODULE_14__[\"UrlUtils\"].getHostFromUri(this.getRedirectUri())) {\r\n                return new Array(this.clientId);\r\n            }\r\n        }\r\n        else {\r\n            /*\r\n             * in angular level, the url for $http interceptor call could be relative url,\r\n             * if it's relative call, we'll treat it as app backend call.\r\n             */\r\n            return new Array(this.clientId);\r\n        }\r\n        // if not the app's own backend or not a domain listed in the endpoints structure\r\n        return null;\r\n    };\r\n    /**\r\n     * Return boolean flag to developer to help inform if login is in progress\r\n     * @returns {boolean} true/false\r\n     */\r\n    UserAgentApplication.prototype.getLoginInProgress = function () {\r\n        return this.cacheStorage.getItem(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"TemporaryCacheKeys\"].INTERACTION_STATUS) === _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].inProgress;\r\n    };\r\n    /**\r\n     * @hidden\r\n     * @ignore\r\n     *\r\n     * @param loginInProgress\r\n     */\r\n    UserAgentApplication.prototype.setInteractionInProgress = function (inProgress) {\r\n        if (inProgress) {\r\n            this.cacheStorage.setItem(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"TemporaryCacheKeys\"].INTERACTION_STATUS, _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].inProgress);\r\n        }\r\n        else {\r\n            this.cacheStorage.removeItem(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"TemporaryCacheKeys\"].INTERACTION_STATUS);\r\n        }\r\n    };\r\n    /**\r\n     * @hidden\r\n     * @ignore\r\n     *\r\n     * @param loginInProgress\r\n     */\r\n    UserAgentApplication.prototype.setloginInProgress = function (loginInProgress) {\r\n        this.setInteractionInProgress(loginInProgress);\r\n    };\r\n    /**\r\n     * @hidden\r\n     * @ignore\r\n     *\r\n     * returns the status of acquireTokenInProgress\r\n     */\r\n    UserAgentApplication.prototype.getAcquireTokenInProgress = function () {\r\n        return this.cacheStorage.getItem(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"TemporaryCacheKeys\"].INTERACTION_STATUS) === _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].inProgress;\r\n    };\r\n    /**\r\n     * @hidden\r\n     * @ignore\r\n     *\r\n     * @param acquireTokenInProgress\r\n     */\r\n    UserAgentApplication.prototype.setAcquireTokenInProgress = function (acquireTokenInProgress) {\r\n        this.setInteractionInProgress(acquireTokenInProgress);\r\n    };\r\n    /**\r\n     * @hidden\r\n     * @ignore\r\n     *\r\n     * returns the logger handle\r\n     */\r\n    UserAgentApplication.prototype.getLogger = function () {\r\n        return this.logger;\r\n    };\r\n    /**\r\n     * Sets the logger callback.\r\n     * @param logger Logger callback\r\n     */\r\n    UserAgentApplication.prototype.setLogger = function (logger) {\r\n        this.logger = logger;\r\n    };\r\n    // #endregion\r\n    // #region Getters and Setters\r\n    /**\r\n     * Use to get the redirect uri configured in MSAL or null.\r\n     * Evaluates redirectUri if its a function, otherwise simply returns its value.\r\n     *\r\n     * @returns {string} redirect URL\r\n     */\r\n    UserAgentApplication.prototype.getRedirectUri = function (reqRedirectUri) {\r\n        if (reqRedirectUri) {\r\n            return reqRedirectUri;\r\n        }\r\n        else if (typeof this.config.auth.redirectUri === \"function\") {\r\n            return this.config.auth.redirectUri();\r\n        }\r\n        return this.config.auth.redirectUri;\r\n    };\r\n    /**\r\n     * Use to get the post logout redirect uri configured in MSAL or null.\r\n     * Evaluates postLogoutredirectUri if its a function, otherwise simply returns its value.\r\n     *\r\n     * @returns {string} post logout redirect URL\r\n     */\r\n    UserAgentApplication.prototype.getPostLogoutRedirectUri = function () {\r\n        if (typeof this.config.auth.postLogoutRedirectUri === \"function\") {\r\n            return this.config.auth.postLogoutRedirectUri();\r\n        }\r\n        return this.config.auth.postLogoutRedirectUri;\r\n    };\r\n    /**\r\n     * Use to get the current {@link Configuration} object in MSAL\r\n     *\r\n     * @returns {@link Configuration}\r\n     */\r\n    UserAgentApplication.prototype.getCurrentConfiguration = function () {\r\n        if (!this.config) {\r\n            throw _error_ClientConfigurationError__WEBPACK_IMPORTED_MODULE_19__[\"ClientConfigurationError\"].createNoSetConfigurationError();\r\n        }\r\n        return this.config;\r\n    };\r\n    /**\r\n     * @ignore\r\n     *\r\n     * Utils function to create the Authentication\r\n     * @param {@link account} account object\r\n     * @param scopes\r\n     *\r\n     * @returns {string} token type: token, id_token or id_token token\r\n     *\r\n     */\r\n    UserAgentApplication.prototype.getTokenType = function (accountObject, scopes) {\r\n        var accountsMatch = _Account__WEBPACK_IMPORTED_MODULE_8__[\"Account\"].compareAccounts(accountObject, this.getAccount());\r\n        return _ServerRequestParameters__WEBPACK_IMPORTED_MODULE_3__[\"ServerRequestParameters\"].determineResponseType(accountsMatch, scopes);\r\n    };\r\n    /**\r\n     * @hidden\r\n     * @ignore\r\n     *\r\n     * Sets the cachekeys for and stores the account information in cache\r\n     * @param account\r\n     * @param state\r\n     * @hidden\r\n     */\r\n    UserAgentApplication.prototype.setAccountCache = function (account, state) {\r\n        // Cache acquireTokenAccountKey\r\n        var accountId = account ? this.getAccountId(account) : _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].no_account;\r\n        var acquireTokenAccountKey = _cache_AuthCache__WEBPACK_IMPORTED_MODULE_7__[\"AuthCache\"].generateAcquireTokenAccountKey(accountId, state);\r\n        this.cacheStorage.setItem(acquireTokenAccountKey, JSON.stringify(account));\r\n    };\r\n    /**\r\n     * @hidden\r\n     * @ignore\r\n     *\r\n     * Sets the cacheKey for and stores the authority information in cache\r\n     * @param state\r\n     * @param authority\r\n     * @hidden\r\n     */\r\n    UserAgentApplication.prototype.setAuthorityCache = function (state, authority) {\r\n        // Cache authorityKey\r\n        var authorityKey = _cache_AuthCache__WEBPACK_IMPORTED_MODULE_7__[\"AuthCache\"].generateAuthorityKey(state);\r\n        this.cacheStorage.setItem(authorityKey, _utils_UrlUtils__WEBPACK_IMPORTED_MODULE_14__[\"UrlUtils\"].CanonicalizeUri(authority), this.inCookie);\r\n    };\r\n    /**\r\n     * Updates account, authority, and nonce in cache\r\n     * @param serverAuthenticationRequest\r\n     * @param account\r\n     * @hidden\r\n     * @ignore\r\n     */\r\n    UserAgentApplication.prototype.updateCacheEntries = function (serverAuthenticationRequest, account, isLoginCall, loginStartPage) {\r\n        // Cache Request Originator Page\r\n        if (loginStartPage) {\r\n            this.cacheStorage.setItem(_cache_AuthCache__WEBPACK_IMPORTED_MODULE_7__[\"AuthCache\"].generateTemporaryCacheKey(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"TemporaryCacheKeys\"].LOGIN_REQUEST, serverAuthenticationRequest.state), loginStartPage, this.inCookie);\r\n        }\r\n        // Cache account and authority\r\n        if (isLoginCall) {\r\n            // Cache the state\r\n            this.cacheStorage.setItem(_cache_AuthCache__WEBPACK_IMPORTED_MODULE_7__[\"AuthCache\"].generateTemporaryCacheKey(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"TemporaryCacheKeys\"].STATE_LOGIN, serverAuthenticationRequest.state), serverAuthenticationRequest.state, this.inCookie);\r\n        }\r\n        else {\r\n            this.setAccountCache(account, serverAuthenticationRequest.state);\r\n        }\r\n        // Cache authorityKey\r\n        this.setAuthorityCache(serverAuthenticationRequest.state, serverAuthenticationRequest.authority);\r\n        // Cache nonce\r\n        this.cacheStorage.setItem(_cache_AuthCache__WEBPACK_IMPORTED_MODULE_7__[\"AuthCache\"].generateTemporaryCacheKey(_utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"TemporaryCacheKeys\"].NONCE_IDTOKEN, serverAuthenticationRequest.state), serverAuthenticationRequest.nonce, this.inCookie);\r\n    };\r\n    /**\r\n     * Returns the unique identifier for the logged in account\r\n     * @param account\r\n     * @hidden\r\n     * @ignore\r\n     */\r\n    UserAgentApplication.prototype.getAccountId = function (account) {\r\n        // return `${account.accountIdentifier}` + Constants.resourceDelimiter + `${account.homeAccountIdentifier}`;\r\n        var accountId;\r\n        if (!_utils_StringUtils__WEBPACK_IMPORTED_MODULE_10__[\"StringUtils\"].isEmpty(account.homeAccountIdentifier)) {\r\n            accountId = account.homeAccountIdentifier;\r\n        }\r\n        else {\r\n            accountId = _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].no_account;\r\n        }\r\n        return accountId;\r\n    };\r\n    /**\r\n     * @ignore\r\n     * @param extraQueryParameters\r\n     *\r\n     * Construct 'tokenRequest' from the available data in adalIdToken\r\n     */\r\n    UserAgentApplication.prototype.buildIDTokenRequest = function (request) {\r\n        var tokenRequest = {\r\n            scopes: _utils_Constants__WEBPACK_IMPORTED_MODULE_27__[\"Constants\"].oidcScopes,\r\n            authority: this.authority,\r\n            account: this.getAccount(),\r\n            extraQueryParameters: request.extraQueryParameters,\r\n            correlationId: request.correlationId\r\n        };\r\n        return tokenRequest;\r\n    };\r\n    /**\r\n     * @ignore\r\n     * @param config\r\n     * @param clientId\r\n     *\r\n     * Construct TelemetryManager from Configuration\r\n     */\r\n    UserAgentApplication.prototype.getTelemetryManagerFromConfig = function (config, clientId) {\r\n        if (!config) { // if unset\r\n            return _telemetry_TelemetryManager__WEBPACK_IMPORTED_MODULE_25__[\"default\"].getTelemetrymanagerStub(clientId, this.logger);\r\n        }\r\n        // if set then validate\r\n        var applicationName = config.applicationName, applicationVersion = config.applicationVersion, telemetryEmitter = config.telemetryEmitter;\r\n        if (!applicationName || !applicationVersion || !telemetryEmitter) {\r\n            throw _error_ClientConfigurationError__WEBPACK_IMPORTED_MODULE_19__[\"ClientConfigurationError\"].createTelemetryConfigError(config);\r\n        }\r\n        // if valid then construct\r\n        var telemetryPlatform = {\r\n            applicationName: applicationName,\r\n            applicationVersion: applicationVersion\r\n        };\r\n        var telemetryManagerConfig = {\r\n            platform: telemetryPlatform,\r\n            clientId: clientId\r\n        };\r\n        return new _telemetry_TelemetryManager__WEBPACK_IMPORTED_MODULE_25__[\"default\"](telemetryManagerConfig, telemetryEmitter, this.logger);\r\n    };\r\n    return UserAgentApplication;\r\n}());\r\n\r\n//# sourceMappingURL=UserAgentApplication.js.map\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! promise-polyfill */ \"B/eG\")[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///ZES5\n");

/***/ }),

/***/ "bro/":
/*!**********************************************************!*\
  !*** ./node_modules/msal/lib-es6/authority/Authority.js ***!
  \**********************************************************/
/*! exports provided: AuthorityType, Authority */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AuthorityType\", function() { return AuthorityType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Authority\", function() { return Authority; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"mrSG\");\n/* harmony import */ var _error_ClientConfigurationError__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/ClientConfigurationError */ \"ZEID\");\n/* harmony import */ var _XHRClient__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../XHRClient */ \"5wbO\");\n/* harmony import */ var _utils_UrlUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/UrlUtils */ \"JB7q\");\n/* harmony import */ var _TrustedAuthority__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./TrustedAuthority */ \"wwyH\");\n/* harmony import */ var _utils_Constants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/Constants */ \"wmgs\");\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * @hidden\r\n */\r\nvar AuthorityType;\r\n(function (AuthorityType) {\r\n    AuthorityType[AuthorityType[\"Default\"] = 0] = \"Default\";\r\n    AuthorityType[AuthorityType[\"Adfs\"] = 1] = \"Adfs\";\r\n})(AuthorityType || (AuthorityType = {}));\r\n/**\r\n * @hidden\r\n */\r\nvar Authority = /** @class */ (function () {\r\n    function Authority(authority, validateAuthority, authorityMetadata) {\r\n        this.IsValidationEnabled = validateAuthority;\r\n        this.CanonicalAuthority = authority;\r\n        this.validateAsUri();\r\n        this.tenantDiscoveryResponse = authorityMetadata;\r\n    }\r\n    Authority.isAdfs = function (authorityUrl) {\r\n        var components = _utils_UrlUtils__WEBPACK_IMPORTED_MODULE_3__[\"UrlUtils\"].GetUrlComponents(authorityUrl);\r\n        var pathSegments = components.PathSegments;\r\n        return (pathSegments.length && pathSegments[0].toLowerCase() === _utils_Constants__WEBPACK_IMPORTED_MODULE_5__[\"Constants\"].ADFS);\r\n    };\r\n    Object.defineProperty(Authority.prototype, \"AuthorityType\", {\r\n        get: function () {\r\n            return Authority.isAdfs(this.canonicalAuthority) ? AuthorityType.Adfs : AuthorityType.Default;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"Tenant\", {\r\n        get: function () {\r\n            return this.CanonicalAuthorityUrlComponents.PathSegments[0];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"AuthorizationEndpoint\", {\r\n        get: function () {\r\n            this.validateResolved();\r\n            return this.tenantDiscoveryResponse.AuthorizationEndpoint.replace(/{tenant}|{tenantid}/g, this.Tenant);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"EndSessionEndpoint\", {\r\n        get: function () {\r\n            this.validateResolved();\r\n            return this.tenantDiscoveryResponse.EndSessionEndpoint.replace(/{tenant}|{tenantid}/g, this.Tenant);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"SelfSignedJwtAudience\", {\r\n        get: function () {\r\n            this.validateResolved();\r\n            return this.tenantDiscoveryResponse.Issuer.replace(/{tenant}|{tenantid}/g, this.Tenant);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Authority.prototype.validateResolved = function () {\r\n        if (!this.hasCachedMetadata()) {\r\n            throw \"Please call ResolveEndpointsAsync first\";\r\n        }\r\n    };\r\n    Object.defineProperty(Authority.prototype, \"CanonicalAuthority\", {\r\n        /**\r\n         * A URL that is the authority set by the developer\r\n         */\r\n        get: function () {\r\n            return this.canonicalAuthority;\r\n        },\r\n        set: function (url) {\r\n            this.canonicalAuthority = _utils_UrlUtils__WEBPACK_IMPORTED_MODULE_3__[\"UrlUtils\"].CanonicalizeUri(url);\r\n            this.canonicalAuthorityUrlComponents = null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"CanonicalAuthorityUrlComponents\", {\r\n        get: function () {\r\n            if (!this.canonicalAuthorityUrlComponents) {\r\n                this.canonicalAuthorityUrlComponents = _utils_UrlUtils__WEBPACK_IMPORTED_MODULE_3__[\"UrlUtils\"].GetUrlComponents(this.CanonicalAuthority);\r\n            }\r\n            return this.canonicalAuthorityUrlComponents;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"DefaultOpenIdConfigurationEndpoint\", {\r\n        // http://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata\r\n        get: function () {\r\n            return (this.AuthorityType === AuthorityType.Adfs) ? \"\" + this.CanonicalAuthority + _utils_Constants__WEBPACK_IMPORTED_MODULE_5__[\"WELL_KNOWN_SUFFIX\"] : this.CanonicalAuthority + \"v2.0/\" + _utils_Constants__WEBPACK_IMPORTED_MODULE_5__[\"WELL_KNOWN_SUFFIX\"];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Given a string, validate that it is of the form https://domain/path\r\n     */\r\n    Authority.prototype.validateAsUri = function () {\r\n        var components;\r\n        try {\r\n            components = this.CanonicalAuthorityUrlComponents;\r\n        }\r\n        catch (e) {\r\n            throw _error_ClientConfigurationError__WEBPACK_IMPORTED_MODULE_1__[\"ClientConfigurationErrorMessage\"].invalidAuthorityType;\r\n        }\r\n        if (!components.Protocol || components.Protocol.toLowerCase() !== \"https:\") {\r\n            throw _error_ClientConfigurationError__WEBPACK_IMPORTED_MODULE_1__[\"ClientConfigurationErrorMessage\"].authorityUriInsecure;\r\n        }\r\n        if (!components.PathSegments || components.PathSegments.length < 1) {\r\n            throw _error_ClientConfigurationError__WEBPACK_IMPORTED_MODULE_1__[\"ClientConfigurationErrorMessage\"].authorityUriInvalidPath;\r\n        }\r\n    };\r\n    /**\r\n     * Calls the OIDC endpoint and returns the response\r\n     */\r\n    Authority.prototype.DiscoverEndpoints = function (openIdConfigurationEndpoint, telemetryManager, correlationId) {\r\n        var client = new _XHRClient__WEBPACK_IMPORTED_MODULE_2__[\"XhrClient\"]();\r\n        var httpMethod = _utils_Constants__WEBPACK_IMPORTED_MODULE_5__[\"NetworkRequestType\"].GET;\r\n        var httpEvent = telemetryManager.createAndStartHttpEvent(correlationId, httpMethod, openIdConfigurationEndpoint, \"openIdConfigurationEndpoint\");\r\n        return client.sendRequestAsync(openIdConfigurationEndpoint, httpMethod, /* enableCaching: */ true)\r\n            .then(function (response) {\r\n            httpEvent.httpResponseStatus = response.statusCode;\r\n            telemetryManager.stopEvent(httpEvent);\r\n            return {\r\n                AuthorizationEndpoint: response.body.authorization_endpoint,\r\n                EndSessionEndpoint: response.body.end_session_endpoint,\r\n                Issuer: response.body.issuer\r\n            };\r\n        })\r\n            .catch(function (err) {\r\n            httpEvent.serverErrorCode = err;\r\n            telemetryManager.stopEvent(httpEvent);\r\n            throw err;\r\n        });\r\n    };\r\n    /**\r\n     * Returns a promise.\r\n     * Checks to see if the authority is in the cache\r\n     * Discover endpoints via openid-configuration\r\n     * If successful, caches the endpoint for later use in OIDC\r\n     */\r\n    Authority.prototype.resolveEndpointsAsync = function (telemetryManager, correlationId) {\r\n        return tslib__WEBPACK_IMPORTED_MODULE_0__[\"__awaiter\"](this, void 0, void 0, function () {\r\n            var host, openIdConfigurationEndpointResponse, _a;\r\n            return tslib__WEBPACK_IMPORTED_MODULE_0__[\"__generator\"](this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        if (!this.IsValidationEnabled) return [3 /*break*/, 3];\r\n                        host = this.canonicalAuthorityUrlComponents.HostNameAndPort;\r\n                        if (!(_TrustedAuthority__WEBPACK_IMPORTED_MODULE_4__[\"TrustedAuthority\"].getTrustedHostList().length === 0)) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, _TrustedAuthority__WEBPACK_IMPORTED_MODULE_4__[\"TrustedAuthority\"].setTrustedAuthoritiesFromNetwork(this.canonicalAuthority, telemetryManager, correlationId)];\r\n                    case 1:\r\n                        _b.sent();\r\n                        _b.label = 2;\r\n                    case 2:\r\n                        if (!_TrustedAuthority__WEBPACK_IMPORTED_MODULE_4__[\"TrustedAuthority\"].IsInTrustedHostList(host)) {\r\n                            throw _error_ClientConfigurationError__WEBPACK_IMPORTED_MODULE_1__[\"ClientConfigurationError\"].createUntrustedAuthorityError(host);\r\n                        }\r\n                        _b.label = 3;\r\n                    case 3:\r\n                        openIdConfigurationEndpointResponse = this.GetOpenIdConfigurationEndpoint();\r\n                        _a = this;\r\n                        return [4 /*yield*/, this.DiscoverEndpoints(openIdConfigurationEndpointResponse, telemetryManager, correlationId)];\r\n                    case 4:\r\n                        _a.tenantDiscoveryResponse = _b.sent();\r\n                        return [2 /*return*/, this.tenantDiscoveryResponse];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Checks if there is a cached tenant discovery response with required fields.\r\n     */\r\n    Authority.prototype.hasCachedMetadata = function () {\r\n        return !!(this.tenantDiscoveryResponse &&\r\n            this.tenantDiscoveryResponse.AuthorizationEndpoint &&\r\n            this.tenantDiscoveryResponse.EndSessionEndpoint &&\r\n            this.tenantDiscoveryResponse.Issuer);\r\n    };\r\n    /**\r\n     * Returns a promise which resolves to the OIDC endpoint\r\n     * Only responds with the endpoint\r\n     */\r\n    Authority.prototype.GetOpenIdConfigurationEndpoint = function () {\r\n        return this.DefaultOpenIdConfigurationEndpoint;\r\n    };\r\n    return Authority;\r\n}());\r\n\r\n//# sourceMappingURL=Authority.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///bro/\n");

/***/ }),

/***/ "iV3A":
/*!*****************************************************************!*\
  !*** ./node_modules/msal/lib-es6/cache/AccessTokenCacheItem.js ***!
  \*****************************************************************/
/*! exports provided: AccessTokenCacheItem */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AccessTokenCacheItem\", function() { return AccessTokenCacheItem; });\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * @hidden\r\n */\r\nvar AccessTokenCacheItem = /** @class */ (function () {\r\n    function AccessTokenCacheItem(key, value) {\r\n        this.key = key;\r\n        this.value = value;\r\n    }\r\n    return AccessTokenCacheItem;\r\n}());\r\n\r\n//# sourceMappingURL=AccessTokenCacheItem.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaVYzQS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9tc2FsL2xpYi1lczYvY2FjaGUvQWNjZXNzVG9rZW5DYWNoZUl0ZW0uanM/ODk1ZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuLyoqXHJcbiAqIEBoaWRkZW5cclxuICovXHJcbnZhciBBY2Nlc3NUb2tlbkNhY2hlSXRlbSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcclxuICAgIGZ1bmN0aW9uIEFjY2Vzc1Rva2VuQ2FjaGVJdGVtKGtleSwgdmFsdWUpIHtcclxuICAgICAgICB0aGlzLmtleSA9IGtleTtcclxuICAgICAgICB0aGlzLnZhbHVlID0gdmFsdWU7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gQWNjZXNzVG9rZW5DYWNoZUl0ZW07XHJcbn0oKSk7XHJcbmV4cG9ydCB7IEFjY2Vzc1Rva2VuQ2FjaGVJdGVtIH07XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUFjY2Vzc1Rva2VuQ2FjaGVJdGVtLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///iV3A\n");

/***/ }),

/***/ "wwyH":
/*!*****************************************************************!*\
  !*** ./node_modules/msal/lib-es6/authority/TrustedAuthority.js ***!
  \*****************************************************************/
/*! exports provided: TrustedAuthority */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TrustedAuthority\", function() { return TrustedAuthority; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"mrSG\");\n/* harmony import */ var _XHRClient__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../XHRClient */ \"5wbO\");\n/* harmony import */ var _utils_Constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Constants */ \"wmgs\");\n/* harmony import */ var _utils_UrlUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/UrlUtils */ \"JB7q\");\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\n\r\n\r\n\r\nvar TrustedAuthority = /** @class */ (function () {\r\n    function TrustedAuthority() {\r\n    }\r\n    /**\r\n     *\r\n     * @param validateAuthority\r\n     * @param knownAuthorities\r\n     */\r\n    TrustedAuthority.setTrustedAuthoritiesFromConfig = function (validateAuthority, knownAuthorities) {\r\n        if (validateAuthority && !this.getTrustedHostList().length) {\r\n            knownAuthorities.forEach(function (authority) {\r\n                TrustedAuthority.TrustedHostList.push(authority.toLowerCase());\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param telemetryManager\r\n     * @param correlationId\r\n     */\r\n    TrustedAuthority.getAliases = function (authorityToVerify, telemetryManager, correlationId) {\r\n        return tslib__WEBPACK_IMPORTED_MODULE_0__[\"__awaiter\"](this, void 0, void 0, function () {\r\n            var client, httpMethod, instanceDiscoveryEndpoint, httpEvent;\r\n            return tslib__WEBPACK_IMPORTED_MODULE_0__[\"__generator\"](this, function (_a) {\r\n                client = new _XHRClient__WEBPACK_IMPORTED_MODULE_1__[\"XhrClient\"]();\r\n                httpMethod = _utils_Constants__WEBPACK_IMPORTED_MODULE_2__[\"NetworkRequestType\"].GET;\r\n                instanceDiscoveryEndpoint = \"\" + _utils_Constants__WEBPACK_IMPORTED_MODULE_2__[\"AAD_INSTANCE_DISCOVERY_ENDPOINT\"] + authorityToVerify + \"oauth2/v2.0/authorize\";\r\n                httpEvent = telemetryManager.createAndStartHttpEvent(correlationId, httpMethod, instanceDiscoveryEndpoint, \"getAliases\");\r\n                return [2 /*return*/, client.sendRequestAsync(instanceDiscoveryEndpoint, httpMethod, true)\r\n                        .then(function (response) {\r\n                        httpEvent.httpResponseStatus = response.statusCode;\r\n                        telemetryManager.stopEvent(httpEvent);\r\n                        return response.body.metadata;\r\n                    })\r\n                        .catch(function (err) {\r\n                        httpEvent.serverErrorCode = err;\r\n                        telemetryManager.stopEvent(httpEvent);\r\n                        throw err;\r\n                    })];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param telemetryManager\r\n     * @param correlationId\r\n     */\r\n    TrustedAuthority.setTrustedAuthoritiesFromNetwork = function (authorityToVerify, telemetryManager, correlationId) {\r\n        return tslib__WEBPACK_IMPORTED_MODULE_0__[\"__awaiter\"](this, void 0, void 0, function () {\r\n            var metadata, host;\r\n            return tslib__WEBPACK_IMPORTED_MODULE_0__[\"__generator\"](this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getAliases(authorityToVerify, telemetryManager, correlationId)];\r\n                    case 1:\r\n                        metadata = _a.sent();\r\n                        metadata.forEach(function (entry) {\r\n                            var authorities = entry.aliases;\r\n                            authorities.forEach(function (authority) {\r\n                                TrustedAuthority.TrustedHostList.push(authority.toLowerCase());\r\n                            });\r\n                        });\r\n                        host = _utils_UrlUtils__WEBPACK_IMPORTED_MODULE_3__[\"UrlUtils\"].GetUrlComponents(authorityToVerify).HostNameAndPort;\r\n                        if (TrustedAuthority.getTrustedHostList().length && !TrustedAuthority.IsInTrustedHostList(host)) {\r\n                            // Custom Domain scenario, host is trusted because Instance Discovery call succeeded\r\n                            TrustedAuthority.TrustedHostList.push(host.toLowerCase());\r\n                        }\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    TrustedAuthority.getTrustedHostList = function () {\r\n        return this.TrustedHostList;\r\n    };\r\n    /**\r\n     * Checks to see if the host is in a list of trusted hosts\r\n     * @param host\r\n     */\r\n    TrustedAuthority.IsInTrustedHostList = function (host) {\r\n        return this.TrustedHostList.indexOf(host.toLowerCase()) > -1;\r\n    };\r\n    TrustedAuthority.TrustedHostList = [];\r\n    return TrustedAuthority;\r\n}());\r\n\r\n//# sourceMappingURL=TrustedAuthority.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid3d5SC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9tc2FsL2xpYi1lczYvYXV0aG9yaXR5L1RydXN0ZWRBdXRob3JpdHkuanM/YzMwYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuaW1wb3J0ICogYXMgdHNsaWJfMSBmcm9tIFwidHNsaWJcIjtcclxuaW1wb3J0IHsgWGhyQ2xpZW50IH0gZnJvbSBcIi4uL1hIUkNsaWVudFwiO1xyXG5pbXBvcnQgeyBBQURfSU5TVEFOQ0VfRElTQ09WRVJZX0VORFBPSU5ULCBOZXR3b3JrUmVxdWVzdFR5cGUgfSBmcm9tIFwiLi4vdXRpbHMvQ29uc3RhbnRzXCI7XHJcbmltcG9ydCB7IFVybFV0aWxzIH0gZnJvbSBcIi4uL3V0aWxzL1VybFV0aWxzXCI7XHJcbnZhciBUcnVzdGVkQXV0aG9yaXR5ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xyXG4gICAgZnVuY3Rpb24gVHJ1c3RlZEF1dGhvcml0eSgpIHtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSB2YWxpZGF0ZUF1dGhvcml0eVxyXG4gICAgICogQHBhcmFtIGtub3duQXV0aG9yaXRpZXNcclxuICAgICAqL1xyXG4gICAgVHJ1c3RlZEF1dGhvcml0eS5zZXRUcnVzdGVkQXV0aG9yaXRpZXNGcm9tQ29uZmlnID0gZnVuY3Rpb24gKHZhbGlkYXRlQXV0aG9yaXR5LCBrbm93bkF1dGhvcml0aWVzKSB7XHJcbiAgICAgICAgaWYgKHZhbGlkYXRlQXV0aG9yaXR5ICYmICF0aGlzLmdldFRydXN0ZWRIb3N0TGlzdCgpLmxlbmd0aCkge1xyXG4gICAgICAgICAgICBrbm93bkF1dGhvcml0aWVzLmZvckVhY2goZnVuY3Rpb24gKGF1dGhvcml0eSkge1xyXG4gICAgICAgICAgICAgICAgVHJ1c3RlZEF1dGhvcml0eS5UcnVzdGVkSG9zdExpc3QucHVzaChhdXRob3JpdHkudG9Mb3dlckNhc2UoKSk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICAvKipcclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gdGVsZW1ldHJ5TWFuYWdlclxyXG4gICAgICogQHBhcmFtIGNvcnJlbGF0aW9uSWRcclxuICAgICAqL1xyXG4gICAgVHJ1c3RlZEF1dGhvcml0eS5nZXRBbGlhc2VzID0gZnVuY3Rpb24gKGF1dGhvcml0eVRvVmVyaWZ5LCB0ZWxlbWV0cnlNYW5hZ2VyLCBjb3JyZWxhdGlvbklkKSB7XHJcbiAgICAgICAgcmV0dXJuIHRzbGliXzEuX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHZhciBjbGllbnQsIGh0dHBNZXRob2QsIGluc3RhbmNlRGlzY292ZXJ5RW5kcG9pbnQsIGh0dHBFdmVudDtcclxuICAgICAgICAgICAgcmV0dXJuIHRzbGliXzEuX19nZW5lcmF0b3IodGhpcywgZnVuY3Rpb24gKF9hKSB7XHJcbiAgICAgICAgICAgICAgICBjbGllbnQgPSBuZXcgWGhyQ2xpZW50KCk7XHJcbiAgICAgICAgICAgICAgICBodHRwTWV0aG9kID0gTmV0d29ya1JlcXVlc3RUeXBlLkdFVDtcclxuICAgICAgICAgICAgICAgIGluc3RhbmNlRGlzY292ZXJ5RW5kcG9pbnQgPSBcIlwiICsgQUFEX0lOU1RBTkNFX0RJU0NPVkVSWV9FTkRQT0lOVCArIGF1dGhvcml0eVRvVmVyaWZ5ICsgXCJvYXV0aDIvdjIuMC9hdXRob3JpemVcIjtcclxuICAgICAgICAgICAgICAgIGh0dHBFdmVudCA9IHRlbGVtZXRyeU1hbmFnZXIuY3JlYXRlQW5kU3RhcnRIdHRwRXZlbnQoY29ycmVsYXRpb25JZCwgaHR0cE1ldGhvZCwgaW5zdGFuY2VEaXNjb3ZlcnlFbmRwb2ludCwgXCJnZXRBbGlhc2VzXCIpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIFsyIC8qcmV0dXJuKi8sIGNsaWVudC5zZW5kUmVxdWVzdEFzeW5jKGluc3RhbmNlRGlzY292ZXJ5RW5kcG9pbnQsIGh0dHBNZXRob2QsIHRydWUpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBodHRwRXZlbnQuaHR0cFJlc3BvbnNlU3RhdHVzID0gcmVzcG9uc2Uuc3RhdHVzQ29kZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGVsZW1ldHJ5TWFuYWdlci5zdG9wRXZlbnQoaHR0cEV2ZW50KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmJvZHkubWV0YWRhdGE7XHJcbiAgICAgICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaHR0cEV2ZW50LnNlcnZlckVycm9yQ29kZSA9IGVycjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGVsZW1ldHJ5TWFuYWdlci5zdG9wRXZlbnQoaHR0cEV2ZW50KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhyb3cgZXJyO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pXTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIHRlbGVtZXRyeU1hbmFnZXJcclxuICAgICAqIEBwYXJhbSBjb3JyZWxhdGlvbklkXHJcbiAgICAgKi9cclxuICAgIFRydXN0ZWRBdXRob3JpdHkuc2V0VHJ1c3RlZEF1dGhvcml0aWVzRnJvbU5ldHdvcmsgPSBmdW5jdGlvbiAoYXV0aG9yaXR5VG9WZXJpZnksIHRlbGVtZXRyeU1hbmFnZXIsIGNvcnJlbGF0aW9uSWQpIHtcclxuICAgICAgICByZXR1cm4gdHNsaWJfMS5fX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdmFyIG1ldGFkYXRhLCBob3N0O1xyXG4gICAgICAgICAgICByZXR1cm4gdHNsaWJfMS5fX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoX2EpIHtcclxuICAgICAgICAgICAgICAgIHN3aXRjaCAoX2EubGFiZWwpIHtcclxuICAgICAgICAgICAgICAgICAgICBjYXNlIDA6IHJldHVybiBbNCAvKnlpZWxkKi8sIHRoaXMuZ2V0QWxpYXNlcyhhdXRob3JpdHlUb1ZlcmlmeSwgdGVsZW1ldHJ5TWFuYWdlciwgY29ycmVsYXRpb25JZCldO1xyXG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMTpcclxuICAgICAgICAgICAgICAgICAgICAgICAgbWV0YWRhdGEgPSBfYS5zZW50KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1ldGFkYXRhLmZvckVhY2goZnVuY3Rpb24gKGVudHJ5KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgYXV0aG9yaXRpZXMgPSBlbnRyeS5hbGlhc2VzO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYXV0aG9yaXRpZXMuZm9yRWFjaChmdW5jdGlvbiAoYXV0aG9yaXR5KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgVHJ1c3RlZEF1dGhvcml0eS5UcnVzdGVkSG9zdExpc3QucHVzaChhdXRob3JpdHkudG9Mb3dlckNhc2UoKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGhvc3QgPSBVcmxVdGlscy5HZXRVcmxDb21wb25lbnRzKGF1dGhvcml0eVRvVmVyaWZ5KS5Ib3N0TmFtZUFuZFBvcnQ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChUcnVzdGVkQXV0aG9yaXR5LmdldFRydXN0ZWRIb3N0TGlzdCgpLmxlbmd0aCAmJiAhVHJ1c3RlZEF1dGhvcml0eS5Jc0luVHJ1c3RlZEhvc3RMaXN0KGhvc3QpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBDdXN0b20gRG9tYWluIHNjZW5hcmlvLCBob3N0IGlzIHRydXN0ZWQgYmVjYXVzZSBJbnN0YW5jZSBEaXNjb3ZlcnkgY2FsbCBzdWNjZWVkZWRcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFRydXN0ZWRBdXRob3JpdHkuVHJ1c3RlZEhvc3RMaXN0LnB1c2goaG9zdC50b0xvd2VyQ2FzZSgpKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzIgLypyZXR1cm4qL107XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfTtcclxuICAgIFRydXN0ZWRBdXRob3JpdHkuZ2V0VHJ1c3RlZEhvc3RMaXN0ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLlRydXN0ZWRIb3N0TGlzdDtcclxuICAgIH07XHJcbiAgICAvKipcclxuICAgICAqIENoZWNrcyB0byBzZWUgaWYgdGhlIGhvc3QgaXMgaW4gYSBsaXN0IG9mIHRydXN0ZWQgaG9zdHNcclxuICAgICAqIEBwYXJhbSBob3N0XHJcbiAgICAgKi9cclxuICAgIFRydXN0ZWRBdXRob3JpdHkuSXNJblRydXN0ZWRIb3N0TGlzdCA9IGZ1bmN0aW9uIChob3N0KSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuVHJ1c3RlZEhvc3RMaXN0LmluZGV4T2YoaG9zdC50b0xvd2VyQ2FzZSgpKSA+IC0xO1xyXG4gICAgfTtcclxuICAgIFRydXN0ZWRBdXRob3JpdHkuVHJ1c3RlZEhvc3RMaXN0ID0gW107XHJcbiAgICByZXR1cm4gVHJ1c3RlZEF1dGhvcml0eTtcclxufSgpKTtcclxuZXhwb3J0IHsgVHJ1c3RlZEF1dGhvcml0eSB9O1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1UcnVzdGVkQXV0aG9yaXR5LmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///wwyH\n");

/***/ }),

/***/ "z2Jz":
/*!**************************************************************!*\
  !*** ./node_modules/msal/lib-es6/ServerRequestParameters.js ***!
  \**************************************************************/
/*! exports provided: ServerRequestParameters */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ServerRequestParameters\", function() { return ServerRequestParameters; });\n/* harmony import */ var _utils_CryptoUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/CryptoUtils */ \"jUVH\");\n/* harmony import */ var _utils_Constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/Constants */ \"wmgs\");\n/* harmony import */ var _utils_StringUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/StringUtils */ \"Emp/\");\n/* harmony import */ var _ScopeSet__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ScopeSet */ \"8ImU\");\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\n\r\n\r\n\r\n/**\r\n * Nonce: OIDC Nonce definition: https://openid.net/specs/openid-connect-core-1_0.html#IDToken\r\n * State: OAuth Spec: https://tools.ietf.org/html/rfc6749#section-10.12\r\n * @hidden\r\n */\r\nvar ServerRequestParameters = /** @class */ (function () {\r\n    /**\r\n     * Constructor\r\n     * @param authority\r\n     * @param clientId\r\n     * @param scope\r\n     * @param responseType\r\n     * @param redirectUri\r\n     * @param state\r\n     */\r\n    function ServerRequestParameters(authority, clientId, responseType, redirectUri, scopes, state, correlationId) {\r\n        this.authorityInstance = authority;\r\n        this.clientId = clientId;\r\n        this.nonce = _utils_CryptoUtils__WEBPACK_IMPORTED_MODULE_0__[\"CryptoUtils\"].createNewGuid();\r\n        // set scope to clientId if null\r\n        this.scopes = scopes ? scopes.slice() : _utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"Constants\"].oidcScopes;\r\n        this.scopes = _ScopeSet__WEBPACK_IMPORTED_MODULE_3__[\"ScopeSet\"].trimScopes(this.scopes);\r\n        // set state (already set at top level)\r\n        this.state = state;\r\n        // set correlationId\r\n        this.correlationId = correlationId;\r\n        // telemetry information\r\n        this.xClientSku = \"MSAL.JS\";\r\n        this.xClientVer = Object(_utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"libraryVersion\"])();\r\n        this.responseType = responseType;\r\n        this.redirectUri = redirectUri;\r\n    }\r\n    Object.defineProperty(ServerRequestParameters.prototype, \"authority\", {\r\n        get: function () {\r\n            return this.authorityInstance ? this.authorityInstance.CanonicalAuthority : null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @hidden\r\n     * @ignore\r\n     *\r\n     * Utility to populate QueryParameters and ExtraQueryParameters to ServerRequestParamerers\r\n     * @param request\r\n     * @param serverAuthenticationRequest\r\n     */\r\n    ServerRequestParameters.prototype.populateQueryParams = function (account, request, adalIdTokenObject, silentCall) {\r\n        var queryParameters = {};\r\n        if (request) {\r\n            // add the prompt parameter to serverRequestParameters if passed\r\n            if (request.prompt) {\r\n                this.promptValue = request.prompt;\r\n            }\r\n            // Add claims challenge to serverRequestParameters if passed\r\n            if (request.claimsRequest) {\r\n                this.claimsValue = request.claimsRequest;\r\n            }\r\n            // if the developer provides one of these, give preference to developer choice\r\n            if (ServerRequestParameters.isSSOParam(request)) {\r\n                queryParameters = this.constructUnifiedCacheQueryParameter(request, null);\r\n            }\r\n        }\r\n        if (adalIdTokenObject) {\r\n            queryParameters = this.constructUnifiedCacheQueryParameter(null, adalIdTokenObject);\r\n        }\r\n        /*\r\n         * adds sid/login_hint if not populated\r\n         * this.logger.verbose(\"Calling addHint parameters\");\r\n         */\r\n        queryParameters = this.addHintParameters(account, queryParameters);\r\n        // sanity check for developer passed extraQueryParameters\r\n        var eQParams = request ? request.extraQueryParameters : null;\r\n        // Populate the extraQueryParameters to be sent to the server\r\n        this.queryParameters = ServerRequestParameters.generateQueryParametersString(queryParameters);\r\n        this.extraQueryParameters = ServerRequestParameters.generateQueryParametersString(eQParams, silentCall);\r\n    };\r\n    // #region QueryParam helpers\r\n    /**\r\n     * Constructs extraQueryParameters to be sent to the server for the AuthenticationParameters set by the developer\r\n     * in any login() or acquireToken() calls\r\n     * @param idTokenObject\r\n     * @param extraQueryParameters\r\n     * @param sid\r\n     * @param loginHint\r\n     */\r\n    // TODO: check how this behaves when domain_hint only is sent in extraparameters and idToken has no upn.\r\n    ServerRequestParameters.prototype.constructUnifiedCacheQueryParameter = function (request, idTokenObject) {\r\n        // preference order: account > sid > login_hint\r\n        var ssoType;\r\n        var ssoData;\r\n        var serverReqParam = {};\r\n        // if account info is passed, account.sid > account.login_hint\r\n        if (request) {\r\n            if (request.account) {\r\n                var account = request.account;\r\n                if (account.sid) {\r\n                    ssoType = _utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"SSOTypes\"].SID;\r\n                    ssoData = account.sid;\r\n                }\r\n                else if (account.userName) {\r\n                    ssoType = _utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"SSOTypes\"].LOGIN_HINT;\r\n                    ssoData = account.userName;\r\n                }\r\n            }\r\n            // sid from request\r\n            else if (request.sid) {\r\n                ssoType = _utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"SSOTypes\"].SID;\r\n                ssoData = request.sid;\r\n            }\r\n            // loginHint from request\r\n            else if (request.loginHint) {\r\n                ssoType = _utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"SSOTypes\"].LOGIN_HINT;\r\n                ssoData = request.loginHint;\r\n            }\r\n        }\r\n        // adalIdToken retrieved from cache\r\n        else if (idTokenObject) {\r\n            if (idTokenObject.hasOwnProperty(_utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"Constants\"].upn)) {\r\n                ssoType = _utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"SSOTypes\"].ID_TOKEN;\r\n                ssoData = idTokenObject.upn;\r\n            }\r\n        }\r\n        serverReqParam = this.addSSOParameter(ssoType, ssoData);\r\n        return serverReqParam;\r\n    };\r\n    /**\r\n     * @hidden\r\n     *\r\n     * Adds login_hint to authorization URL which is used to pre-fill the username field of sign in page for the user if known ahead of time\r\n     * domain_hint if added skips the email based discovery process of the user - only supported for interactive calls in implicit_flow\r\n     * domain_req utid received as part of the clientInfo\r\n     * login_req uid received as part of clientInfo\r\n     * Also does a sanity check for extraQueryParameters passed by the user to ensure no repeat queryParameters\r\n     *\r\n     * @param {@link Account} account - Account for which the token is requested\r\n     * @param queryparams\r\n     * @param {@link ServerRequestParameters}\r\n     * @ignore\r\n     */\r\n    ServerRequestParameters.prototype.addHintParameters = function (account, qParams) {\r\n        /*\r\n         * This is a final check for all queryParams added so far; preference order: sid > login_hint\r\n         * sid cannot be passed along with login_hint or domain_hint, hence we check both are not populated yet in queryParameters\r\n         */\r\n        if (account && !qParams[_utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"SSOTypes\"].SID]) {\r\n            // sid - populate only if login_hint is not already populated and the account has sid\r\n            var populateSID = !qParams[_utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"SSOTypes\"].LOGIN_HINT] && account.sid && this.promptValue === _utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"PromptState\"].NONE;\r\n            if (populateSID) {\r\n                qParams = this.addSSOParameter(_utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"SSOTypes\"].SID, account.sid, qParams);\r\n            }\r\n            // login_hint - account.userName\r\n            else {\r\n                var populateLoginHint = !qParams[_utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"SSOTypes\"].LOGIN_HINT] && account.userName && !_utils_StringUtils__WEBPACK_IMPORTED_MODULE_2__[\"StringUtils\"].isEmpty(account.userName);\r\n                if (populateLoginHint) {\r\n                    qParams = this.addSSOParameter(_utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"SSOTypes\"].LOGIN_HINT, account.userName, qParams);\r\n                }\r\n            }\r\n        }\r\n        return qParams;\r\n    };\r\n    /**\r\n     * Add SID to extraQueryParameters\r\n     * @param sid\r\n     */\r\n    ServerRequestParameters.prototype.addSSOParameter = function (ssoType, ssoData, ssoParam) {\r\n        if (!ssoParam) {\r\n            ssoParam = {};\r\n        }\r\n        if (!ssoData) {\r\n            return ssoParam;\r\n        }\r\n        switch (ssoType) {\r\n            case _utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"SSOTypes\"].SID: {\r\n                ssoParam[_utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"SSOTypes\"].SID] = ssoData;\r\n                break;\r\n            }\r\n            case _utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"SSOTypes\"].ID_TOKEN: {\r\n                ssoParam[_utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"SSOTypes\"].LOGIN_HINT] = ssoData;\r\n                break;\r\n            }\r\n            case _utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"SSOTypes\"].LOGIN_HINT: {\r\n                ssoParam[_utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"SSOTypes\"].LOGIN_HINT] = ssoData;\r\n                break;\r\n            }\r\n        }\r\n        return ssoParam;\r\n    };\r\n    /**\r\n     * Utility to generate a QueryParameterString from a Key-Value mapping of extraQueryParameters passed\r\n     * @param extraQueryParameters\r\n     */\r\n    ServerRequestParameters.generateQueryParametersString = function (queryParameters, silentCall) {\r\n        var paramsString = null;\r\n        if (queryParameters) {\r\n            Object.keys(queryParameters).forEach(function (key) {\r\n                // sid cannot be passed along with login_hint or domain_hint\r\n                if (key === _utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"Constants\"].domain_hint && (silentCall || queryParameters[_utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"SSOTypes\"].SID])) {\r\n                    return;\r\n                }\r\n                if (paramsString == null) {\r\n                    paramsString = key + \"=\" + encodeURIComponent(queryParameters[key]);\r\n                }\r\n                else {\r\n                    paramsString += \"&\" + key + \"=\" + encodeURIComponent(queryParameters[key]);\r\n                }\r\n            });\r\n        }\r\n        return paramsString;\r\n    };\r\n    // #endregion\r\n    /**\r\n     * Check to see if there are SSO params set in the Request\r\n     * @param request\r\n     */\r\n    ServerRequestParameters.isSSOParam = function (request) {\r\n        return request && (request.account || request.sid || request.loginHint);\r\n    };\r\n    /**\r\n     * Returns the correct response_type string attribute for an acquireToken request configuration\r\n     * @param accountsMatch boolean: Determines whether the account in the request matches the cached account\r\n     * @param scopes Array<string>: AuthenticationRequest scopes configuration\r\n     * @param loginScopesOnly boolean: True if the scopes array ONLY contains the clientId or any combination of OIDC scopes, without resource scopes\r\n     */\r\n    ServerRequestParameters.determineResponseType = function (accountsMatch, scopes) {\r\n        // Supports getting an id_token by sending in clientId as only scope or OIDC scopes as only scopes\r\n        if (_ScopeSet__WEBPACK_IMPORTED_MODULE_3__[\"ScopeSet\"].onlyContainsOidcScopes(scopes)) {\r\n            return _utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"ResponseTypes\"].id_token;\r\n        }\r\n        // If accounts match, check if OIDC scopes are included, otherwise return id_token_token\r\n        return (accountsMatch) ? this.responseTypeForMatchingAccounts(scopes) : _utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"ResponseTypes\"].id_token_token;\r\n    };\r\n    /**\r\n     * Returns the correct response_type string attribute for an acquireToken request configuration that contains an\r\n     * account that matches the account in the MSAL cache.\r\n     * @param scopes Array<string>: AuthenticationRequest scopes configuration\r\n     */\r\n    ServerRequestParameters.responseTypeForMatchingAccounts = function (scopes) {\r\n        // Opt-into also requesting an ID token by sending in 'openid', 'profile' or both along with resource scopes when login is not necessary.\r\n        return (_ScopeSet__WEBPACK_IMPORTED_MODULE_3__[\"ScopeSet\"].containsAnyOidcScopes(scopes)) ? _utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"ResponseTypes\"].id_token_token : _utils_Constants__WEBPACK_IMPORTED_MODULE_1__[\"ResponseTypes\"].token;\r\n    };\r\n    return ServerRequestParameters;\r\n}());\r\n\r\n//# sourceMappingURL=ServerRequestParameters.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiejJKei5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9tc2FsL2xpYi1lczYvU2VydmVyUmVxdWVzdFBhcmFtZXRlcnMuanM/Y2Y2MiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuaW1wb3J0IHsgQ3J5cHRvVXRpbHMgfSBmcm9tIFwiLi91dGlscy9DcnlwdG9VdGlsc1wiO1xyXG5pbXBvcnQgeyBTU09UeXBlcywgQ29uc3RhbnRzLCBQcm9tcHRTdGF0ZSwgbGlicmFyeVZlcnNpb24sIFJlc3BvbnNlVHlwZXMgfSBmcm9tIFwiLi91dGlscy9Db25zdGFudHNcIjtcclxuaW1wb3J0IHsgU3RyaW5nVXRpbHMgfSBmcm9tIFwiLi91dGlscy9TdHJpbmdVdGlsc1wiO1xyXG5pbXBvcnQgeyBTY29wZVNldCB9IGZyb20gXCIuL1Njb3BlU2V0XCI7XHJcbi8qKlxyXG4gKiBOb25jZTogT0lEQyBOb25jZSBkZWZpbml0aW9uOiBodHRwczovL29wZW5pZC5uZXQvc3BlY3Mvb3BlbmlkLWNvbm5lY3QtY29yZS0xXzAuaHRtbCNJRFRva2VuXHJcbiAqIFN0YXRlOiBPQXV0aCBTcGVjOiBodHRwczovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjNjc0OSNzZWN0aW9uLTEwLjEyXHJcbiAqIEBoaWRkZW5cclxuICovXHJcbnZhciBTZXJ2ZXJSZXF1ZXN0UGFyYW1ldGVycyA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcclxuICAgIC8qKlxyXG4gICAgICogQ29uc3RydWN0b3JcclxuICAgICAqIEBwYXJhbSBhdXRob3JpdHlcclxuICAgICAqIEBwYXJhbSBjbGllbnRJZFxyXG4gICAgICogQHBhcmFtIHNjb3BlXHJcbiAgICAgKiBAcGFyYW0gcmVzcG9uc2VUeXBlXHJcbiAgICAgKiBAcGFyYW0gcmVkaXJlY3RVcmlcclxuICAgICAqIEBwYXJhbSBzdGF0ZVxyXG4gICAgICovXHJcbiAgICBmdW5jdGlvbiBTZXJ2ZXJSZXF1ZXN0UGFyYW1ldGVycyhhdXRob3JpdHksIGNsaWVudElkLCByZXNwb25zZVR5cGUsIHJlZGlyZWN0VXJpLCBzY29wZXMsIHN0YXRlLCBjb3JyZWxhdGlvbklkKSB7XHJcbiAgICAgICAgdGhpcy5hdXRob3JpdHlJbnN0YW5jZSA9IGF1dGhvcml0eTtcclxuICAgICAgICB0aGlzLmNsaWVudElkID0gY2xpZW50SWQ7XHJcbiAgICAgICAgdGhpcy5ub25jZSA9IENyeXB0b1V0aWxzLmNyZWF0ZU5ld0d1aWQoKTtcclxuICAgICAgICAvLyBzZXQgc2NvcGUgdG8gY2xpZW50SWQgaWYgbnVsbFxyXG4gICAgICAgIHRoaXMuc2NvcGVzID0gc2NvcGVzID8gc2NvcGVzLnNsaWNlKCkgOiBDb25zdGFudHMub2lkY1Njb3BlcztcclxuICAgICAgICB0aGlzLnNjb3BlcyA9IFNjb3BlU2V0LnRyaW1TY29wZXModGhpcy5zY29wZXMpO1xyXG4gICAgICAgIC8vIHNldCBzdGF0ZSAoYWxyZWFkeSBzZXQgYXQgdG9wIGxldmVsKVxyXG4gICAgICAgIHRoaXMuc3RhdGUgPSBzdGF0ZTtcclxuICAgICAgICAvLyBzZXQgY29ycmVsYXRpb25JZFxyXG4gICAgICAgIHRoaXMuY29ycmVsYXRpb25JZCA9IGNvcnJlbGF0aW9uSWQ7XHJcbiAgICAgICAgLy8gdGVsZW1ldHJ5IGluZm9ybWF0aW9uXHJcbiAgICAgICAgdGhpcy54Q2xpZW50U2t1ID0gXCJNU0FMLkpTXCI7XHJcbiAgICAgICAgdGhpcy54Q2xpZW50VmVyID0gbGlicmFyeVZlcnNpb24oKTtcclxuICAgICAgICB0aGlzLnJlc3BvbnNlVHlwZSA9IHJlc3BvbnNlVHlwZTtcclxuICAgICAgICB0aGlzLnJlZGlyZWN0VXJpID0gcmVkaXJlY3RVcmk7XHJcbiAgICB9XHJcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoU2VydmVyUmVxdWVzdFBhcmFtZXRlcnMucHJvdG90eXBlLCBcImF1dGhvcml0eVwiLCB7XHJcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmF1dGhvcml0eUluc3RhbmNlID8gdGhpcy5hdXRob3JpdHlJbnN0YW5jZS5DYW5vbmljYWxBdXRob3JpdHkgOiBudWxsO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcclxuICAgIH0pO1xyXG4gICAgLyoqXHJcbiAgICAgKiBAaGlkZGVuXHJcbiAgICAgKiBAaWdub3JlXHJcbiAgICAgKlxyXG4gICAgICogVXRpbGl0eSB0byBwb3B1bGF0ZSBRdWVyeVBhcmFtZXRlcnMgYW5kIEV4dHJhUXVlcnlQYXJhbWV0ZXJzIHRvIFNlcnZlclJlcXVlc3RQYXJhbWVyZXJzXHJcbiAgICAgKiBAcGFyYW0gcmVxdWVzdFxyXG4gICAgICogQHBhcmFtIHNlcnZlckF1dGhlbnRpY2F0aW9uUmVxdWVzdFxyXG4gICAgICovXHJcbiAgICBTZXJ2ZXJSZXF1ZXN0UGFyYW1ldGVycy5wcm90b3R5cGUucG9wdWxhdGVRdWVyeVBhcmFtcyA9IGZ1bmN0aW9uIChhY2NvdW50LCByZXF1ZXN0LCBhZGFsSWRUb2tlbk9iamVjdCwgc2lsZW50Q2FsbCkge1xyXG4gICAgICAgIHZhciBxdWVyeVBhcmFtZXRlcnMgPSB7fTtcclxuICAgICAgICBpZiAocmVxdWVzdCkge1xyXG4gICAgICAgICAgICAvLyBhZGQgdGhlIHByb21wdCBwYXJhbWV0ZXIgdG8gc2VydmVyUmVxdWVzdFBhcmFtZXRlcnMgaWYgcGFzc2VkXHJcbiAgICAgICAgICAgIGlmIChyZXF1ZXN0LnByb21wdCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5wcm9tcHRWYWx1ZSA9IHJlcXVlc3QucHJvbXB0O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC8vIEFkZCBjbGFpbXMgY2hhbGxlbmdlIHRvIHNlcnZlclJlcXVlc3RQYXJhbWV0ZXJzIGlmIHBhc3NlZFxyXG4gICAgICAgICAgICBpZiAocmVxdWVzdC5jbGFpbXNSZXF1ZXN0KSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNsYWltc1ZhbHVlID0gcmVxdWVzdC5jbGFpbXNSZXF1ZXN0O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC8vIGlmIHRoZSBkZXZlbG9wZXIgcHJvdmlkZXMgb25lIG9mIHRoZXNlLCBnaXZlIHByZWZlcmVuY2UgdG8gZGV2ZWxvcGVyIGNob2ljZVxyXG4gICAgICAgICAgICBpZiAoU2VydmVyUmVxdWVzdFBhcmFtZXRlcnMuaXNTU09QYXJhbShyZXF1ZXN0KSkge1xyXG4gICAgICAgICAgICAgICAgcXVlcnlQYXJhbWV0ZXJzID0gdGhpcy5jb25zdHJ1Y3RVbmlmaWVkQ2FjaGVRdWVyeVBhcmFtZXRlcihyZXF1ZXN0LCBudWxsKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoYWRhbElkVG9rZW5PYmplY3QpIHtcclxuICAgICAgICAgICAgcXVlcnlQYXJhbWV0ZXJzID0gdGhpcy5jb25zdHJ1Y3RVbmlmaWVkQ2FjaGVRdWVyeVBhcmFtZXRlcihudWxsLCBhZGFsSWRUb2tlbk9iamVjdCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8qXHJcbiAgICAgICAgICogYWRkcyBzaWQvbG9naW5faGludCBpZiBub3QgcG9wdWxhdGVkXHJcbiAgICAgICAgICogdGhpcy5sb2dnZXIudmVyYm9zZShcIkNhbGxpbmcgYWRkSGludCBwYXJhbWV0ZXJzXCIpO1xyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHF1ZXJ5UGFyYW1ldGVycyA9IHRoaXMuYWRkSGludFBhcmFtZXRlcnMoYWNjb3VudCwgcXVlcnlQYXJhbWV0ZXJzKTtcclxuICAgICAgICAvLyBzYW5pdHkgY2hlY2sgZm9yIGRldmVsb3BlciBwYXNzZWQgZXh0cmFRdWVyeVBhcmFtZXRlcnNcclxuICAgICAgICB2YXIgZVFQYXJhbXMgPSByZXF1ZXN0ID8gcmVxdWVzdC5leHRyYVF1ZXJ5UGFyYW1ldGVycyA6IG51bGw7XHJcbiAgICAgICAgLy8gUG9wdWxhdGUgdGhlIGV4dHJhUXVlcnlQYXJhbWV0ZXJzIHRvIGJlIHNlbnQgdG8gdGhlIHNlcnZlclxyXG4gICAgICAgIHRoaXMucXVlcnlQYXJhbWV0ZXJzID0gU2VydmVyUmVxdWVzdFBhcmFtZXRlcnMuZ2VuZXJhdGVRdWVyeVBhcmFtZXRlcnNTdHJpbmcocXVlcnlQYXJhbWV0ZXJzKTtcclxuICAgICAgICB0aGlzLmV4dHJhUXVlcnlQYXJhbWV0ZXJzID0gU2VydmVyUmVxdWVzdFBhcmFtZXRlcnMuZ2VuZXJhdGVRdWVyeVBhcmFtZXRlcnNTdHJpbmcoZVFQYXJhbXMsIHNpbGVudENhbGwpO1xyXG4gICAgfTtcclxuICAgIC8vICNyZWdpb24gUXVlcnlQYXJhbSBoZWxwZXJzXHJcbiAgICAvKipcclxuICAgICAqIENvbnN0cnVjdHMgZXh0cmFRdWVyeVBhcmFtZXRlcnMgdG8gYmUgc2VudCB0byB0aGUgc2VydmVyIGZvciB0aGUgQXV0aGVudGljYXRpb25QYXJhbWV0ZXJzIHNldCBieSB0aGUgZGV2ZWxvcGVyXHJcbiAgICAgKiBpbiBhbnkgbG9naW4oKSBvciBhY3F1aXJlVG9rZW4oKSBjYWxsc1xyXG4gICAgICogQHBhcmFtIGlkVG9rZW5PYmplY3RcclxuICAgICAqIEBwYXJhbSBleHRyYVF1ZXJ5UGFyYW1ldGVyc1xyXG4gICAgICogQHBhcmFtIHNpZFxyXG4gICAgICogQHBhcmFtIGxvZ2luSGludFxyXG4gICAgICovXHJcbiAgICAvLyBUT0RPOiBjaGVjayBob3cgdGhpcyBiZWhhdmVzIHdoZW4gZG9tYWluX2hpbnQgb25seSBpcyBzZW50IGluIGV4dHJhcGFyYW1ldGVycyBhbmQgaWRUb2tlbiBoYXMgbm8gdXBuLlxyXG4gICAgU2VydmVyUmVxdWVzdFBhcmFtZXRlcnMucHJvdG90eXBlLmNvbnN0cnVjdFVuaWZpZWRDYWNoZVF1ZXJ5UGFyYW1ldGVyID0gZnVuY3Rpb24gKHJlcXVlc3QsIGlkVG9rZW5PYmplY3QpIHtcclxuICAgICAgICAvLyBwcmVmZXJlbmNlIG9yZGVyOiBhY2NvdW50ID4gc2lkID4gbG9naW5faGludFxyXG4gICAgICAgIHZhciBzc29UeXBlO1xyXG4gICAgICAgIHZhciBzc29EYXRhO1xyXG4gICAgICAgIHZhciBzZXJ2ZXJSZXFQYXJhbSA9IHt9O1xyXG4gICAgICAgIC8vIGlmIGFjY291bnQgaW5mbyBpcyBwYXNzZWQsIGFjY291bnQuc2lkID4gYWNjb3VudC5sb2dpbl9oaW50XHJcbiAgICAgICAgaWYgKHJlcXVlc3QpIHtcclxuICAgICAgICAgICAgaWYgKHJlcXVlc3QuYWNjb3VudCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIGFjY291bnQgPSByZXF1ZXN0LmFjY291bnQ7XHJcbiAgICAgICAgICAgICAgICBpZiAoYWNjb3VudC5zaWQpIHtcclxuICAgICAgICAgICAgICAgICAgICBzc29UeXBlID0gU1NPVHlwZXMuU0lEO1xyXG4gICAgICAgICAgICAgICAgICAgIHNzb0RhdGEgPSBhY2NvdW50LnNpZDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKGFjY291bnQudXNlck5hbWUpIHtcclxuICAgICAgICAgICAgICAgICAgICBzc29UeXBlID0gU1NPVHlwZXMuTE9HSU5fSElOVDtcclxuICAgICAgICAgICAgICAgICAgICBzc29EYXRhID0gYWNjb3VudC51c2VyTmFtZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAvLyBzaWQgZnJvbSByZXF1ZXN0XHJcbiAgICAgICAgICAgIGVsc2UgaWYgKHJlcXVlc3Quc2lkKSB7XHJcbiAgICAgICAgICAgICAgICBzc29UeXBlID0gU1NPVHlwZXMuU0lEO1xyXG4gICAgICAgICAgICAgICAgc3NvRGF0YSA9IHJlcXVlc3Quc2lkO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC8vIGxvZ2luSGludCBmcm9tIHJlcXVlc3RcclxuICAgICAgICAgICAgZWxzZSBpZiAocmVxdWVzdC5sb2dpbkhpbnQpIHtcclxuICAgICAgICAgICAgICAgIHNzb1R5cGUgPSBTU09UeXBlcy5MT0dJTl9ISU5UO1xyXG4gICAgICAgICAgICAgICAgc3NvRGF0YSA9IHJlcXVlc3QubG9naW5IaW50O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIGFkYWxJZFRva2VuIHJldHJpZXZlZCBmcm9tIGNhY2hlXHJcbiAgICAgICAgZWxzZSBpZiAoaWRUb2tlbk9iamVjdCkge1xyXG4gICAgICAgICAgICBpZiAoaWRUb2tlbk9iamVjdC5oYXNPd25Qcm9wZXJ0eShDb25zdGFudHMudXBuKSkge1xyXG4gICAgICAgICAgICAgICAgc3NvVHlwZSA9IFNTT1R5cGVzLklEX1RPS0VOO1xyXG4gICAgICAgICAgICAgICAgc3NvRGF0YSA9IGlkVG9rZW5PYmplY3QudXBuO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHNlcnZlclJlcVBhcmFtID0gdGhpcy5hZGRTU09QYXJhbWV0ZXIoc3NvVHlwZSwgc3NvRGF0YSk7XHJcbiAgICAgICAgcmV0dXJuIHNlcnZlclJlcVBhcmFtO1xyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICogQGhpZGRlblxyXG4gICAgICpcclxuICAgICAqIEFkZHMgbG9naW5faGludCB0byBhdXRob3JpemF0aW9uIFVSTCB3aGljaCBpcyB1c2VkIHRvIHByZS1maWxsIHRoZSB1c2VybmFtZSBmaWVsZCBvZiBzaWduIGluIHBhZ2UgZm9yIHRoZSB1c2VyIGlmIGtub3duIGFoZWFkIG9mIHRpbWVcclxuICAgICAqIGRvbWFpbl9oaW50IGlmIGFkZGVkIHNraXBzIHRoZSBlbWFpbCBiYXNlZCBkaXNjb3ZlcnkgcHJvY2VzcyBvZiB0aGUgdXNlciAtIG9ubHkgc3VwcG9ydGVkIGZvciBpbnRlcmFjdGl2ZSBjYWxscyBpbiBpbXBsaWNpdF9mbG93XHJcbiAgICAgKiBkb21haW5fcmVxIHV0aWQgcmVjZWl2ZWQgYXMgcGFydCBvZiB0aGUgY2xpZW50SW5mb1xyXG4gICAgICogbG9naW5fcmVxIHVpZCByZWNlaXZlZCBhcyBwYXJ0IG9mIGNsaWVudEluZm9cclxuICAgICAqIEFsc28gZG9lcyBhIHNhbml0eSBjaGVjayBmb3IgZXh0cmFRdWVyeVBhcmFtZXRlcnMgcGFzc2VkIGJ5IHRoZSB1c2VyIHRvIGVuc3VyZSBubyByZXBlYXQgcXVlcnlQYXJhbWV0ZXJzXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIHtAbGluayBBY2NvdW50fSBhY2NvdW50IC0gQWNjb3VudCBmb3Igd2hpY2ggdGhlIHRva2VuIGlzIHJlcXVlc3RlZFxyXG4gICAgICogQHBhcmFtIHF1ZXJ5cGFyYW1zXHJcbiAgICAgKiBAcGFyYW0ge0BsaW5rIFNlcnZlclJlcXVlc3RQYXJhbWV0ZXJzfVxyXG4gICAgICogQGlnbm9yZVxyXG4gICAgICovXHJcbiAgICBTZXJ2ZXJSZXF1ZXN0UGFyYW1ldGVycy5wcm90b3R5cGUuYWRkSGludFBhcmFtZXRlcnMgPSBmdW5jdGlvbiAoYWNjb3VudCwgcVBhcmFtcykge1xyXG4gICAgICAgIC8qXHJcbiAgICAgICAgICogVGhpcyBpcyBhIGZpbmFsIGNoZWNrIGZvciBhbGwgcXVlcnlQYXJhbXMgYWRkZWQgc28gZmFyOyBwcmVmZXJlbmNlIG9yZGVyOiBzaWQgPiBsb2dpbl9oaW50XHJcbiAgICAgICAgICogc2lkIGNhbm5vdCBiZSBwYXNzZWQgYWxvbmcgd2l0aCBsb2dpbl9oaW50IG9yIGRvbWFpbl9oaW50LCBoZW5jZSB3ZSBjaGVjayBib3RoIGFyZSBub3QgcG9wdWxhdGVkIHlldCBpbiBxdWVyeVBhcmFtZXRlcnNcclxuICAgICAgICAgKi9cclxuICAgICAgICBpZiAoYWNjb3VudCAmJiAhcVBhcmFtc1tTU09UeXBlcy5TSURdKSB7XHJcbiAgICAgICAgICAgIC8vIHNpZCAtIHBvcHVsYXRlIG9ubHkgaWYgbG9naW5faGludCBpcyBub3QgYWxyZWFkeSBwb3B1bGF0ZWQgYW5kIHRoZSBhY2NvdW50IGhhcyBzaWRcclxuICAgICAgICAgICAgdmFyIHBvcHVsYXRlU0lEID0gIXFQYXJhbXNbU1NPVHlwZXMuTE9HSU5fSElOVF0gJiYgYWNjb3VudC5zaWQgJiYgdGhpcy5wcm9tcHRWYWx1ZSA9PT0gUHJvbXB0U3RhdGUuTk9ORTtcclxuICAgICAgICAgICAgaWYgKHBvcHVsYXRlU0lEKSB7XHJcbiAgICAgICAgICAgICAgICBxUGFyYW1zID0gdGhpcy5hZGRTU09QYXJhbWV0ZXIoU1NPVHlwZXMuU0lELCBhY2NvdW50LnNpZCwgcVBhcmFtcyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLy8gbG9naW5faGludCAtIGFjY291bnQudXNlck5hbWVcclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgcG9wdWxhdGVMb2dpbkhpbnQgPSAhcVBhcmFtc1tTU09UeXBlcy5MT0dJTl9ISU5UXSAmJiBhY2NvdW50LnVzZXJOYW1lICYmICFTdHJpbmdVdGlscy5pc0VtcHR5KGFjY291bnQudXNlck5hbWUpO1xyXG4gICAgICAgICAgICAgICAgaWYgKHBvcHVsYXRlTG9naW5IaW50KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcVBhcmFtcyA9IHRoaXMuYWRkU1NPUGFyYW1ldGVyKFNTT1R5cGVzLkxPR0lOX0hJTlQsIGFjY291bnQudXNlck5hbWUsIHFQYXJhbXMpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBxUGFyYW1zO1xyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICogQWRkIFNJRCB0byBleHRyYVF1ZXJ5UGFyYW1ldGVyc1xyXG4gICAgICogQHBhcmFtIHNpZFxyXG4gICAgICovXHJcbiAgICBTZXJ2ZXJSZXF1ZXN0UGFyYW1ldGVycy5wcm90b3R5cGUuYWRkU1NPUGFyYW1ldGVyID0gZnVuY3Rpb24gKHNzb1R5cGUsIHNzb0RhdGEsIHNzb1BhcmFtKSB7XHJcbiAgICAgICAgaWYgKCFzc29QYXJhbSkge1xyXG4gICAgICAgICAgICBzc29QYXJhbSA9IHt9O1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoIXNzb0RhdGEpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHNzb1BhcmFtO1xyXG4gICAgICAgIH1cclxuICAgICAgICBzd2l0Y2ggKHNzb1R5cGUpIHtcclxuICAgICAgICAgICAgY2FzZSBTU09UeXBlcy5TSUQ6IHtcclxuICAgICAgICAgICAgICAgIHNzb1BhcmFtW1NTT1R5cGVzLlNJRF0gPSBzc29EYXRhO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY2FzZSBTU09UeXBlcy5JRF9UT0tFTjoge1xyXG4gICAgICAgICAgICAgICAgc3NvUGFyYW1bU1NPVHlwZXMuTE9HSU5fSElOVF0gPSBzc29EYXRhO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY2FzZSBTU09UeXBlcy5MT0dJTl9ISU5UOiB7XHJcbiAgICAgICAgICAgICAgICBzc29QYXJhbVtTU09UeXBlcy5MT0dJTl9ISU5UXSA9IHNzb0RhdGE7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gc3NvUGFyYW07XHJcbiAgICB9O1xyXG4gICAgLyoqXHJcbiAgICAgKiBVdGlsaXR5IHRvIGdlbmVyYXRlIGEgUXVlcnlQYXJhbWV0ZXJTdHJpbmcgZnJvbSBhIEtleS1WYWx1ZSBtYXBwaW5nIG9mIGV4dHJhUXVlcnlQYXJhbWV0ZXJzIHBhc3NlZFxyXG4gICAgICogQHBhcmFtIGV4dHJhUXVlcnlQYXJhbWV0ZXJzXHJcbiAgICAgKi9cclxuICAgIFNlcnZlclJlcXVlc3RQYXJhbWV0ZXJzLmdlbmVyYXRlUXVlcnlQYXJhbWV0ZXJzU3RyaW5nID0gZnVuY3Rpb24gKHF1ZXJ5UGFyYW1ldGVycywgc2lsZW50Q2FsbCkge1xyXG4gICAgICAgIHZhciBwYXJhbXNTdHJpbmcgPSBudWxsO1xyXG4gICAgICAgIGlmIChxdWVyeVBhcmFtZXRlcnMpIHtcclxuICAgICAgICAgICAgT2JqZWN0LmtleXMocXVlcnlQYXJhbWV0ZXJzKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcclxuICAgICAgICAgICAgICAgIC8vIHNpZCBjYW5ub3QgYmUgcGFzc2VkIGFsb25nIHdpdGggbG9naW5faGludCBvciBkb21haW5faGludFxyXG4gICAgICAgICAgICAgICAgaWYgKGtleSA9PT0gQ29uc3RhbnRzLmRvbWFpbl9oaW50ICYmIChzaWxlbnRDYWxsIHx8IHF1ZXJ5UGFyYW1ldGVyc1tTU09UeXBlcy5TSURdKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmIChwYXJhbXNTdHJpbmcgPT0gbnVsbCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHBhcmFtc1N0cmluZyA9IGtleSArIFwiPVwiICsgZW5jb2RlVVJJQ29tcG9uZW50KHF1ZXJ5UGFyYW1ldGVyc1trZXldKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHBhcmFtc1N0cmluZyArPSBcIiZcIiArIGtleSArIFwiPVwiICsgZW5jb2RlVVJJQ29tcG9uZW50KHF1ZXJ5UGFyYW1ldGVyc1trZXldKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBwYXJhbXNTdHJpbmc7XHJcbiAgICB9O1xyXG4gICAgLy8gI2VuZHJlZ2lvblxyXG4gICAgLyoqXHJcbiAgICAgKiBDaGVjayB0byBzZWUgaWYgdGhlcmUgYXJlIFNTTyBwYXJhbXMgc2V0IGluIHRoZSBSZXF1ZXN0XHJcbiAgICAgKiBAcGFyYW0gcmVxdWVzdFxyXG4gICAgICovXHJcbiAgICBTZXJ2ZXJSZXF1ZXN0UGFyYW1ldGVycy5pc1NTT1BhcmFtID0gZnVuY3Rpb24gKHJlcXVlc3QpIHtcclxuICAgICAgICByZXR1cm4gcmVxdWVzdCAmJiAocmVxdWVzdC5hY2NvdW50IHx8IHJlcXVlc3Quc2lkIHx8IHJlcXVlc3QubG9naW5IaW50KTtcclxuICAgIH07XHJcbiAgICAvKipcclxuICAgICAqIFJldHVybnMgdGhlIGNvcnJlY3QgcmVzcG9uc2VfdHlwZSBzdHJpbmcgYXR0cmlidXRlIGZvciBhbiBhY3F1aXJlVG9rZW4gcmVxdWVzdCBjb25maWd1cmF0aW9uXHJcbiAgICAgKiBAcGFyYW0gYWNjb3VudHNNYXRjaCBib29sZWFuOiBEZXRlcm1pbmVzIHdoZXRoZXIgdGhlIGFjY291bnQgaW4gdGhlIHJlcXVlc3QgbWF0Y2hlcyB0aGUgY2FjaGVkIGFjY291bnRcclxuICAgICAqIEBwYXJhbSBzY29wZXMgQXJyYXk8c3RyaW5nPjogQXV0aGVudGljYXRpb25SZXF1ZXN0IHNjb3BlcyBjb25maWd1cmF0aW9uXHJcbiAgICAgKiBAcGFyYW0gbG9naW5TY29wZXNPbmx5IGJvb2xlYW46IFRydWUgaWYgdGhlIHNjb3BlcyBhcnJheSBPTkxZIGNvbnRhaW5zIHRoZSBjbGllbnRJZCBvciBhbnkgY29tYmluYXRpb24gb2YgT0lEQyBzY29wZXMsIHdpdGhvdXQgcmVzb3VyY2Ugc2NvcGVzXHJcbiAgICAgKi9cclxuICAgIFNlcnZlclJlcXVlc3RQYXJhbWV0ZXJzLmRldGVybWluZVJlc3BvbnNlVHlwZSA9IGZ1bmN0aW9uIChhY2NvdW50c01hdGNoLCBzY29wZXMpIHtcclxuICAgICAgICAvLyBTdXBwb3J0cyBnZXR0aW5nIGFuIGlkX3Rva2VuIGJ5IHNlbmRpbmcgaW4gY2xpZW50SWQgYXMgb25seSBzY29wZSBvciBPSURDIHNjb3BlcyBhcyBvbmx5IHNjb3Blc1xyXG4gICAgICAgIGlmIChTY29wZVNldC5vbmx5Q29udGFpbnNPaWRjU2NvcGVzKHNjb3BlcykpIHtcclxuICAgICAgICAgICAgcmV0dXJuIFJlc3BvbnNlVHlwZXMuaWRfdG9rZW47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIElmIGFjY291bnRzIG1hdGNoLCBjaGVjayBpZiBPSURDIHNjb3BlcyBhcmUgaW5jbHVkZWQsIG90aGVyd2lzZSByZXR1cm4gaWRfdG9rZW5fdG9rZW5cclxuICAgICAgICByZXR1cm4gKGFjY291bnRzTWF0Y2gpID8gdGhpcy5yZXNwb25zZVR5cGVGb3JNYXRjaGluZ0FjY291bnRzKHNjb3BlcykgOiBSZXNwb25zZVR5cGVzLmlkX3Rva2VuX3Rva2VuO1xyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyB0aGUgY29ycmVjdCByZXNwb25zZV90eXBlIHN0cmluZyBhdHRyaWJ1dGUgZm9yIGFuIGFjcXVpcmVUb2tlbiByZXF1ZXN0IGNvbmZpZ3VyYXRpb24gdGhhdCBjb250YWlucyBhblxyXG4gICAgICogYWNjb3VudCB0aGF0IG1hdGNoZXMgdGhlIGFjY291bnQgaW4gdGhlIE1TQUwgY2FjaGUuXHJcbiAgICAgKiBAcGFyYW0gc2NvcGVzIEFycmF5PHN0cmluZz46IEF1dGhlbnRpY2F0aW9uUmVxdWVzdCBzY29wZXMgY29uZmlndXJhdGlvblxyXG4gICAgICovXHJcbiAgICBTZXJ2ZXJSZXF1ZXN0UGFyYW1ldGVycy5yZXNwb25zZVR5cGVGb3JNYXRjaGluZ0FjY291bnRzID0gZnVuY3Rpb24gKHNjb3Blcykge1xyXG4gICAgICAgIC8vIE9wdC1pbnRvIGFsc28gcmVxdWVzdGluZyBhbiBJRCB0b2tlbiBieSBzZW5kaW5nIGluICdvcGVuaWQnLCAncHJvZmlsZScgb3IgYm90aCBhbG9uZyB3aXRoIHJlc291cmNlIHNjb3BlcyB3aGVuIGxvZ2luIGlzIG5vdCBuZWNlc3NhcnkuXHJcbiAgICAgICAgcmV0dXJuIChTY29wZVNldC5jb250YWluc0FueU9pZGNTY29wZXMoc2NvcGVzKSkgPyBSZXNwb25zZVR5cGVzLmlkX3Rva2VuX3Rva2VuIDogUmVzcG9uc2VUeXBlcy50b2tlbjtcclxuICAgIH07XHJcbiAgICByZXR1cm4gU2VydmVyUmVxdWVzdFBhcmFtZXRlcnM7XHJcbn0oKSk7XHJcbmV4cG9ydCB7IFNlcnZlclJlcXVlc3RQYXJhbWV0ZXJzIH07XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNlcnZlclJlcXVlc3RQYXJhbWV0ZXJzLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///z2Jz\n");

/***/ })

}]);